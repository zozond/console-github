swagger: '2.0'
info:
  version: 0.0.0
  title: Elasticsearch swagger documentation
paths:
  /_cat/aliases:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAliasesResponse/properties/records'
      tags:
        - cat.aliases
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html'
  '/_cat/aliases/{name}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAliasesResponse/properties/records'
      tags:
        - cat.aliases
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: A comma-separated list of alias names to return
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html'
  /_cat/allocation:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAllocationResponse/properties/records'
      tags:
        - cat.allocation
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html'
  '/_cat/allocation/{node_id}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAllocationResponse/properties/records'
      tags:
        - cat.allocation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: A comma-separated list of node IDs or names to limit the returned information
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html'
  /_cat/count:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatCountResponse/properties/records'
      tags:
        - cat.count
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html'
  '/_cat/count/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatCountResponse/properties/records'
      tags:
        - cat.count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html'
  /_cat/fielddata:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return in the output
        type: string
        format: Fields
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatFielddataResponse/properties/records'
      tags:
        - cat.fielddata
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html'
  '/_cat/fielddata/{fields}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return in the output
        type: string
        format: Fields
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatFielddataResponse/properties/records'
      tags:
        - cat.fielddata
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields to return the fielddata size
          type: string
          format: Fields
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html'
  /_cat/health:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: ts
        description: Set to false to disable timestamping
        type: boolean
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatHealthResponse/properties/records'
      tags:
        - cat.health
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html'
  /_cat:
    parameters:
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatHelpResponse/properties/records'
      tags:
        - cat.help
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html'
  /_cat/indices:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: health
        description: 'A health status ("green", "yellow", or "red" to filter only indices matching the specified health status'
        type: string
        format: health
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: pri
        description: Set to true to return stats only for primary shards
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
      - in: query
        name: include_unloaded_segments
        description: If set to true segment stats will include stats for segments that are not currently loaded into memory
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatIndicesResponse/properties/records'
      tags:
        - cat.indices
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html'
  '/_cat/indices/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: health
        description: 'A health status ("green", "yellow", or "red" to filter only indices matching the specified health status'
        type: string
        format: health
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: pri
        description: Set to true to return stats only for primary shards
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
      - in: query
        name: include_unloaded_segments
        description: If set to true segment stats will include stats for segments that are not currently loaded into memory
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatIndicesResponse/properties/records'
      tags:
        - cat.indices
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html'
  /_cat/master:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatMasterResponse/properties/records'
      tags:
        - cat.master
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html'
  /_cat/nodeattrs:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatNodeAttributesResponse/properties/records'
      tags:
        - cat.nodeattrs
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html'
  /_cat/nodes:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: full_id
        description: 'Return the full node ID instead of the shortened version (default: false)'
        type: boolean
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatNodesResponse/properties/records'
      tags:
        - cat.nodes
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html'
  /_cat/pending_tasks:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatPendingTasksResponse/properties/records'
      tags:
        - cat.pending_tasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html'
  /_cat/plugins:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatPluginsResponse/properties/records'
      tags:
        - cat.plugins
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html'
  /_cat/recovery:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatRecoveryResponse/properties/records'
      tags:
        - cat.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html'
  '/_cat/recovery/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatRecoveryResponse/properties/records'
      tags:
        - cat.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html'
  /_cat/repositories:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatRepositoriesResponse/properties/records'
      tags:
        - cat.repositories
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html'
  /_cat/segments:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSegmentsResponse/properties/records'
      tags:
        - cat.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html'
  '/_cat/segments/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSegmentsResponse/properties/records'
      tags:
        - cat.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html'
  /_cat/shards:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatShardsResponse/properties/records'
      tags:
        - cat.shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html'
  '/_cat/shards/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatShardsResponse/properties/records'
      tags:
        - cat.shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html'
  /_cat/snapshots:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: ignore_unavailable
        description: Set to true to ignore unavailable snapshots
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSnapshotsResponse/properties/records'
      tags:
        - cat.snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html'
  '/_cat/snapshots/{repository}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: ignore_unavailable
        description: Set to true to ignore unavailable snapshots
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSnapshotsResponse/properties/records'
      tags:
        - cat.snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: Name of repository from which to fetch the snapshot information
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html'
  /_cat/tasks:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: node_id
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be returned. Leave empty to return all.
        type: string
      - in: query
        name: detailed
        description: 'Return detailed task information (default: false)'
        type: boolean
      - in: query
        name: parent_task
        description: Return tasks with specified parent task id. Set to -1 to return all.
        type: integer
        format: long
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatTasksResponse/properties/records'
      tags:
        - cat.tasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  /_cat/templates:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatTemplatesResponse/properties/records'
      tags:
        - cat.templates
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html'
  '/_cat/templates/{name}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatTemplatesResponse/properties/records'
      tags:
        - cat.templates
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: A pattern that returned template names must match
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html'
  /_cat/thread_pool:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: size
        description: The multiplier in which to display values
        type: string
        format: size
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatThreadPoolResponse/properties/records'
      tags:
        - cat.thread_pool
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html'
  '/_cat/thread_pool/{thread_pool_patterns}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: size
        description: The multiplier in which to display values
        type: string
        format: size
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatThreadPoolResponse/properties/records'
      tags:
        - cat.thread_pool
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: thread_pool_patterns
          required: true
          description: A comma-separated list of regular-expressions to filter the thread pools in the output
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html'
  /_cluster/allocation/explain:
    parameters:
      - in: query
        name: include_yes_decisions
        description: 'Return ''YES'' decisions in explanation (default: false)'
        type: boolean
      - in: query
        name: include_disk_info
        description: 'Return information about disk usage and shard sizes (default: false)'
        type: boolean
      - in: body
        name: request
        description: 'The index, shard, and primary flag to explain. Empty means ''explain the first unassigned shard'''
        required: false
        schema:
          $ref: '#/definitions/ClusterAllocationExplainRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterAllocationExplainResponse'
      tags:
        - cluster.allocation_explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterAllocationExplainResponse'
      tags:
        - cluster.allocation_explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html'
  /_cluster/health:
    parameters:
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: level
        description: Specify the level of detail for returned information
        type: string
        format: level
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Wait until the specified number of shards is active
        type: string
      - in: query
        name: wait_for_nodes
        description: Wait until the specified number of nodes is available
        type: string
      - in: query
        name: wait_for_events
        description: Wait until all currently queued events with the given priority are processed
        type: string
        format: wait_for_events
      - in: query
        name: wait_for_no_relocating_shards
        description: Whether to wait until there are no relocating shards in the cluster
        type: boolean
      - in: query
        name: wait_for_no_initializing_shards
        description: Whether to wait until there are no initializing shards in the cluster
        type: boolean
      - in: query
        name: wait_for_status
        description: Wait until cluster is in a specific state
        type: string
        format: wait_for_status
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterHealthResponse'
      tags:
        - cluster.health
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html'
  '/_cluster/health/{index}':
    parameters:
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: level
        description: Specify the level of detail for returned information
        type: string
        format: level
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Wait until the specified number of shards is active
        type: string
      - in: query
        name: wait_for_nodes
        description: Wait until the specified number of nodes is available
        type: string
      - in: query
        name: wait_for_events
        description: Wait until all currently queued events with the given priority are processed
        type: string
        format: wait_for_events
      - in: query
        name: wait_for_no_relocating_shards
        description: Whether to wait until there are no relocating shards in the cluster
        type: boolean
      - in: query
        name: wait_for_no_initializing_shards
        description: Whether to wait until there are no initializing shards in the cluster
        type: boolean
      - in: query
        name: wait_for_status
        description: Wait until cluster is in a specific state
        type: string
        format: wait_for_status
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterHealthResponse'
      tags:
        - cluster.health
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Limit the information returned to a specific index
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html'
  /_cluster/pending_tasks:
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterPendingTasksResponse'
      tags:
        - cluster.pending_tasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html'
  /_cluster/reroute:
    parameters:
      - in: query
        name: dry_run
        description: Simulate the operation only and return the resulting state
        type: boolean
      - in: query
        name: explain
        description: Return an explanation of why the commands can or cannot be executed
        type: boolean
      - in: query
        name: retry_failed
        description: Retries allocation of shards that are blocked due to too many subsequent allocation failures
        type: boolean
      - in: query
        name: metric
        description: Limit the information returned to the specified metrics. Defaults to all but metadata
        type: string
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: 'The definition of `commands` to perform (`move`, `cancel`, `allocate`)'
        required: false
        schema:
          $ref: '#/definitions/ClusterRerouteRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterRerouteResponse'
      tags:
        - cluster.reroute
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html'
  /_cluster/settings:
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).
        required: true
        schema:
          $ref: '#/definitions/ClusterPutSettingsRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterPutSettingsResponse'
      tags:
        - cluster.put_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html'
  /_cluster/state:
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: wait_for_metadata_version
        description: Wait for the metadata version to be equal or greater than the specified metadata version
        type: integer
        format: long
      - in: query
        name: wait_for_timeout
        description: The maximum time to wait for wait_for_metadata_version before timing out
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStateResponse'
      tags:
        - cluster.state
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html'
  '/_cluster/state/{metric}':
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: wait_for_metadata_version
        description: Wait for the metadata version to be equal or greater than the specified metadata version
        type: integer
        format: long
      - in: query
        name: wait_for_timeout
        description: The maximum time to wait for wait_for_metadata_version before timing out
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStateResponse'
      tags:
        - cluster.state
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html'
  '/_cluster/state/{metric}/{index}':
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: wait_for_metadata_version
        description: Wait for the metadata version to be equal or greater than the specified metadata version
        type: integer
        format: long
      - in: query
        name: wait_for_timeout
        description: The maximum time to wait for wait_for_metadata_version before timing out
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStateResponse'
      tags:
        - cluster.state
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html'
  /_cluster/stats:
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStatsResponse'
      tags:
        - cluster.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html'
  '/_cluster/stats/nodes/{node_id}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStatsResponse'
      tags:
        - cluster.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html'
  /_nodes/hot_threads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_nodes/{node_id}/hot_threads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_cluster/nodes/hotthreads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_cluster/nodes/{node_id}/hotthreads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_nodes/hotthreads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_nodes/{node_id}/hotthreads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_cluster/nodes/hot_threads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_cluster/nodes/{node_id}/hot_threads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_nodes:
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  '/_nodes/{node_id}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  '/_nodes/{metric}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: A comma-separated list of metrics you wish returned. Leave empty to return all.
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  '/_nodes/{node_id}/{metric}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
        - in: path
          name: metric
          required: true
          description: A comma-separated list of metrics you wish returned. Leave empty to return all.
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  /_nodes/stats:
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/{node_id}/stats':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/{node_id}/stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/stats/{metric}/{index_metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: index_metric
          required: true
          description: Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.
          type: string
          format: IndexMetrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/{node_id}/stats/{metric}/{index_metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: index_metric
          required: true
          description: Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.
          type: string
          format: IndexMetrics
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  /_nodes/usage:
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  '/_nodes/{node_id}/usage':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  '/_nodes/usage/{metric}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  '/_nodes/{node_id}/usage/{metric}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  /:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RootNodeInfoResponse'
      tags:
        - info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html'
  /_nodes/reload_secure_settings:
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReloadSecureSettingsResponse'
      tags:
        - nodes.reload_secure_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings'
  '/_nodes/{node_id}/reload_secure_settings':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReloadSecureSettingsResponse'
      tags:
        - nodes.reload_secure_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: A comma-separated list of node IDs to span the reload/reinit call. Should stay empty because reloading usually involves all cluster nodes.
          type: string
          format: NodeIds
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings'
  /_remote/info:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RemoteInfoResponse'
      tags:
        - cluster.remote_info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html'
  /_tasks/_cancel:
    parameters:
      - in: query
        name: nodes
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be cancelled. Leave empty to cancel all.
        type: string
      - in: query
        name: parent_task_id
        description: 'Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.'
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CancelTasksResponse'
      tags:
        - tasks.cancel
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  '/_tasks/{task_id}/_cancel':
    parameters:
      - in: query
        name: nodes
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be cancelled. Leave empty to cancel all.
        type: string
      - in: query
        name: parent_task_id
        description: 'Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.'
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CancelTasksResponse'
      tags:
        - tasks.cancel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: 'Cancel the task with specified task id (node_id:task_number)'
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  '/_tasks/{task_id}':
    parameters:
      - in: query
        name: wait_for_completion
        description: 'Wait for the matching tasks to complete (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetTaskResponse'
      tags:
        - tasks.get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: 'Return the task with specified id (node_id:task_number)'
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  /_tasks:
    parameters:
      - in: query
        name: nodes
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be returned. Leave empty to return all.
        type: string
      - in: query
        name: detailed
        description: 'Return detailed task information (default: false)'
        type: boolean
      - in: query
        name: parent_task_id
        description: 'Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.'
        type: string
      - in: query
        name: wait_for_completion
        description: 'Wait for the matching tasks to complete (default: false)'
        type: boolean
      - in: query
        name: group_by
        description: Group tasks by nodes or parent/child relationships
        type: string
        format: group_by
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ListTasksResponse'
      tags:
        - tasks.list
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  /_bulk:
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: type
        description: Default document type for items which don't provide one
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_excludes
        description: 'Default list of fields to exclude from the returned _source field, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_includes
        description: 'Default list of fields to extract and return from the _source field, can be overridden on each sub-request'
        type: string
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: 'The operation definition and data (action-data pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/BulkRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
  '/{index}/_bulk':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: type
        description: Default document type for items which don't provide one
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_excludes
        description: 'Default list of fields to exclude from the returned _source field, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_includes
        description: 'Default list of fields to extract and return from the _source field, can be overridden on each sub-request'
        type: string
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: 'The operation definition and data (action-data pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/BulkRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
  '/{index}/{type}/_bulk':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: type
        description: Default document type for items which don't provide one
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_excludes
        description: 'Default list of fields to exclude from the returned _source field, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_includes
        description: 'Default list of fields to extract and return from the _source field, can be overridden on each sub-request'
        type: string
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: 'The operation definition and data (action-data pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/BulkRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: Default document type for items which don't provide one
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: Default document type for items which don't provide one
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
  '/_delete_by_query/{task_id}/_rethrottle':
    parameters:
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
        type: integer
        format: long
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteByQueryRethrottleResponse'
      tags:
        - delete_by_query_rethrottle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: The task id to rethrottle
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html'
  '/{index}/_delete_by_query':
    parameters:
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the delete by query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Deprecated, please use `max_docs` instead'
        type: integer
        format: long
      - in: query
        name: max_docs
        description: 'Maximum number of documents to process (default: all documents)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the delete by query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the delete by query is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle for this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: true
        schema:
          $ref: '#/definitions/DeleteByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteByQueryResponse'
      tags:
        - delete_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html'
  '/{index}/{type}/_delete_by_query':
    parameters:
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the delete by query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Deprecated, please use `max_docs` instead'
        type: integer
        format: long
      - in: query
        name: max_docs
        description: 'Maximum number of documents to process (default: all documents)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the delete by query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the delete by query is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle for this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: true
        schema:
          $ref: '#/definitions/DeleteByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteByQueryResponse'
      tags:
        - delete_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html'
  /_mget:
    parameters:
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: body
        name: request
        description: Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.
        required: true
        schema:
          $ref: '#/definitions/MultiGetRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
  '/{index}/_mget':
    parameters:
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: body
        name: request
        description: Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.
        required: true
        schema:
          $ref: '#/definitions/MultiGetRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
  '/{index}/{type}/_mget':
    parameters:
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: body
        name: request
        description: Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.
        required: true
        schema:
          $ref: '#/definitions/MultiGetRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
  /_mtermvectors:
    parameters:
      - in: query
        name: ids
        description: A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
        type: string
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: string
      - in: query
        name: routing
        description: Specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Routing
      - in: query
        name: realtime
        description: 'Specifies if requests are real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: 'Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.'
        required: false
        schema:
          $ref: '#/definitions/MultiTermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
  '/{index}/_mtermvectors':
    parameters:
      - in: query
        name: ids
        description: A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
        type: string
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: string
      - in: query
        name: routing
        description: Specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Routing
      - in: query
        name: realtime
        description: 'Specifies if requests are real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: 'Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.'
        required: false
        schema:
          $ref: '#/definitions/MultiTermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
  '/{index}/{type}/_mtermvectors':
    parameters:
      - in: query
        name: ids
        description: A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
        type: string
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: string
      - in: query
        name: routing
        description: Specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Routing
      - in: query
        name: realtime
        description: 'Specifies if requests are real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: 'Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.'
        required: false
        schema:
          $ref: '#/definitions/MultiTermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
  /_reindex:
    parameters:
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: wait_for_completion
        description: Should the request should block until the reindex is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: scroll
        description: Control how long to keep the search context alive
        type: string
        format: time
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: query
        name: max_docs
        description: 'Maximum number of documents to process (default: all documents)'
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL and the prototype for the index request.
        required: true
        schema:
          $ref: '#/definitions/ReindexOnServerRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReindexOnServerResponse'
      tags:
        - reindex
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html'
  '/_reindex/{task_id}/_rethrottle':
    parameters:
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
        type: integer
        format: long
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReindexRethrottleResponse'
      tags:
        - reindex_rethrottle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: The task id to rethrottle
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html'
  '/_update_by_query/{task_id}/_rethrottle':
    parameters:
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
        type: integer
        format: long
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateByQueryRethrottleResponse'
      tags:
        - update_by_query_rethrottle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: The task id to rethrottle
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html'
  '/{index}/_update_by_query':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the update by query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: pipeline
        description: 'Ingest pipeline to set on index requests made by this action. (default: none)'
        type: string
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Deprecated, please use `max_docs` instead'
        type: integer
        format: long
      - in: query
        name: max_docs
        description: 'Maximum number of documents to process (default: all documents)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: version_type
        description: Should the document increment the version number (internal) on hit or not (reindex)
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the update by query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the update by query operation is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/UpdateByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateByQueryResponse'
      tags:
        - update_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html'
  '/{index}/{type}/_update_by_query':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the update by query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: pipeline
        description: 'Ingest pipeline to set on index requests made by this action. (default: none)'
        type: string
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Deprecated, please use `max_docs` instead'
        type: integer
        format: long
      - in: query
        name: max_docs
        description: 'Maximum number of documents to process (default: all documents)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: version_type
        description: Should the document increment the version number (internal) on hit or not (reindex)
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the update by query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the update by query operation is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/UpdateByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateByQueryResponse'
      tags:
        - update_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html'
  '/{index}/_create/{id}':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/CreateRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CreateResponse'
      tags:
        - create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CreateResponse'
      tags:
        - create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/{type}/{id}/_create':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/CreateRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CreateResponse'
      tags:
        - create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CreateResponse'
      tags:
        - create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/_doc/{id}':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: op_type
        description: Explicit operation type
        type: string
        format: op_type
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: if_seq_no
        description: only perform the index operation if the last operation that has changed the document has the specified sequence number
        type: integer
        format: long
      - in: query
        name: if_primary_term
        description: only perform the index operation if the last operation that has changed the document has the specified primary term
        type: integer
        format: long
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/IndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/{type}/{id}':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: op_type
        description: Explicit operation type
        type: string
        format: op_type
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: if_seq_no
        description: only perform the index operation if the last operation that has changed the document has the specified sequence number
        type: integer
        format: long
      - in: query
        name: if_primary_term
        description: only perform the index operation if the last operation that has changed the document has the specified primary term
        type: integer
        format: long
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/IndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/_doc':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: op_type
        description: Explicit operation type
        type: string
        format: op_type
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: if_seq_no
        description: only perform the index operation if the last operation that has changed the document has the specified sequence number
        type: integer
        format: long
      - in: query
        name: if_primary_term
        description: only perform the index operation if the last operation that has changed the document has the specified primary term
        type: integer
        format: long
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/IndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/{type}':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: op_type
        description: Explicit operation type
        type: string
        format: op_type
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: if_seq_no
        description: only perform the index operation if the last operation that has changed the document has the specified sequence number
        type: integer
        format: long
      - in: query
        name: if_primary_term
        description: only perform the index operation if the last operation that has changed the document has the specified primary term
        type: integer
        format: long
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/IndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/_source/{id}':
    parameters:
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SourceResponse'
      tags:
        - get_source
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html'
  '/{index}/{type}/{id}/_source':
    parameters:
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SourceResponse'
      tags:
        - get_source
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document; deprecated and optional starting with 7.0
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html'
  '/{index}/_termvectors/{id}':
    parameters:
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned.
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return.
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned.
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned.
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned.
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random).'
        type: string
      - in: query
        name: routing
        description: Specific routing value.
        type: string
        format: Routing
      - in: query
        name: realtime
        description: 'Specifies if request is real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: Define parameters and or supply a document to get termvectors for. See documentation.
        required: false
        schema:
          $ref: '#/definitions/TermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: id
          required: true
          description: 'The id of the document, when not specified a doc param should be supplied.'
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: id
          required: true
          description: 'The id of the document, when not specified a doc param should be supplied.'
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
  '/{index}/_termvectors':
    parameters:
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned.
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return.
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned.
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned.
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned.
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random).'
        type: string
      - in: query
        name: routing
        description: Specific routing value.
        type: string
        format: Routing
      - in: query
        name: realtime
        description: 'Specifies if request is real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: Define parameters and or supply a document to get termvectors for. See documentation.
        required: false
        schema:
          $ref: '#/definitions/TermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
  '/{index}/{type}/{id}/_termvectors':
    parameters:
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned.
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return.
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned.
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned.
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned.
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random).'
        type: string
      - in: query
        name: routing
        description: Specific routing value.
        type: string
        format: Routing
      - in: query
        name: realtime
        description: 'Specifies if request is real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: Define parameters and or supply a document to get termvectors for. See documentation.
        required: false
        schema:
          $ref: '#/definitions/TermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
        - in: path
          name: id
          required: true
          description: 'The id of the document, when not specified a doc param should be supplied.'
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
        - in: path
          name: id
          required: true
          description: 'The id of the document, when not specified a doc param should be supplied.'
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
  '/{index}/{type}/_termvectors':
    parameters:
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned.
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return.
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned.
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned.
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned.
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random).'
        type: string
      - in: query
        name: routing
        description: Specific routing value.
        type: string
        format: Routing
      - in: query
        name: realtime
        description: 'Specifies if request is real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: Define parameters and or supply a document to get termvectors for. See documentation.
        required: false
        schema:
          $ref: '#/definitions/TermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
  '/{index}/_update/{id}':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: lang
        description: 'The script language (default: painless)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: retry_on_conflict
        description: 'Specify how many times should the operation be retried when a conflict occurs (default: 0)'
        type: integer
        format: long
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: if_seq_no
        description: only perform the update operation if the last operation that has changed the document has the specified sequence number
        type: integer
        format: long
      - in: query
        name: if_primary_term
        description: only perform the update operation if the last operation that has changed the document has the specified primary term
        type: integer
        format: long
      - in: body
        name: request
        description: The request definition requires either `script` or partial `doc`
        required: true
        schema:
          $ref: '#/definitions/UpdateRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateResponse'
      tags:
        - update
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html'
  '/{index}/{type}/{id}/_update':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: lang
        description: 'The script language (default: painless)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: retry_on_conflict
        description: 'Specify how many times should the operation be retried when a conflict occurs (default: 0)'
        type: integer
        format: long
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: if_seq_no
        description: only perform the update operation if the last operation that has changed the document has the specified sequence number
        type: integer
        format: long
      - in: query
        name: if_primary_term
        description: only perform the update operation if the last operation that has changed the document has the specified primary term
        type: integer
        format: long
      - in: body
        name: request
        description: The request definition requires either `script` or partial `doc`
        required: true
        schema:
          $ref: '#/definitions/UpdateRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateResponse'
      tags:
        - update
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html'
  '/_alias/{name}':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAliasResponse'
      tags:
        - indices.get_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: A comma-separated list of alias names to return
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  '/{index}/_alias/{name}':
    parameters:
      - in: query
        name: timeout
        description: Explicit timestamp for the document
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: body
        name: request
        description: 'The settings for the alias, such as `routing` or `filter`'
        required: false
        schema:
          $ref: '#/definitions/PutAliasRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  /_aliases:
    parameters:
      - in: query
        name: timeout
        description: Request timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: body
        name: request
        description: The definition of `actions` to perform
        required: true
        schema:
          $ref: '#/definitions/BulkAliasRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkAliasResponse'
      tags:
        - indices.update_aliases
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  '/{index}/_aliases/{name}':
    parameters:
      - in: query
        name: timeout
        description: Explicit timestamp for the document
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: body
        name: request
        description: 'The settings for the alias, such as `routing` or `filter`'
        required: false
        schema:
          $ref: '#/definitions/PutAliasRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  /_alias:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAliasResponse'
      tags:
        - indices.get_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  '/{index}/_alias':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAliasResponse'
      tags:
        - indices.get_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to filter aliases
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  /_analyze:
    parameters:
      - in: query
        name: index
        description: The name of the index to scope the operation
        type: string
      - in: body
        name: request
        description: Define analyzer/tokenizer parameters and the text on which the analysis should be performed
        required: false
        schema:
          $ref: '#/definitions/AnalyzeRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
  '/{index}/_analyze':
    parameters:
      - in: query
        name: index
        description: The name of the index to scope the operation
        type: string
      - in: body
        name: request
        description: Define analyzer/tokenizer parameters and the text on which the analysis should be performed
        required: false
        schema:
          $ref: '#/definitions/AnalyzeRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to scope the operation
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to scope the operation
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
  '/{index}/_clone/{target}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the cloned index before the operation returns.
        type: string
      - in: body
        name: request
        description: The collection for the target index (`settings` and `aliases`)
        required: false
        schema:
          $ref: '#/definitions/CloneIndexRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CloneIndexResponse'
      tags:
        - indices.clone
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to clone
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to clone into
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clone-index.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CloneIndexResponse'
      tags:
        - indices.clone
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to clone
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to clone into
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clone-index.html'
  '/{index}':
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: 'Ignore unavailable indexes (default: false)'
        type: boolean
      - in: query
        name: allow_no_indices
        description: 'Ignore if a wildcard expression resolves to no concrete indices (default: false)'
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether wildcard expressions should get expanded to open or closed indices (default: open)'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: include_defaults
        description: Whether to return all default setting for each of the indices.
        type: boolean
    head:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExistsResponse'
      tags:
        - indices.exists
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html'
  '/{index}/_freeze':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: wait_for_active_shards
        description: Sets the number of active shards to wait for before the operation returns.
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FreezeIndexResponse'
      tags:
        - indices.freeze
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to freeze
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html'
  '/{index}/_close':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: wait_for_active_shards
        description: Sets the number of active shards to wait for before the operation returns.
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CloseIndexResponse'
      tags:
        - indices.close
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma separated list of indices to close
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html'
  '/{index}/_open':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: wait_for_active_shards
        description: Sets the number of active shards to wait for before the operation returns.
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/OpenIndexResponse'
      tags:
        - indices.open
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma separated list of indices to open
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html'
  '/{alias}/_rollover':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be included in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: dry_run
        description: If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the newly created rollover index before the operation returns.
        type: string
      - in: body
        name: request
        description: The conditions that needs to be met for executing rollover
        required: false
        schema:
          $ref: '#/definitions/RolloverIndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RolloverIndexResponse'
      tags:
        - indices.rollover
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: alias
          required: true
          description: The name of the alias to rollover
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html'
  '/{alias}/_rollover/{new_index}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be included in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: dry_run
        description: If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the newly created rollover index before the operation returns.
        type: string
      - in: body
        name: request
        description: The conditions that needs to be met for executing rollover
        required: false
        schema:
          $ref: '#/definitions/RolloverIndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RolloverIndexResponse'
      tags:
        - indices.rollover
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: alias
          required: true
          description: The name of the alias to rollover
          type: string
          format: Name
        - in: path
          name: new_index
          required: true
          description: The name of the rollover index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html'
  '/{index}/_shrink/{target}':
    parameters:
      - in: query
        name: copy_settings
        description: whether or not to copy settings from the source index (defaults to false)
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the shrunken index before the operation returns.
        type: string
      - in: body
        name: request
        description: The collection for the target index (`settings` and `aliases`)
        required: false
        schema:
          $ref: '#/definitions/ShrinkIndexRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ShrinkIndexResponse'
      tags:
        - indices.shrink
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to shrink
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to shrink into
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ShrinkIndexResponse'
      tags:
        - indices.shrink
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to shrink
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to shrink into
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html'
  '/{index}/_split/{target}':
    parameters:
      - in: query
        name: copy_settings
        description: whether or not to copy settings from the source index (defaults to false)
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the shrunken index before the operation returns.
        type: string
      - in: body
        name: request
        description: The collection for the target index (`settings` and `aliases`)
        required: false
        schema:
          $ref: '#/definitions/SplitIndexRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SplitIndexResponse'
      tags:
        - indices.split
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to split
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to split into
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SplitIndexResponse'
      tags:
        - indices.split
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to split
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to split into
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html'
  '/{index}/_mapping/{type}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/{index}/_unfreeze':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: wait_for_active_shards
        description: Sets the number of active shards to wait for before the operation returns.
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UnfreezeIndexResponse'
      tags:
        - indices.unfreeze
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to unfreeze
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html'
  /_settings:
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: preserve_existing
        description: 'Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: body
        name: request
        description: The index settings to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateIndexSettingsRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateIndexSettingsResponse'
      tags:
        - indices.put_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html'
  '/{index}/_settings':
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: preserve_existing
        description: 'Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: body
        name: request
        description: The index settings to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateIndexSettingsRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateIndexSettingsResponse'
      tags:
        - indices.put_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html'
  '/{index}/_settings/{name}':
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: include_defaults
        description: Whether to return all default setting for each of the indices.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetIndexSettingsResponse'
      tags:
        - indices.get_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the settings that should be included
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html'
  '/_settings/{name}':
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: include_defaults
        description: Whether to return all default setting for each of the indices.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetIndexSettingsResponse'
      tags:
        - indices.get_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the settings that should be included
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html'
  '/_template/{name}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be returned in the body of the mappings.
        type: boolean
      - in: query
        name: order
        description: 'The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)'
        type: integer
        format: long
      - in: query
        name: create
        description: Whether the index template should only be added if new or can also replace an existing one
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: body
        name: request
        description: The template definition
        required: true
        schema:
          $ref: '#/definitions/PutIndexTemplateRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutIndexTemplateResponse'
      tags:
        - indices.put_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the template
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutIndexTemplateResponse'
      tags:
        - indices.put_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the template
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html'
  /_template:
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be returned in the body of the mappings.
        type: boolean
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetIndexTemplateResponse'
      tags:
        - indices.get_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html'
  '/_mapping/field/{fields}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be returned in the body of the mappings.
        type: boolean
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  '/{index}/_mapping/field/{fields}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be returned in the body of the mappings.
        type: boolean
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  '/_mapping/{type}/field/{fields}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be returned in the body of the mappings.
        type: boolean
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types
          type: string
          format: Types
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  '/{index}/_mapping/{type}/field/{fields}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be returned in the body of the mappings.
        type: boolean
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types
          type: string
          format: Types
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  /_mapping:
    parameters:
      - in: query
        name: include_type_name
        description: 'Whether to add the type name to the response (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetMappingResponse'
      tags:
        - indices.get_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html'
  '/{index}/_mapping':
    parameters:
      - in: query
        name: include_type_name
        description: 'Whether to add the type name to the response (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetMappingResponse'
      tags:
        - indices.get_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html'
  '/_mapping/{type}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '{index}/_mapping':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/{index}/{type}/_mapping':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/{index}/{type}/_mappings':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/{index}/_mappings/{type}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/_mappings/{type}':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '{index}/_mappings':
    parameters:
      - in: query
        name: include_type_name
        description: Whether a type should be expected in the body of the mappings.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  /_recovery:
    parameters:
      - in: query
        name: detailed
        description: Whether to display detailed information about shard recovery
        type: boolean
      - in: query
        name: active_only
        description: Display only those recoveries that are currently on-going
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RecoveryStatusResponse'
      tags:
        - indices.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html'
  '/{index}/_recovery':
    parameters:
      - in: query
        name: detailed
        description: Whether to display detailed information about shard recovery
        type: boolean
      - in: query
        name: active_only
        description: Display only those recoveries that are currently on-going
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RecoveryStatusResponse'
      tags:
        - indices.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html'
  /_segments:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: verbose
        description: Includes detailed memory usage by Lucene.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SegmentsResponse'
      tags:
        - indices.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html'
  '/{index}/_segments':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: verbose
        description: Includes detailed memory usage by Lucene.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SegmentsResponse'
      tags:
        - indices.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html'
  /_shard_stores:
    parameters:
      - in: query
        name: status
        description: A comma-separated list of statuses used to filter on shards to get store information for
        type: string
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesShardStoresResponse'
      tags:
        - indices.shard_stores
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html'
  '/{index}/_shard_stores':
    parameters:
      - in: query
        name: status
        description: A comma-separated list of statuses used to filter on shards to get store information for
        type: string
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesShardStoresResponse'
      tags:
        - indices.shard_stores
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html'
  /_stats:
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
      - in: query
        name: include_unloaded_segments
        description: If set to true segment stats will include stats for segments that are not currently loaded into memory
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: forbid_closed_indices
        description: If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  '/_stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
      - in: query
        name: include_unloaded_segments
        description: If set to true segment stats will include stats for segments that are not currently loaded into memory
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: forbid_closed_indices
        description: If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned the specific metrics.
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  '/{index}/_stats':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
      - in: query
        name: include_unloaded_segments
        description: If set to true segment stats will include stats for segments that are not currently loaded into memory
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: forbid_closed_indices
        description: If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  '/{index}/_stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
      - in: query
        name: include_unloaded_segments
        description: If set to true segment stats will include stats for segments that are not currently loaded into memory
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: forbid_closed_indices
        description: If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: metric
          required: true
          description: Limit the information returned the specific metrics.
          type: string
          format: Metrics
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  /_cache/clear:
    parameters:
      - in: query
        name: fielddata
        description: Clear field data
        type: boolean
      - in: query
        name: fields
        description: 'A comma-separated list of fields to clear when using the `fielddata` parameter (default: all)'
        type: string
        format: Fields
      - in: query
        name: query
        description: Clear query caches
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: index
        description: A comma-separated list of index name to limit the operation
        type: string
      - in: query
        name: request
        description: Clear request cache
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCacheResponse'
      tags:
        - indices.clear_cache
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html'
  '/{index}/_cache/clear':
    parameters:
      - in: query
        name: fielddata
        description: Clear field data
        type: boolean
      - in: query
        name: fields
        description: 'A comma-separated list of fields to clear when using the `fielddata` parameter (default: all)'
        type: string
        format: Fields
      - in: query
        name: query
        description: Clear query caches
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: index
        description: A comma-separated list of index name to limit the operation
        type: string
      - in: query
        name: request
        description: Clear request cache
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCacheResponse'
      tags:
        - indices.clear_cache
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index name to limit the operation
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html'
  /_flush:
    parameters:
      - in: query
        name: force
        description: Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)
        type: boolean
      - in: query
        name: wait_if_ongoing
        description: If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
  '/{index}/_flush':
    parameters:
      - in: query
        name: force
        description: Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)
        type: boolean
      - in: query
        name: wait_if_ongoing
        description: If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
  /_forcemerge:
    parameters:
      - in: query
        name: flush
        description: 'Specify whether the index should be flushed after performing the operation (default: true)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: max_num_segments
        description: 'The number of segments the index should be merged into (default: dynamic)'
        type: integer
        format: long
      - in: query
        name: only_expunge_deletes
        description: Specify whether the operation should only expunge deleted documents
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ForceMergeResponse'
      tags:
        - indices.forcemerge
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html'
  '/{index}/_forcemerge':
    parameters:
      - in: query
        name: flush
        description: 'Specify whether the index should be flushed after performing the operation (default: true)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: max_num_segments
        description: 'The number of segments the index should be merged into (default: dynamic)'
        type: integer
        format: long
      - in: query
        name: only_expunge_deletes
        description: Specify whether the operation should only expunge deleted documents
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ForceMergeResponse'
      tags:
        - indices.forcemerge
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html'
  /_refresh:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
  '/{index}/_refresh':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
  /_flush/synced:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush-api.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush-api.html'
  '/{index}/_flush/synced':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush-api.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush-api.html'
  '/_ingest/pipeline/{id}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: The ingest definition
        required: true
        schema:
          $ref: '#/definitions/PutPipelineRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutPipelineResponse'
      tags:
        - ingest.put_pipeline
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Pipeline ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html'
  /_ingest/pipeline:
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetPipelineResponse'
      tags:
        - ingest.get_pipeline
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html'
  /_ingest/processor/grok:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GrokProcessorPatternsResponse'
      tags:
        - ingest.processor_grok
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get'
  /_ingest/pipeline/_simulate:
    parameters:
      - in: query
        name: verbose
        description: Verbose mode. Display data output for each processor in executed pipeline
        type: boolean
      - in: body
        name: request
        description: The simulate definition
        required: true
        schema:
          $ref: '#/definitions/SimulatePipelineRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html'
  '/_ingest/pipeline/{id}/_simulate':
    parameters:
      - in: query
        name: verbose
        description: Verbose mode. Display data output for each processor in executed pipeline
        type: boolean
      - in: body
        name: request
        description: The simulate definition
        required: true
        schema:
          $ref: '#/definitions/SimulatePipelineRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Pipeline ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Pipeline ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html'
  '/_scripts/{id}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: context
        description: Context name to compile script against
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/PutScriptRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
  /_scripts/painless/_execute:
    parameters:
      - in: body
        name: request
        description: The script to execute
        required: false
        schema:
          $ref: '#/definitions/ExecutePainlessScriptRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecutePainlessScriptResponse'
      tags:
        - scripts_painless_execute
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecutePainlessScriptResponse'
      tags:
        - scripts_painless_execute
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html'
  '/_scripts/{id}/{context}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: context
        description: Context name to compile script against
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/PutScriptRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
        - in: path
          name: context
          required: true
          description: Script context
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
        - in: path
          name: context
          required: true
          description: Script context
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
  '/_snapshot/{repository}/_cleanup':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        required: false
        schema:
          $ref: '#/definitions/CleanupRepositoryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CleanupRepositoryResponse'
      tags:
        - snapshot.cleanup_repository
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRepositoryResponse'
      tags:
        - snapshot.get_repository
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A comma-separated list of repository names
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  /_snapshot:
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRepositoryResponse'
      tags:
        - snapshot.get_repository
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/_verify':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/VerifyRepositoryResponse'
      tags:
        - snapshot.verify_repository
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/{snapshot}/_restore':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: wait_for_completion
        description: Should this request wait until the operation has completed before returning
        type: boolean
      - in: body
        name: request
        description: Details of what to restore
        required: false
        schema:
          $ref: '#/definitions/RestoreRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RestoreResponse'
      tags:
        - snapshot.restore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A snapshot name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/{snapshot}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: wait_for_completion
        description: Should this request wait until the operation has completed before returning
        type: boolean
      - in: body
        name: request
        description: The snapshot definition
        required: false
        schema:
          $ref: '#/definitions/SnapshotRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotResponse'
      tags:
        - snapshot.create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A snapshot name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotResponse'
      tags:
        - snapshot.create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A snapshot name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  /_snapshot/_status:
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: 'Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotStatusResponse'
      tags:
        - snapshot.status
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/_status':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: 'Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotStatusResponse'
      tags:
        - snapshot.status
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/{snapshot}/_status':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: 'Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotStatusResponse'
      tags:
        - snapshot.status
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A comma-separated list of snapshot names
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  /_count:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: min_score
        description: Include only documents with a specific `_score` value in the result
        type: number
        format: double
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: terminate_after
        description: 'The maximum count for each shard, upon reaching which the query execution will terminate early'
        type: integer
        format: long
      - in: body
        name: request
        description: A query to restrict the results specified with the Query DSL (optional)
        required: false
        schema:
          $ref: '#/definitions/CountRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
  '/{index}/_count':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: min_score
        description: Include only documents with a specific `_score` value in the result
        type: number
        format: double
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: terminate_after
        description: 'The maximum count for each shard, upon reaching which the query execution will terminate early'
        type: integer
        format: long
      - in: body
        name: request
        description: A query to restrict the results specified with the Query DSL (optional)
        required: false
        schema:
          $ref: '#/definitions/CountRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
  '/{index}/{type}/_count':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: min_score
        description: Include only documents with a specific `_score` value in the result
        type: number
        format: double
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: terminate_after
        description: 'The maximum count for each shard, upon reaching which the query execution will terminate early'
        type: integer
        format: long
      - in: body
        name: request
        description: A query to restrict the results specified with the Query DSL (optional)
        required: false
        schema:
          $ref: '#/definitions/CountRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of types to restrict the results
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of types to restrict the results
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
  '/{index}/_explain/{id}':
    parameters:
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)'
        type: boolean
      - in: query
        name: analyzer
        description: The analyzer for the query string query
        type: string
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: 'The default field for query string query (default: _all)'
        type: string
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: body
        name: request
        description: The query definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ExplainRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExplainResponse'
      tags:
        - explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExplainResponse'
      tags:
        - explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html'
  '/{index}/{type}/{id}/_explain':
    parameters:
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)'
        type: boolean
      - in: query
        name: analyzer
        description: The analyzer for the query string query
        type: string
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: 'The default field for query string query (default: _all)'
        type: string
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: body
        name: request
        description: The query definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ExplainRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExplainResponse'
      tags:
        - explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExplainResponse'
      tags:
        - explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html'
  /_field_caps:
    parameters:
      - in: query
        name: fields
        description: A comma-separated list of field names
        type: string
        format: Fields
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: include_unmapped
        description: Indicates whether unmapped fields should be included in the response.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
  '/{index}/_field_caps':
    parameters:
      - in: query
        name: fields
        description: A comma-separated list of field names
        type: string
        format: Fields
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: include_unmapped
        description: Indicates whether unmapped fields should be included in the response.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
  /_msearch/template:
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
  '/{index}/_msearch/template':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
  '/{index}/{type}/_msearch/template':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
  /_msearch:
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests each sub search executes concurrently per node. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: query
        name: ccs_minimize_roundtrips
        description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution
        type: boolean
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
  '/{index}/_msearch':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests each sub search executes concurrently per node. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: query
        name: ccs_minimize_roundtrips
        description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution
        type: boolean
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
  '/{index}/{type}/_msearch':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests each sub search executes concurrently per node. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: query
        name: ccs_minimize_roundtrips
        description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution
        type: boolean
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
  /_search/scroll:
    parameters:
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: scroll_id
        description: The scroll ID for scrolled search
        type: string
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The scroll ID if not passed by URL or query parameter.
        required: false
        schema:
          $ref: '#/definitions/ScrollRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll'
  '/_search/scroll/{scroll_id}':
    parameters:
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: scroll_id
        description: The scroll ID for scrolled search
        type: string
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The scroll ID if not passed by URL or query parameter.
        required: false
        schema:
          $ref: '#/definitions/ScrollRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: scroll_id
          required: true
          description: The scroll ID
          type: string
          format: ScrollId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: scroll_id
          required: true
          description: The scroll ID
          type: string
          format: ScrollId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll'
  /_search_shards:
    parameters:
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
  '/{index}/_search_shards':
    parameters:
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
  /_render/template:
    parameters:
      - in: body
        name: request
        description: The search definition template and its params
        required: false
        schema:
          $ref: '#/definitions/RenderSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html#_validating_templates'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html#_validating_templates'
  '/_render/template/{id}':
    parameters:
      - in: body
        name: request
        description: The search definition template and its params
        required: false
        schema:
          $ref: '#/definitions/RenderSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the stored search template
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html#_validating_templates'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the stored search template
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html#_validating_templates'
  /_search/template:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: profile
        description: Specify whether to profile the query execution
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search definition template and its params
        required: true
        schema:
          $ref: '#/definitions/SearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
  '/{index}/_search/template':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: profile
        description: Specify whether to profile the query execution
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search definition template and its params
        required: true
        schema:
          $ref: '#/definitions/SearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
  '/{index}/{type}/_search/template':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: profile
        description: Specify whether to profile the query execution
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search definition template and its params
        required: true
        schema:
          $ref: '#/definitions/SearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
  /_search:
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: ccs_minimize_roundtrips
        description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return as part of a hit
        type: string
        format: Fields
      - in: query
        name: docvalue_fields
        description: A comma-separated list of fields to return as the docvalue representation of a field for each hit
        type: string
        format: Fields
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: suggest_field
        description: Specify which field to use for suggestions
        type: string
        format: Field
      - in: query
        name: suggest_mode
        description: Specify suggest mode
        type: string
        format: suggest_mode
      - in: query
        name: suggest_size
        description: How many suggestions to return in response
        type: integer
        format: long
      - in: query
        name: suggest_text
        description: The source text for which the suggestions should be returned
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: track_scores
        description: Whether to calculate and return scores even if they are not used for sorting
        type: boolean
      - in: query
        name: track_total_hits
        description: Indicate if the number of documents that match the query should be tracked
        type: boolean
      - in: query
        name: allow_partial_search_results
        description: Indicate if an error should be returned if there is a partial search failure or timeout
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: seq_no_primary_term
        description: Specify whether to return sequence number and primary term of the last modification of each hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: batched_reduce_size
        description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/SearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
  '/{index}/_search':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: ccs_minimize_roundtrips
        description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return as part of a hit
        type: string
        format: Fields
      - in: query
        name: docvalue_fields
        description: A comma-separated list of fields to return as the docvalue representation of a field for each hit
        type: string
        format: Fields
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: suggest_field
        description: Specify which field to use for suggestions
        type: string
        format: Field
      - in: query
        name: suggest_mode
        description: Specify suggest mode
        type: string
        format: suggest_mode
      - in: query
        name: suggest_size
        description: How many suggestions to return in response
        type: integer
        format: long
      - in: query
        name: suggest_text
        description: The source text for which the suggestions should be returned
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: track_scores
        description: Whether to calculate and return scores even if they are not used for sorting
        type: boolean
      - in: query
        name: track_total_hits
        description: Indicate if the number of documents that match the query should be tracked
        type: boolean
      - in: query
        name: allow_partial_search_results
        description: Indicate if an error should be returned if there is a partial search failure or timeout
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: seq_no_primary_term
        description: Specify whether to return sequence number and primary term of the last modification of each hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: batched_reduce_size
        description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/SearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
  '/{index}/{type}/_search':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: ccs_minimize_roundtrips
        description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return as part of a hit
        type: string
        format: Fields
      - in: query
        name: docvalue_fields
        description: A comma-separated list of fields to return as the docvalue representation of a field for each hit
        type: string
        format: Fields
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: ignore_throttled
        description: 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_excludes
        description: A list of fields to exclude from the returned _source field
        type: string
      - in: query
        name: _source_includes
        description: A list of fields to extract and return from the _source field
        type: string
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: suggest_field
        description: Specify which field to use for suggestions
        type: string
        format: Field
      - in: query
        name: suggest_mode
        description: Specify suggest mode
        type: string
        format: suggest_mode
      - in: query
        name: suggest_size
        description: How many suggestions to return in response
        type: integer
        format: long
      - in: query
        name: suggest_text
        description: The source text for which the suggestions should be returned
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: track_scores
        description: Whether to calculate and return scores even if they are not used for sorting
        type: boolean
      - in: query
        name: track_total_hits
        description: Indicate if the number of documents that match the query should be tracked
        type: boolean
      - in: query
        name: allow_partial_search_results
        description: Indicate if an error should be returned if there is a partial search failure or timeout
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: seq_no_primary_term
        description: Specify whether to return sequence number and primary term of the last modification of each hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: batched_reduce_size
        description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/SearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
  /_validate/query:
    parameters:
      - in: query
        name: explain
        description: Return detailed information about the error
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: rewrite
        description: Provide a more detailed explanation showing the actual Lucene query that will be executed.
        type: boolean
      - in: query
        name: all_shards
        description: Execute validation on all shards instead of one random shard per index
        type: boolean
      - in: body
        name: request
        description: The query definition specified with the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ValidateQueryRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
  '/{index}/_validate/query':
    parameters:
      - in: query
        name: explain
        description: Return detailed information about the error
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: rewrite
        description: Provide a more detailed explanation showing the actual Lucene query that will be executed.
        type: boolean
      - in: query
        name: all_shards
        description: Execute validation on all shards instead of one random shard per index
        type: boolean
      - in: body
        name: request
        description: The query definition specified with the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ValidateQueryRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
  '/{index}/{type}/_validate/query':
    parameters:
      - in: query
        name: explain
        description: Return detailed information about the error
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: rewrite
        description: Provide a more detailed explanation showing the actual Lucene query that will be executed.
        type: boolean
      - in: query
        name: all_shards
        description: Execute validation on all shards instead of one random shard per index
        type: boolean
      - in: body
        name: request
        description: The query definition specified with the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ValidateQueryRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
  '/_ccr/auto_follow/{name}':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAutoFollowPatternResponse'
      tags:
        - ccr.get_auto_follow_pattern
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the auto follow pattern.
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html'
  /_ccr/auto_follow:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAutoFollowPatternResponse'
      tags:
        - ccr.get_auto_follow_pattern
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html'
  '/{index}/_ccr/follow':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before returning. Defaults to 0. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: body
        name: request
        description: The name of the leader index and other optional ccr related parameters
        required: true
        schema:
          $ref: '#/definitions/CreateFollowIndexRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CreateFollowIndexResponse'
      tags:
        - ccr.follow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the follower index
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html'
  '/{index}/_ccr/stats':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FollowIndexStatsResponse'
      tags:
        - ccr.follow_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index patterns; use `_all` to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html'
  '/{index}/_ccr/info':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FollowInfoResponse'
      tags:
        - ccr.follow_info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index patterns; use `_all` to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html'
  '/{index}/_ccr/forget_follower':
    parameters:
      - in: body
        name: request
        description: 'the name and UUID of the follower index, the name of the cluster containing the follower index, and the alias from the perspective of that cluster for the remote cluster containing the leader index'
        required: true
        schema:
          $ref: '#/definitions/ForgetFollowerIndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ForgetFollowerIndexResponse'
      tags:
        - ccr.forget_follower
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: the name of the leader index for which specified follower retention leases should be removed
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current'
  '/{index}/_ccr/pause_follow':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PauseFollowIndexResponse'
      tags:
        - ccr.pause_follow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the follower index that should pause following its leader index.
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html'
  '/{index}/_ccr/resume_follow':
    parameters:
      - in: body
        name: request
        description: The name of the leader index and other optional ccr related parameters
        required: false
        schema:
          $ref: '#/definitions/ResumeFollowIndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ResumeFollowIndexResponse'
      tags:
        - ccr.resume_follow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the follow index to resume following.
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html'
  '/{index}/_ccr/unfollow':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UnfollowIndexResponse'
      tags:
        - ccr.unfollow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the follower index that should be turned into a regular index.
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current'
  /_ccr/stats:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CcrStatsResponse'
      tags:
        - ccr.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html'
  '/{index}/_graph/explore':
    parameters:
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: Graph Query DSL
        required: false
        schema:
          $ref: '#/definitions/GraphExploreRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
  '/{index}/{type}/_graph/explore':
    parameters:
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: Graph Query DSL
        required: false
        schema:
          $ref: '#/definitions/GraphExploreRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
  '/_ilm/policy/{policy}':
    parameters:
      - in: body
        name: request
        description: The lifecycle policy definition to register
        required: false
        schema:
          $ref: '#/definitions/PutLifecycleRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutLifecycleResponse'
      tags:
        - ilm.put_lifecycle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: policy
          required: true
          description: The name of the index lifecycle policy
          type: string
          format: string_
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html'
  '/{index}/_ilm/explain':
    parameters:
      - in: query
        name: only_managed
        description: filters the indices included in the response to ones managed by ILM
        type: boolean
      - in: query
        name: only_errors
        description: 'filters the indices included in the response to ones in an ILM error state, implies only_managed'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExplainLifecycleResponse'
      tags:
        - ilm.explain_lifecycle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to explain
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html'
  /_ilm/policy:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetLifecycleResponse'
      tags:
        - ilm.get_lifecycle
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html'
  /_ilm/status:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetIlmStatusResponse'
      tags:
        - ilm.get_status
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html'
  '/_ilm/move/{index}':
    parameters:
      - in: body
        name: request
        description: The new lifecycle step to move to
        required: false
        schema:
          $ref: '#/definitions/MoveToStepRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MoveToStepResponse'
      tags:
        - ilm.move_to_step
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index whose lifecycle step is to change
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html'
  '/{index}/_ilm/remove':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RemovePolicyResponse'
      tags:
        - ilm.remove_policy
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to remove policy on
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html'
  '/{index}/_ilm/retry':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RetryIlmResponse'
      tags:
        - ilm.retry
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the indices (comma-separated) whose failed lifecycle step is to be retry
          type: string
          format: IndexName
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html'
  /_ilm/start:
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartIlmResponse'
      tags:
        - ilm.start
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html'
  /_ilm/stop:
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StopIlmResponse'
      tags:
        - ilm.stop
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html'
  /_xpack:
    parameters:
      - in: query
        name: categories
        description: 'Comma-separated list of info categories. Can be any of: build, license, features'
        type: string
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/XPackInfoResponse'
      tags:
        - xpack.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html'
  /_xpack/usage:
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for watch write operation
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/XPackUsageResponse'
      tags:
        - xpack.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: Retrieve information about xpack features usage
  /_license:
    parameters:
      - in: query
        name: acknowledge
        description: 'whether the user has acknowledged acknowledge messages (default: false)'
        type: boolean
      - in: body
        name: request
        description: licenses to be installed
        required: false
        schema:
          $ref: '#/definitions/PostLicenseRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PostLicenseResponse'
      tags:
        - license.post
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PostLicenseResponse'
      tags:
        - license.post
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html'
  /_license/basic_status:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBasicLicenseStatusResponse'
      tags:
        - license.get_basic_status
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html'
  /_license/trial_status:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetTrialLicenseStatusResponse'
      tags:
        - license.get_trial_status
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html'
  /_license/start_basic:
    parameters:
      - in: query
        name: acknowledge
        description: 'whether the user has acknowledged acknowledge messages (default: false)'
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartBasicLicenseResponse'
      tags:
        - license.post_start_basic
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html'
  /_license/start_trial:
    parameters:
      - in: query
        name: type
        description: 'The type of trial license to generate (default: "trial")'
        type: string
      - in: query
        name: acknowledge
        description: 'whether the user has acknowledged acknowledge messages (default: false)'
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartTrialLicenseResponse'
      tags:
        - license.post_start_trial
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html'
  '/_ml/anomaly_detectors/{job_id}/_close':
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
      - in: query
        name: force
        description: True if the job should be forcefully closed
        type: boolean
      - in: query
        name: timeout
        description: Controls the time to wait until a job has closed. Default to 30 minutes
        type: string
        format: time
      - in: body
        name: request
        description: The URL params optionally sent in the body
        required: false
        schema:
          $ref: '#/definitions/CloseJobRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CloseJobResponse'
      tags:
        - ml.close_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job to close
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html'
  '/_ml/calendars/{calendar_id}/events/{event_id}':
    parameters: []
    delete:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteCalendarEventResponse'
      tags:
        - ml.delete_calendar_event
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: calendar_id
          required: true
          description: The ID of the calendar to modify
          type: string
          format: string_
        - in: path
          name: event_id
          required: true
          description: The ID of the event to remove from the calendar
          type: string
          format: string_
      externalDocs:
        url: ''
  '/_ml/calendars/{calendar_id}/jobs/{job_id}':
    parameters: []
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutCalendarJobResponse'
      tags:
        - ml.put_calendar_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: calendar_id
          required: true
          description: The ID of the calendar to modify
          type: string
          format: string_
        - in: path
          name: job_id
          required: true
          description: The ID of the job to add to the calendar
          type: string
          format: Id
      externalDocs:
        url: ''
  '/_ml/calendars/{calendar_id}':
    parameters:
      - in: body
        name: request
        description: The calendar details
        required: false
        schema:
          $ref: '#/definitions/PutCalendarRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutCalendarResponse'
      tags:
        - ml.put_calendar
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: calendar_id
          required: true
          description: The ID of the calendar to create
          type: string
          format: string_
      externalDocs:
        url: ''
  '/_ml/datafeeds/{datafeed_id}':
    parameters:
      - in: body
        name: request
        description: The datafeed config
        required: true
        schema:
          $ref: '#/definitions/PutDatafeedRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutDatafeedResponse'
      tags:
        - ml.put_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to create
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html'
  /_ml/_delete_expired_data:
    parameters: []
    delete:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteExpiredDataResponse'
      tags:
        - ml.delete_expired_data
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  '/_ml/filters/{filter_id}':
    parameters:
      - in: body
        name: request
        description: The filter details
        required: true
        schema:
          $ref: '#/definitions/PutFilterRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutFilterResponse'
      tags:
        - ml.put_filter
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: filter_id
          required: true
          description: The ID of the filter to create
          type: string
          format: Id
      externalDocs:
        url: ''
  '/_ml/anomaly_detectors/{job_id}/_forecast':
    parameters:
      - in: query
        name: duration
        description: The duration of the forecast
        type: string
        format: time
      - in: query
        name: expires_in
        description: The time interval after which the forecast expires. Expired forecasts will be deleted at the first opportunity.
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ForecastJobResponse'
      tags:
        - ml.forecast
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to forecast for
          type: string
          format: Id
      externalDocs:
        url: ''
  '/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}':
    parameters:
      - in: query
        name: allow_no_forecasts
        description: Whether to ignore if `_all` matches no forecasts
        type: boolean
      - in: query
        name: timeout
        description: Controls the time to wait until the forecast(s) are deleted. Default to 30 seconds
        type: string
        format: time
    delete:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteForecastResponse'
      tags:
        - ml.delete_forecast
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job from which to delete forecasts
          type: string
          format: Id
        - in: path
          name: forecast_id
          required: true
          description: 'The ID of the forecast to delete, can be comma delimited list. Leaving blank implies `_all`'
          type: string
          format: string_
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html'
  '/_ml/anomaly_detectors/{job_id}':
    parameters:
      - in: body
        name: request
        description: The job
        required: true
        schema:
          $ref: '#/definitions/PutJobRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutJobResponse'
      tags:
        - ml.put_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to create
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html'
  '/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}':
    parameters:
      - in: query
        name: from
        description: Skips a number of documents
        type: string
        format: int_
      - in: query
        name: size
        description: The default number of documents returned in queries as a string.
        type: string
        format: int_
      - in: query
        name: start
        description: The filter 'start' query parameter
        type: string
        format: date-time
      - in: query
        name: end
        description: The filter 'end' query parameter
        type: string
        format: date-time
      - in: query
        name: sort
        description: Name of the field to sort on
        type: string
      - in: query
        name: desc
        description: True if the results should be sorted in descending order
        type: boolean
      - in: body
        name: request
        description: Model snapshot selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetModelSnapshotsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
  '/_ml/anomaly_detectors/{job_id}/_flush':
    parameters:
      - in: query
        name: calc_interim
        description: Calculates interim results for the most recent bucket or all buckets within the latency period
        type: boolean
      - in: query
        name: start
        description: 'When used in conjunction with calc_interim, specifies the range of buckets on which to calculate interim results'
        type: string
      - in: query
        name: end
        description: 'When used in conjunction with calc_interim, specifies the range of buckets on which to calculate interim results'
        type: string
      - in: query
        name: advance_time
        description: Advances time to the given value generating results and updating the model for the advanced interval
        type: string
      - in: query
        name: skip_time
        description: Skips time to the given value without generating results or updating the model for the skipped interval
        type: string
      - in: body
        name: request
        description: Flush parameters
        required: false
        schema:
          $ref: '#/definitions/FlushJobRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushJobResponse'
      tags:
        - ml.flush_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job to flush
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html'
  '/_ml/anomaly_detectors/{job_id}/results/records':
    parameters:
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of records
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of records to get
        type: string
        format: int_
      - in: query
        name: start
        description: Start time filter for records
        type: string
      - in: query
        name: end
        description: End time filter for records
        type: string
      - in: query
        name: record_score
        description: record_score
        type: string
        format: double_
      - in: query
        name: sort
        description: Sort records by a particular field
        type: string
      - in: query
        name: desc
        description: Set the sort direction
        type: boolean
      - in: body
        name: request
        description: Record selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetAnomalyRecordsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAnomalyRecordsResponse'
      tags:
        - ml.get_records
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAnomalyRecordsResponse'
      tags:
        - ml.get_records
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html'
  '/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}':
    parameters:
      - in: query
        name: expand
        description: Include anomaly records
        type: boolean
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of buckets
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of buckets to get
        type: string
        format: int_
      - in: query
        name: start
        description: Start time filter for buckets
        type: string
      - in: query
        name: end
        description: End time filter for buckets
        type: string
      - in: query
        name: anomaly_score
        description: Filter for the most anomalous buckets
        type: string
        format: double_
      - in: query
        name: sort
        description: Sort buckets by a particular field
        type: string
      - in: query
        name: desc
        description: Set the sort direction
        type: boolean
      - in: body
        name: request
        description: Bucket selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetBucketsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
        - in: path
          name: timestamp
          required: true
          description: The timestamp of the desired single bucket result
          type: string
          format: Timestamp
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
        - in: path
          name: timestamp
          required: true
          description: The timestamp of the desired single bucket result
          type: string
          format: Timestamp
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
  '/_ml/anomaly_detectors/{job_id}/results/buckets':
    parameters:
      - in: query
        name: expand
        description: Include anomaly records
        type: boolean
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of buckets
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of buckets to get
        type: string
        format: int_
      - in: query
        name: start
        description: Start time filter for buckets
        type: string
      - in: query
        name: end
        description: End time filter for buckets
        type: string
      - in: query
        name: anomaly_score
        description: Filter for the most anomalous buckets
        type: string
        format: double_
      - in: query
        name: sort
        description: Sort buckets by a particular field
        type: string
      - in: query
        name: desc
        description: Set the sort direction
        type: boolean
      - in: body
        name: request
        description: Bucket selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetBucketsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
  '/_ml/calendars/{calendar_id}/events':
    parameters:
      - in: body
        name: request
        description: A list of events
        required: true
        schema:
          $ref: '#/definitions/PostCalendarEventsRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PostCalendarEventsResponse'
      tags:
        - ml.post_calendar_events
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: calendar_id
          required: true
          description: The ID of the calendar to modify
          type: string
          format: string_
      externalDocs:
        url: ''
  /_ml/calendars:
    parameters:
      - in: query
        name: from
        description: skips a number of calendars
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of calendars to get
        type: string
        format: int_
      - in: body
        name: request
        description: The from and size parameters optionally sent in the body
        required: false
        schema:
          $ref: '#/definitions/GetCalendarsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCalendarsResponse'
      tags:
        - ml.get_calendars
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCalendarsResponse'
      tags:
        - ml.get_calendars
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  '/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}':
    parameters:
      - in: query
        name: from
        description: skips a number of categories
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of categories to get
        type: string
        format: int_
      - in: body
        name: request
        description: Category selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetCategoriesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
        - in: path
          name: category_id
          required: true
          description: The identifier of the category definition of interest
          type: string
          format: CategoryId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
        - in: path
          name: category_id
          required: true
          description: The identifier of the category definition of interest
          type: string
          format: CategoryId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
  '/_ml/anomaly_detectors/{job_id}/results/categories/':
    parameters:
      - in: query
        name: from
        description: skips a number of categories
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of categories to get
        type: string
        format: int_
      - in: body
        name: request
        description: Category selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetCategoriesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
  '/_ml/datafeeds/{datafeed_id}/_stats':
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetDatafeedStatsResponse'
      tags:
        - ml.get_datafeed_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeeds stats to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html'
  /_ml/datafeeds/_stats:
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetDatafeedStatsResponse'
      tags:
        - ml.get_datafeed_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html'
  /_ml/datafeeds:
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetDatafeedsResponse'
      tags:
        - ml.get_datafeeds
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html'
  /_ml/filters:
    parameters:
      - in: query
        name: from
        description: skips a number of filters
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of filters to get
        type: string
        format: int_
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFiltersResponse'
      tags:
        - ml.get_filters
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  '/_ml/anomaly_detectors/{job_id}/results/influencers':
    parameters:
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of influencers
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of influencers to get
        type: string
        format: int_
      - in: query
        name: start
        description: start timestamp for the requested influencers
        type: string
      - in: query
        name: end
        description: end timestamp for the requested influencers
        type: string
      - in: query
        name: influencer_score
        description: influencer score threshold for the requested influencers
        type: string
        format: double_
      - in: query
        name: sort
        description: sort field for the requested influencers
        type: string
      - in: query
        name: desc
        description: whether the results should be sorted in decending order
        type: boolean
      - in: body
        name: request
        description: Influencer selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetInfluencersRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetInfluencersResponse'
      tags:
        - ml.get_influencers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetInfluencersResponse'
      tags:
        - ml.get_influencers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html'
  /_ml/anomaly_detectors/_stats:
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetJobStatsResponse'
      tags:
        - ml.get_job_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html'
  '/_ml/anomaly_detectors/{job_id}/_stats':
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetJobStatsResponse'
      tags:
        - ml.get_job_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the jobs stats to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html'
  /_ml/anomaly_detectors:
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetJobsResponse'
      tags:
        - ml.get_jobs
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html'
  '/_ml/anomaly_detectors/{job_id}/model_snapshots':
    parameters:
      - in: query
        name: from
        description: Skips a number of documents
        type: string
        format: int_
      - in: query
        name: size
        description: The default number of documents returned in queries as a string.
        type: string
        format: int_
      - in: query
        name: start
        description: The filter 'start' query parameter
        type: string
        format: date-time
      - in: query
        name: end
        description: The filter 'end' query parameter
        type: string
        format: date-time
      - in: query
        name: sort
        description: Name of the field to sort on
        type: string
      - in: query
        name: desc
        description: True if the results should be sorted in descending order
        type: boolean
      - in: body
        name: request
        description: Model snapshot selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetModelSnapshotsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
  '/_ml/anomaly_detectors/{job_id}/results/overall_buckets':
    parameters:
      - in: query
        name: top_n
        description: The number of top job bucket scores to be used in the overall_score calculation
        type: string
        format: int_
      - in: query
        name: bucket_span
        description: The span of the overall buckets. Defaults to the longest job bucket_span
        type: string
      - in: query
        name: overall_score
        description: Returns overall buckets with overall scores higher than this value
        type: string
        format: double_
      - in: query
        name: exclude_interim
        description: If true overall buckets that include interim buckets will be excluded
        type: boolean
      - in: query
        name: start
        description: Returns overall buckets with timestamps after this time
        type: string
      - in: query
        name: end
        description: Returns overall buckets with timestamps earlier than this time
        type: string
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
      - in: body
        name: request
        description: Overall bucket selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetOverallBucketsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetOverallBucketsResponse'
      tags:
        - ml.get_overall_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The job IDs for which to calculate overall bucket results
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetOverallBucketsResponse'
      tags:
        - ml.get_overall_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The job IDs for which to calculate overall bucket results
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html'
  /_ml/info:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MachineLearningInfoResponse'
      tags:
        - ml.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  '/_ml/anomaly_detectors/{job_id}/_open':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/OpenJobResponse'
      tags:
        - ml.open_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to open
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html'
  '/_ml/anomaly_detectors/{job_id}/_data':
    parameters:
      - in: query
        name: reset_start
        description: Optional parameter to specify the start of the bucket resetting range
        type: string
      - in: query
        name: reset_end
        description: Optional parameter to specify the end of the bucket resetting range
        type: string
      - in: body
        name: request
        description: The data to process
        required: true
        schema:
          $ref: '#/definitions/PostJobDataRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PostJobDataResponse'
      tags:
        - ml.post_data
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job receiving the data
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html'
  '/_ml/datafeeds/{datafeed_id}/_preview':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PreviewDatafeedResponse'
      tags:
        - ml.preview_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to preview
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html'
  '/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert':
    parameters:
      - in: query
        name: delete_intervening_results
        description: Should we reset the results back to the time of the snapshot?
        type: boolean
      - in: body
        name: request
        description: Reversion options
        required: false
        schema:
          $ref: '#/definitions/RevertModelSnapshotRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RevertModelSnapshotResponse'
      tags:
        - ml.revert_model_snapshot
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to revert to
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html'
  '/_ml/datafeeds/{datafeed_id}/_start':
    parameters:
      - in: query
        name: start
        description: The start time from where the datafeed should begin
        type: string
      - in: query
        name: end
        description: 'The end time when the datafeed should stop. When not set, the datafeed continues in real time'
        type: string
      - in: query
        name: timeout
        description: Controls the time to wait until a datafeed has started. Default to 20 seconds
        type: string
        format: time
      - in: body
        name: request
        description: The start datafeed parameters
        required: false
        schema:
          $ref: '#/definitions/StartDatafeedRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartDatafeedResponse'
      tags:
        - ml.start_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to start
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html'
  '/_ml/datafeeds/{datafeed_id}/_stop':
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
      - in: query
        name: force
        description: True if the datafeed should be forcefully stopped.
        type: boolean
      - in: query
        name: timeout
        description: Controls the time to wait until a datafeed has stopped. Default to 20 seconds
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StopDatafeedResponse'
      tags:
        - ml.stop_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to stop
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html'
  '/_ml/datafeeds/{datafeed_id}/_update':
    parameters:
      - in: body
        name: request
        description: The datafeed update settings
        required: true
        schema:
          $ref: '#/definitions/UpdateDatafeedRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateDatafeedResponse'
      tags:
        - ml.update_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to update
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html'
  '/_ml/filters/{filter_id}/_update':
    parameters:
      - in: body
        name: request
        description: The filter update
        required: true
        schema:
          $ref: '#/definitions/UpdateFilterRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateFilterResponse'
      tags:
        - ml.update_filter
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: filter_id
          required: true
          description: The ID of the filter to update
          type: string
          format: Id
      externalDocs:
        url: ''
  '/_ml/anomaly_detectors/{job_id}/_update':
    parameters:
      - in: body
        name: request
        description: The job update settings
        required: true
        schema:
          $ref: '#/definitions/UpdateJobRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateJobResponse'
      tags:
        - ml.update_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to create
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html'
  '/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update':
    parameters:
      - in: body
        name: request
        description: The model snapshot properties to update
        required: true
        schema:
          $ref: '#/definitions/UpdateModelSnapshotRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateModelSnapshotResponse'
      tags:
        - ml.update_model_snapshot
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to update
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html'
  /_ml/anomaly_detectors/_validate/detector:
    parameters:
      - in: body
        name: request
        description: The detector
        required: true
        schema:
          $ref: '#/definitions/ValidateDetectorRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateDetectorResponse'
      tags:
        - ml.validate_detector
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  /_ml/anomaly_detectors/_validate:
    parameters:
      - in: body
        name: request
        description: The job config
        required: true
        schema:
          $ref: '#/definitions/ValidateJobRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateJobResponse'
      tags:
        - ml.validate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  /_migration/deprecations:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeprecationInfoResponse'
      tags:
        - migration.deprecations
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html'
  '/{index}/_migration/deprecations':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeprecationInfoResponse'
      tags:
        - migration.deprecations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Index pattern
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html'
  '/_rollup/job/{id}':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRollupJobResponse'
      tags:
        - rollup.get_jobs
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: 'The ID of the job(s) to fetch. Accepts glob patterns, or left blank for all jobs'
          type: string
          format: Id
      externalDocs:
        url: ''
  '/_rollup/data/{id}':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRollupCapabilitiesResponse'
      tags:
        - rollup.get_rollup_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: 'The ID of the index to check rollup capabilities on, or left blank for all jobs'
          type: string
          format: Id
      externalDocs:
        url: ''
  /_rollup/data/:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRollupCapabilitiesResponse'
      tags:
        - rollup.get_rollup_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  '/{index}/_rollup/data':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRollupIndexCapabilitiesResponse'
      tags:
        - rollup.get_rollup_index_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The rollup index or index pattern to obtain rollup capabilities from.
          type: string
          format: IndexName
      externalDocs:
        url: ''
  /_rollup/job/:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRollupJobResponse'
      tags:
        - rollup.get_jobs
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: ''
  '{index}/_rollup_search':
    parameters:
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search request body
        required: true
        schema:
          $ref: '#/definitions/RollupSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RollupSearchResponse'
      tags:
        - rollup.rollup_search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The indices or index-pattern(s) (containing rollup or regular data) that should be searched
          type: string
          format: Indices
      externalDocs:
        url: ''
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RollupSearchResponse'
      tags:
        - rollup.rollup_search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The indices or index-pattern(s) (containing rollup or regular data) that should be searched
          type: string
          format: Indices
      externalDocs:
        url: ''
  '{index}/{type}/_rollup_search':
    parameters:
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: rest_total_hits_as_int
        description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response
        type: boolean
      - in: body
        name: request
        description: The search request body
        required: true
        schema:
          $ref: '#/definitions/RollupSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RollupSearchResponse'
      tags:
        - rollup.rollup_search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The indices or index-pattern(s) (containing rollup or regular data) that should be searched
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The doc type inside the index
          type: string
          format: TypeName
      externalDocs:
        url: ''
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RollupSearchResponse'
      tags:
        - rollup.rollup_search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The indices or index-pattern(s) (containing rollup or regular data) that should be searched
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The doc type inside the index
          type: string
          format: TypeName
      externalDocs:
        url: ''
  '/_rollup/job/{id}/_start':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartRollupJobResponse'
      tags:
        - rollup.start_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the job to start
          type: string
          format: Id
      externalDocs:
        url: ''
  '/_rollup/job/{id}/_stop':
    parameters:
      - in: query
        name: wait_for_completion
        description: 'True if the API should block until the job has fully stopped, false if should be executed async. Defaults to false.'
        type: boolean
      - in: query
        name: timeout
        description: Block for (at maximum) the specified duration while waiting for the job to stop.  Defaults to 30s.
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StopRollupJobResponse'
      tags:
        - rollup.stop_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the job to stop
          type: string
          format: Id
      externalDocs:
        url: ''
  /_security/api_key:
    parameters:
      - in: body
        name: request
        description: The api key request to invalidate API key(s)
        required: true
        schema:
          $ref: '#/definitions/InvalidateApiKeyRequest'
    delete:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/InvalidateApiKeyResponse'
      tags:
        - security.invalidate_api_key
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html'
  /_security/_authenticate:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AuthenticateResponse'
      tags:
        - security.authenticate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html'
  '/_security/realm/{realms}/_clear_cache':
    parameters:
      - in: query
        name: usernames
        description: Comma-separated list of usernames to clear from the cache
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCachedRealmsResponse'
      tags:
        - security.clear_cached_realms
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: realms
          required: true
          description: Comma-separated list of realms to clear
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html'
  '/_security/privilege/{application}/{name}':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetPrivilegesResponse'
      tags:
        - security.get_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: application
          required: true
          description: Application name
          type: string
          format: string_
        - in: path
          name: name
          required: true
          description: Privilege name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html'
  /_security/privilege:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetPrivilegesResponse'
      tags:
        - security.get_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html'
  '/_security/privilege/{application}':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetPrivilegesResponse'
      tags:
        - security.get_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: application
          required: true
          description: Application name
          type: string
          format: string_
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html'
  /_security/user/_privileges:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetUserPrivilegesResponse'
      tags:
        - security.get_user_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html'
  /_security/user/_has_privileges:
    parameters:
      - in: body
        name: request
        description: The privileges to test
        required: true
        schema:
          $ref: '#/definitions/HasPrivilegesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/HasPrivilegesResponse'
      tags:
        - security.has_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/HasPrivilegesResponse'
      tags:
        - security.has_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html'
  '/_security/user/{user}/_has_privileges':
    parameters:
      - in: body
        name: request
        description: The privileges to test
        required: true
        schema:
          $ref: '#/definitions/HasPrivilegesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/HasPrivilegesResponse'
      tags:
        - security.has_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: user
          required: true
          description: Username
          type: string
          format: string_
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/HasPrivilegesResponse'
      tags:
        - security.has_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: user
          required: true
          description: Username
          type: string
          format: string_
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html'
  /_security/privilege/:
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: The privilege(s) to add
        required: true
        schema:
          $ref: '#/definitions/PutPrivilegesRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutPrivilegesResponse'
      tags:
        - security.put_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: TODO
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutPrivilegesResponse'
      tags:
        - security.put_privileges
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: TODO
  '/_security/role_mapping/{name}':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: The role mapping to add
        required: true
        schema:
          $ref: '#/definitions/PutRoleMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleMappingResponse'
      tags:
        - security.put_role_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role-mapping name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleMappingResponse'
      tags:
        - security.put_role_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role-mapping name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html'
  /_security/role_mapping:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRoleMappingResponse'
      tags:
        - security.get_role_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html'
  '/_security/role/{name}/_clear_cache':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCachedRolesResponse'
      tags:
        - security.clear_cached_roles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role name
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html'
  '/_security/role/{name}':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: The role to add
        required: true
        schema:
          $ref: '#/definitions/PutRoleRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleResponse'
      tags:
        - security.put_role
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleResponse'
      tags:
        - security.put_role
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html'
  /_security/role:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRoleResponse'
      tags:
        - security.get_role
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html'
  '/_security/user/{username}/_password':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: the new password for the user
        required: true
        schema:
          $ref: '#/definitions/ChangePasswordRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to change the password for
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to change the password for
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
  /_security/user/_password:
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: the new password for the user
        required: true
        schema:
          $ref: '#/definitions/ChangePasswordRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
  '/_security/user/{username}':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: The user to add
        required: true
        schema:
          $ref: '#/definitions/PutUserRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutUserResponse'
      tags:
        - security.put_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the User
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutUserResponse'
      tags:
        - security.put_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the User
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html'
  '/_security/user/{username}/_disable':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DisableUserResponse'
      tags:
        - security.disable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to disable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DisableUserResponse'
      tags:
        - security.disable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to disable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html'
  '/_security/user/{username}/_enable':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/EnableUserResponse'
      tags:
        - security.enable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to enable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/EnableUserResponse'
      tags:
        - security.enable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to enable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html'
  /_security/oauth2/token:
    parameters:
      - in: body
        name: request
        description: The token to invalidate
        required: true
        schema:
          $ref: '#/definitions/InvalidateUserAccessTokenRequest'
    delete:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/InvalidateUserAccessTokenResponse'
      tags:
        - security.invalidate_token
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html'
  /_security/user:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetUserResponse'
      tags:
        - security.get_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html'
  '/_slm/policy/{policy_id}':
    parameters:
      - in: body
        name: request
        description: The snapshot lifecycle policy definition to register
        required: false
        schema:
          $ref: '#/definitions/PutSnapshotLifecycleRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutSnapshotLifecycleResponse'
      tags:
        - slm.put_lifecycle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: policy_id
          required: true
          description: The id of the snapshot lifecycle policy
          type: string
          format: string_
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-put.html'
  '/_slm/policy/{policy_id}/_execute':
    parameters: []
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteSnapshotLifecycleResponse'
      tags:
        - slm.execute_lifecycle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: policy_id
          required: true
          description: The id of the snapshot lifecycle policy to be executed
          type: string
          format: string_
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-execute.html'
  /_slm/policy:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetSnapshotLifecycleResponse'
      tags:
        - slm.get_lifecycle
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-get.html'
  /_sql/close:
    parameters:
      - in: body
        name: request
        description: Specify the cursor value in the `cursor` element to clean the cursor.
        required: true
        schema:
          $ref: '#/definitions/ClearSqlCursorRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearSqlCursorResponse'
      tags:
        - sql.clear_cursor
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: Clear SQL cursor
  /_sql:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: body
        name: request
        description: Use the `query` element to start a query. Use the `cursor` element to continue a query.
        required: true
        schema:
          $ref: '#/definitions/QuerySqlRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/QuerySqlResponse'
      tags:
        - sql.query
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: Execute SQL
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/QuerySqlResponse'
      tags:
        - sql.query
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: Execute SQL
  /_sql/translate:
    parameters:
      - in: body
        name: request
        description: Specify the query in the `query` element.
        required: true
        schema:
          $ref: '#/definitions/TranslateSqlRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TranslateSqlResponse'
      tags:
        - sql.translate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: Translate SQL into Elasticsearch queries
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TranslateSqlResponse'
      tags:
        - sql.translate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: Translate SQL into Elasticsearch queries
  /_ssl/certificates:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCertificatesResponse'
      tags:
        - ssl.certificates
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html'
  '/_watcher/watch/{watch_id}/_ack':
    parameters: []
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
  '/_watcher/watch/{watch_id}/_ack/{action_id}':
    parameters: []
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
        - in: path
          name: action_id
          required: true
          description: A comma-separated list of the action ids to be acked
          type: string
          format: ActionIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
        - in: path
          name: action_id
          required: true
          description: A comma-separated list of the action ids to be acked
          type: string
          format: ActionIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
  '/_watcher/watch/{watch_id}/_activate':
    parameters: []
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ActivateWatchResponse'
      tags:
        - watcher.activate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ActivateWatchResponse'
      tags:
        - watcher.activate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html'
  '/_watcher/watch/{watch_id}/_deactivate':
    parameters: []
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeactivateWatchResponse'
      tags:
        - watcher.deactivate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeactivateWatchResponse'
      tags:
        - watcher.deactivate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html'
  '/_watcher/watch/{id}':
    parameters:
      - in: query
        name: active
        description: Specify whether the watch is in/active by default
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: if_seq_no
        description: only update the watch if the last operation that has changed the watch has the specified sequence number
        type: integer
        format: long
      - in: query
        name: if_primary_term
        description: only update the watch if the last operation that has changed the watch has the specified primary term
        type: integer
        format: long
      - in: body
        name: request
        description: The watch
        required: false
        schema:
          $ref: '#/definitions/PutWatchRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutWatchResponse'
      tags:
        - watcher.put_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutWatchResponse'
      tags:
        - watcher.put_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html'
  '/_watcher/watch/{id}/_execute':
    parameters:
      - in: query
        name: debug
        description: indicates whether the watch should execute in debug mode
        type: boolean
      - in: body
        name: request
        description: Execution control
        required: false
        schema:
          $ref: '#/definitions/ExecuteWatchRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
  /_watcher/watch/_execute:
    parameters:
      - in: query
        name: debug
        description: indicates whether the watch should execute in debug mode
        type: boolean
      - in: body
        name: request
        description: Execution control
        required: false
        schema:
          $ref: '#/definitions/ExecuteWatchRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
  /_watcher/_start:
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartWatcherResponse'
      tags:
        - watcher.start
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html'
  /_watcher/_stop:
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StopWatcherResponse'
      tags:
        - watcher.stop
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html'
  /_watcher/stats:
    parameters:
      - in: query
        name: metric
        description: Controls what additional stat metrics should be include in the response
        type: string
      - in: query
        name: emit_stacktraces
        description: Emits stack traces of currently running watches
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/WatcherStatsResponse'
      tags:
        - watcher.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html'
  '/_watcher/stats/{metric}':
    parameters:
      - in: query
        name: metric
        description: Controls what additional stat metrics should be include in the response
        type: string
      - in: query
        name: emit_stacktraces
        description: Emits stack traces of currently running watches
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/WatcherStatsResponse'
      tags:
        - watcher.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Controls what additional stat metrics should be include in the response
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html'
definitions:
  Uri:
    type: string
    format: uri
  Date:
    type: string
    format: date-time
  TimeSpan:
    type: string
    format: time
  SourceDocument:
    type: object
  short:
    type: integer
    format: short
  byte:
    type: integer
    format: byte
  integer:
    type: integer
    format: integer
  long:
    type: integer
    format: long
  float:
    type: number
    format: float
  double:
    type: number
    format: double
  PlainRequestBase:
    type: object
    properties:
      error_trace:
        type: boolean
      filter_path:
        type: array
        items:
          type: string
      human:
        type: boolean
      pretty:
        type: boolean
      source_query_string:
        type: string
  Aggregate:
    type: object
    properties:
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  Aggregation:
    type: object
    properties:
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      name:
        type: string
  AggregationContainer:
    type: object
    properties:
      adjacency_matrix:
        $ref: '#/definitions/AdjacencyMatrixAggregation'
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      average:
        $ref: '#/definitions/AverageAggregation'
      average_bucket:
        $ref: '#/definitions/AverageBucketAggregation'
      bucket_script:
        $ref: '#/definitions/BucketScriptAggregation'
      bucket_selector:
        $ref: '#/definitions/BucketSelectorAggregation'
      bucket_sort:
        $ref: '#/definitions/BucketSortAggregation'
      cardinality:
        $ref: '#/definitions/CardinalityAggregation'
      children:
        $ref: '#/definitions/ChildrenAggregation'
      composite:
        $ref: '#/definitions/CompositeAggregation'
      cumulative_sum:
        $ref: '#/definitions/CumulativeSumAggregation'
      cumulative_cardinality:
        $ref: '#/definitions/CumulativeCardinalityAggregation'
      date_histogram:
        $ref: '#/definitions/DateHistogramAggregation'
      auto_date_histogram:
        $ref: '#/definitions/AutoDateHistogramAggregation'
      date_range:
        $ref: '#/definitions/DateRangeAggregation'
      derivative:
        $ref: '#/definitions/DerivativeAggregation'
      extended_stats:
        $ref: '#/definitions/ExtendedStatsAggregation'
      extended_stats_bucket:
        $ref: '#/definitions/ExtendedStatsBucketAggregation'
      filter:
        $ref: '#/definitions/FilterAggregation'
      filters:
        $ref: '#/definitions/FiltersAggregation'
      geo_bounds:
        $ref: '#/definitions/GeoBoundsAggregation'
      geo_centroid:
        $ref: '#/definitions/GeoCentroidAggregation'
      geo_distance:
        $ref: '#/definitions/GeoDistanceAggregation'
      geo_hash:
        $ref: '#/definitions/GeoHashGridAggregation'
      geo_tile:
        $ref: '#/definitions/GeoTileGridAggregation'
      global:
        $ref: '#/definitions/GlobalAggregation'
      histogram:
        $ref: '#/definitions/HistogramAggregation'
      ip_range:
        $ref: '#/definitions/IpRangeAggregation'
      matrix_stats:
        $ref: '#/definitions/MatrixStatsAggregation'
      max:
        $ref: '#/definitions/MaxAggregation'
      max_bucket:
        $ref: '#/definitions/MaxBucketAggregation'
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      min:
        $ref: '#/definitions/MinAggregation'
      min_bucket:
        $ref: '#/definitions/MinBucketAggregation'
      missing:
        $ref: '#/definitions/MissingAggregation'
      moving_average:
        $ref: '#/definitions/MovingAverageAggregation'
      moving_function:
        $ref: '#/definitions/MovingFunctionAggregation'
      nested:
        $ref: '#/definitions/NestedAggregation'
      parent:
        $ref: '#/definitions/ParentAggregation'
      percentile_ranks:
        $ref: '#/definitions/PercentileRanksAggregation'
      percentiles:
        $ref: '#/definitions/PercentilesAggregation'
      percentiles_bucket:
        $ref: '#/definitions/PercentilesBucketAggregation'
      range:
        $ref: '#/definitions/RangeAggregation'
      rare_terms:
        $ref: '#/definitions/RareTermsAggregation'
      reverse_nested:
        $ref: '#/definitions/ReverseNestedAggregation'
      sampler:
        $ref: '#/definitions/SamplerAggregation'
      scripted_metric:
        $ref: '#/definitions/ScriptedMetricAggregation'
      serial_differencing:
        $ref: '#/definitions/SerialDifferencingAggregation'
      significant_terms:
        $ref: '#/definitions/SignificantTermsAggregation'
      significant_text:
        $ref: '#/definitions/SignificantTextAggregation'
      stats:
        $ref: '#/definitions/StatsAggregation'
      stats_bucket:
        $ref: '#/definitions/StatsBucketAggregation'
      sum:
        $ref: '#/definitions/SumAggregation'
      sum_bucket:
        $ref: '#/definitions/SumBucketAggregation'
      terms:
        $ref: '#/definitions/TermsAggregation'
      top_hits:
        $ref: '#/definitions/TopHitsAggregation'
      value_count:
        $ref: '#/definitions/ValueCountAggregation'
      weighted_average:
        $ref: '#/definitions/WeightedAverageAggregation'
      median_absolute_deviation:
        $ref: '#/definitions/MedianAbsoluteDeviationAggregation'
  BucketAggregation:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
  AdjacencyMatrixAggregation:
    type: object
    properties:
      filters:
        type: object
        additionalProperties:
          $ref: '#/definitions/QueryContainer'
  AutoDateHistogramAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      buckets:
        $ref: '#/definitions/integer'
      format:
        type: string
      missing:
        $ref: '#/definitions/Date'
      offset:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      script:
        $ref: '#/definitions/Script'
      time_zone:
        type: string
      minimum_interval:
        $ref: '#/definitions/MinimumInterval'
  ChildrenAggregation:
    type: object
    properties:
      type:
        $ref: '#/definitions/RelationName'
  CompositeAggregation:
    type: object
    properties:
      after:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      size:
        $ref: '#/definitions/integer'
      sources:
        type: array
        items:
          $ref: '#/definitions/CompositeAggregationSource'
  CompositeAggregationSource:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      missing_bucket:
        type: boolean
      name:
        type: string
      order:
        $ref: '#/definitions/SortOrder'
      source_type:
        type: string
  DateHistogramAggregation:
    type: object
    properties:
      extended_bounds:
        $ref: '#/definitions/ExtendedBounds<DateMath>'
      field:
        $ref: '#/definitions/Field'
      format:
        type: string
      interval:
        description: 'Not an array but: union<DateInterval, Time>'
        type: array
        items:
          - $ref: '#/definitions/DateInterval'
          - $ref: '#/definitions/Time'
      calendar_interval:
        description: 'Not an array but: union<DateInterval, Time>'
        type: array
        items:
          - $ref: '#/definitions/DateInterval'
          - $ref: '#/definitions/Time'
      fixed_interval:
        description: 'Not an array but: union<DateInterval, Time>'
        type: array
        items:
          - $ref: '#/definitions/DateInterval'
          - $ref: '#/definitions/Time'
      minimum_document_count:
        $ref: '#/definitions/integer'
      missing:
        $ref: '#/definitions/Date'
      offset:
        type: string
      order:
        $ref: '#/definitions/HistogramOrder'
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      script:
        $ref: '#/definitions/Script'
      time_zone:
        type: string
  DateRangeAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      format:
        type: string
      missing:
        $ref: '#/definitions/object'
      ranges:
        type: array
        items:
          $ref: '#/definitions/DateRangeExpression'
      time_zone:
        type: string
  DateRangeExpression:
    type: object
    properties:
      from:
        $ref: '#/definitions/DateMath'
      key:
        type: string
      to:
        $ref: '#/definitions/DateMath'
  FilterAggregation:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
  FiltersAggregation:
    type: object
    properties:
      filters:
        description: 'Not an array but: union<dict<key: string, value: QueryContainer >, QueryContainer[]>'
        type: array
        items:
          - type: object
            additionalProperties:
              $ref: '#/definitions/QueryContainer'
          - type: array
            items:
              $ref: '#/definitions/QueryContainer'
      other_bucket:
        type: boolean
      other_bucket_key:
        type: string
  GeoDistanceAggregation:
    type: object
    properties:
      distance_type:
        $ref: '#/definitions/GeoDistanceType'
      field:
        $ref: '#/definitions/Field'
      origin:
        $ref: '#/definitions/GeoLocation'
      ranges:
        type: array
        items:
          $ref: '#/definitions/AggregationRange'
      unit:
        $ref: '#/definitions/DistanceUnit'
  GeoHashGridAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      precision:
        $ref: '#/definitions/GeoHashPrecision'
      shard_size:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  GeoTileGridAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      precision:
        $ref: '#/definitions/GeoTilePrecision'
      shard_size:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  GlobalAggregation:
    type: object
    properties: {}
  ExtendedBounds:
    type: object
    properties:
      maximum:
        $ref: '#/definitions/T'
      minimum:
        $ref: '#/definitions/T'
  HistogramAggregation:
    type: object
    properties:
      extended_bounds:
        $ref: '#/definitions/ExtendedBounds<double>'
      field:
        $ref: '#/definitions/Field'
      interval:
        $ref: '#/definitions/double'
      minimum_document_count:
        $ref: '#/definitions/integer'
      missing:
        $ref: '#/definitions/double'
      offset:
        $ref: '#/definitions/double'
      order:
        $ref: '#/definitions/HistogramOrder'
      script:
        $ref: '#/definitions/Script'
  HistogramOrder:
    type: object
    properties:
      count_ascending:
        $ref: '#/definitions/HistogramOrder'
      count_descending:
        $ref: '#/definitions/HistogramOrder'
      key:
        type: string
      key_ascending:
        $ref: '#/definitions/HistogramOrder'
      key_descending:
        $ref: '#/definitions/HistogramOrder'
      order:
        $ref: '#/definitions/SortOrder'
  IpRangeAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      ranges:
        type: array
        items:
          $ref: '#/definitions/IpRangeAggregationRange'
  IpRangeAggregationRange:
    type: object
    properties:
      from:
        type: string
      mask:
        type: string
      to:
        type: string
  MissingAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
  NestedAggregation:
    type: object
    properties:
      path:
        $ref: '#/definitions/Field'
  ParentAggregation:
    type: object
    properties:
      type:
        $ref: '#/definitions/RelationName'
  RangeAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      ranges:
        type: array
        items:
          $ref: '#/definitions/AggregationRange'
      script:
        $ref: '#/definitions/Script'
  RareTermsAggregation:
    type: object
    properties:
      exclude:
        $ref: '#/definitions/TermsExclude'
      field:
        $ref: '#/definitions/Field'
      include:
        $ref: '#/definitions/TermsInclude'
      maximum_document_count:
        $ref: '#/definitions/long'
      missing:
        $ref: '#/definitions/object'
      precision:
        $ref: '#/definitions/double'
  ReverseNestedAggregation:
    type: object
    properties:
      path:
        $ref: '#/definitions/Field'
  SamplerAggregation:
    type: object
    properties:
      execution_hint:
        $ref: '#/definitions/SamplerAggregationExecutionHint'
      max_docs_per_value:
        $ref: '#/definitions/integer'
      script:
        $ref: '#/definitions/Script'
      shard_size:
        $ref: '#/definitions/integer'
  IncludeExclude:
    type: object
    properties:
      pattern:
        type: string
      values:
        type: array
        items:
          type: string
  SignificantTermsAggregation:
    type: object
    properties:
      background_filter:
        $ref: '#/definitions/QueryContainer'
      chi_square:
        $ref: '#/definitions/ChiSquareHeuristic'
      exclude:
        $ref: '#/definitions/IncludeExclude'
      execution_hint:
        $ref: '#/definitions/TermsAggregationExecutionHint'
      field:
        $ref: '#/definitions/Field'
      google_normalized_distance:
        $ref: '#/definitions/GoogleNormalizedDistanceHeuristic'
      include:
        $ref: '#/definitions/IncludeExclude'
      minimum_document_count:
        $ref: '#/definitions/long'
      mutual_information:
        $ref: '#/definitions/MutualInformationHeuristic'
      percentage_score:
        $ref: '#/definitions/PercentageScoreHeuristic'
      script:
        $ref: '#/definitions/ScriptedHeuristic'
      shard_minimum_document_count:
        $ref: '#/definitions/long'
      shard_size:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  ChiSquareHeuristic:
    type: object
    properties:
      background_is_super_set:
        type: boolean
      include_negatives:
        type: boolean
  GoogleNormalizedDistanceHeuristic:
    type: object
    properties:
      background_is_super_set:
        type: boolean
  MutualInformationHeuristic:
    type: object
    properties:
      background_is_super_set:
        type: boolean
      include_negatives:
        type: boolean
  PercentageScoreHeuristic:
    type: object
    properties: {}
  ScriptedHeuristic:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  SignificantTextAggregation:
    type: object
    properties:
      background_filter:
        $ref: '#/definitions/QueryContainer'
      chi_square:
        $ref: '#/definitions/ChiSquareHeuristic'
      exclude:
        $ref: '#/definitions/IncludeExclude'
      execution_hint:
        $ref: '#/definitions/TermsAggregationExecutionHint'
      field:
        $ref: '#/definitions/Field'
      filter_duplicate_text:
        type: boolean
      google_normalized_distance:
        $ref: '#/definitions/GoogleNormalizedDistanceHeuristic'
      include:
        $ref: '#/definitions/IncludeExclude'
      minimum_document_count:
        $ref: '#/definitions/long'
      mutual_information:
        $ref: '#/definitions/MutualInformationHeuristic'
      percentage_score:
        $ref: '#/definitions/PercentageScoreHeuristic'
      script:
        $ref: '#/definitions/ScriptedHeuristic'
      shard_minimum_document_count:
        $ref: '#/definitions/long'
      shard_size:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
      source_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
  TermsAggregation:
    type: object
    properties:
      collect_mode:
        $ref: '#/definitions/TermsAggregationCollectMode'
      exclude:
        $ref: '#/definitions/TermsExclude'
      execution_hint:
        $ref: '#/definitions/TermsAggregationExecutionHint'
      field:
        $ref: '#/definitions/Field'
      include:
        $ref: '#/definitions/TermsInclude'
      minimum_document_count:
        $ref: '#/definitions/integer'
      missing:
        $ref: '#/definitions/object'
      order:
        type: array
        items:
          $ref: '#/definitions/TermsOrder'
      script:
        $ref: '#/definitions/Script'
      shard_size:
        $ref: '#/definitions/integer'
      show_term_doc_count_error:
        type: boolean
      size:
        $ref: '#/definitions/integer'
  TermsExclude:
    type: object
    properties:
      pattern:
        type: string
      values:
        type: array
        items:
          type: string
  TermsInclude:
    type: object
    properties:
      number_of_partitions:
        $ref: '#/definitions/long'
      partition:
        $ref: '#/definitions/long'
      pattern:
        type: string
      values:
        type: array
        items:
          type: string
  TermsOrder:
    type: object
    properties:
      count_ascending:
        $ref: '#/definitions/TermsOrder'
      count_descending:
        $ref: '#/definitions/TermsOrder'
      key:
        type: string
      key_ascending:
        $ref: '#/definitions/TermsOrder'
      key_descending:
        $ref: '#/definitions/TermsOrder'
      order:
        $ref: '#/definitions/SortOrder'
  MatrixAggregation:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      missing:
        type: object
        additionalProperties:
          $ref: '#/definitions/double'
  MatrixStatsAggregation:
    type: object
    properties:
      mode:
        $ref: '#/definitions/MatrixStatsMode'
  MetricAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      missing:
        $ref: '#/definitions/double'
      script:
        $ref: '#/definitions/Script'
  AverageAggregation:
    type: object
    properties: {}
  CardinalityAggregation:
    type: object
    properties:
      precision_threshold:
        $ref: '#/definitions/integer'
      rehash:
        type: boolean
  ExtendedStatsAggregation:
    type: object
    properties:
      sigma:
        $ref: '#/definitions/double'
  GeoBoundsAggregation:
    type: object
    properties:
      wrap_longitude:
        type: boolean
  GeoCentroidAggregation:
    type: object
    properties: {}
  MaxAggregation:
    type: object
    properties: {}
  MedianAbsoluteDeviationAggregation:
    type: object
    properties:
      compression:
        $ref: '#/definitions/double'
  MinAggregation:
    type: object
    properties: {}
  PercentileRanksAggregation:
    type: object
    properties:
      method:
        $ref: '#/definitions/PercentilesMethod'
      values:
        type: array
        items:
          $ref: '#/definitions/double'
      keyed:
        type: boolean
  PercentilesAggregation:
    type: object
    properties:
      method:
        $ref: '#/definitions/PercentilesMethod'
      percents:
        type: array
        items:
          $ref: '#/definitions/double'
      keyed:
        type: boolean
  PercentilesMethod:
    type: object
    properties: {}
  ScriptedMetricAggregation:
    type: object
    properties:
      combine_script:
        $ref: '#/definitions/Script'
      init_script:
        $ref: '#/definitions/Script'
      map_script:
        $ref: '#/definitions/Script'
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      reduce_script:
        $ref: '#/definitions/Script'
  StatsAggregation:
    type: object
    properties: {}
  SumAggregation:
    type: object
    properties: {}
  TopHitsAggregation:
    type: object
    properties:
      doc_value_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      explain:
        type: boolean
      from:
        $ref: '#/definitions/integer'
      highlight:
        $ref: '#/definitions/Highlight'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      size:
        $ref: '#/definitions/integer'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      track_scores:
        type: boolean
      version:
        type: boolean
  ValueCountAggregation:
    type: object
    properties: {}
  WeightedAverageAggregation:
    type: object
    properties:
      format:
        type: string
      value:
        $ref: '#/definitions/WeightedAverageValue'
      value_type:
        $ref: '#/definitions/ValueType'
      weight:
        $ref: '#/definitions/WeightedAverageValue'
  WeightedAverageValue:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      missing:
        $ref: '#/definitions/double'
      script:
        $ref: '#/definitions/Script'
  BucketsPath:
    type: object
    properties: {}
  PipelineAggregation:
    type: object
    properties:
      buckets_path:
        $ref: '#/definitions/BucketsPath'
      format:
        type: string
      gap_policy:
        $ref: '#/definitions/GapPolicy'
  AverageBucketAggregation:
    type: object
    properties: {}
  BucketScriptAggregation:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  BucketSelectorAggregation:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  BucketSortAggregation:
    type: object
    properties:
      from:
        $ref: '#/definitions/integer'
      gap_policy:
        $ref: '#/definitions/GapPolicy'
      size:
        $ref: '#/definitions/integer'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
  CumulativeCardinalityAggregation:
    type: object
    properties: {}
  CumulativeSumAggregation:
    type: object
    properties: {}
  DerivativeAggregation:
    type: object
    properties: {}
  ExtendedStatsBucketAggregation:
    type: object
    properties:
      sigma:
        $ref: '#/definitions/double'
  MaxBucketAggregation:
    type: object
    properties: {}
  MinBucketAggregation:
    type: object
    properties: {}
  MovingAverageAggregation:
    type: object
    properties:
      minimize:
        type: boolean
      model:
        $ref: '#/definitions/MovingAverageModel'
      predict:
        $ref: '#/definitions/integer'
      window:
        $ref: '#/definitions/integer'
  MovingAverageModel:
    type: object
    properties:
      name:
        type: string
  MovingFunctionAggregation:
    type: object
    properties:
      script:
        type: string
      window:
        $ref: '#/definitions/integer'
      shift:
        $ref: '#/definitions/integer'
  PercentilesBucketAggregation:
    type: object
    properties:
      percents:
        type: array
        items:
          $ref: '#/definitions/double'
  SerialDifferencingAggregation:
    type: object
    properties:
      lag:
        $ref: '#/definitions/integer'
  StatsBucketAggregation:
    type: object
    properties: {}
  SumBucketAggregation:
    type: object
    properties: {}
  StopWords:
    type: object
    properties: {}
  AnalyzerBase:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  CustomAnalyzer:
    type: object
    properties:
      char_filter:
        type: array
        items:
          type: string
      filter:
        type: array
        items:
          type: string
      position_offset_gap:
        $ref: '#/definitions/integer'
      tokenizer:
        type: string
  FingerprintAnalyzer:
    type: object
    properties:
      max_output_size:
        $ref: '#/definitions/integer'
      preserve_original:
        type: boolean
      separator:
        type: string
      stop_words:
        $ref: '#/definitions/StopWords'
      stop_words_path:
        type: string
  IAnalyzer:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  KeywordAnalyzer:
    type: object
    properties: {}
  LanguageAnalyzer:
    type: object
    properties:
      language:
        $ref: '#/definitions/Language'
      stem_exclusion_list:
        type: array
        items:
          type: string
      stop_words:
        $ref: '#/definitions/StopWords'
      stopwords_path:
        type: string
      type:
        type: string
  NoriAnalyzer:
    type: object
    properties:
      decompound_mode:
        $ref: '#/definitions/NoriDecompoundMode'
      stop_tags:
        type: array
        items:
          type: string
      user_dictionary:
        type: string
  PatternAnalyzer:
    type: object
    properties:
      flags:
        type: string
      lowercase:
        type: boolean
      pattern:
        type: string
      stop_words:
        $ref: '#/definitions/StopWords'
  SimpleAnalyzer:
    type: object
    properties: {}
  SnowballAnalyzer:
    type: object
    properties:
      language:
        $ref: '#/definitions/SnowballLanguage'
      stop_words:
        $ref: '#/definitions/StopWords'
  StandardAnalyzer:
    type: object
    properties:
      max_token_length:
        $ref: '#/definitions/integer'
      stop_words:
        $ref: '#/definitions/StopWords'
  StopAnalyzer:
    type: object
    properties:
      stop_words:
        $ref: '#/definitions/StopWords'
      stopwords_path:
        type: string
  WhitespaceAnalyzer:
    type: object
    properties: {}
  CharFilterBase:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  HtmlStripCharFilter:
    type: object
    properties: {}
  ICharFilter:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  MappingCharFilter:
    type: object
    properties:
      mappings:
        type: array
        items:
          type: string
      mappings_path:
        type: string
  PatternReplaceCharFilter:
    type: object
    properties:
      flags:
        type: string
      pattern:
        type: string
      replacement:
        type: string
  IcuAnalyzer:
    type: object
    properties:
      method:
        $ref: '#/definitions/IcuNormalizationType'
      mode:
        $ref: '#/definitions/IcuNormalizationMode'
  IcuCollationTokenFilter:
    type: object
    properties:
      alternate:
        $ref: '#/definitions/IcuCollationAlternate'
      case_first:
        $ref: '#/definitions/IcuCollationCaseFirst'
      case_level:
        type: boolean
      country:
        type: string
      decomposition:
        $ref: '#/definitions/IcuCollationDecomposition'
      hiragana_quaternary_mode:
        type: boolean
      language:
        type: string
      numeric:
        type: boolean
      strength:
        $ref: '#/definitions/IcuCollationStrength'
      variable_top:
        type: string
      variant:
        type: string
  IcuFoldingTokenFilter:
    type: object
    properties:
      unicode_set_filter:
        type: string
  IcuNormalizationCharFilter:
    type: object
    properties:
      mode:
        $ref: '#/definitions/IcuNormalizationMode'
      name:
        $ref: '#/definitions/IcuNormalizationType'
  IcuNormalizationTokenFilter:
    type: object
    properties:
      name:
        $ref: '#/definitions/IcuNormalizationType'
  IcuTokenizer:
    type: object
    properties:
      rule_files:
        type: string
  IcuTransformTokenFilter:
    type: object
    properties:
      direction:
        $ref: '#/definitions/IcuTransformDirection'
      id:
        type: string
  KuromojiAnalyzer:
    type: object
    properties:
      mode:
        $ref: '#/definitions/KuromojiTokenizationMode'
      user_dictionary:
        type: string
  KuromojiIterationMarkCharFilter:
    type: object
    properties:
      normalize_kana:
        type: boolean
      normalize_kanji:
        type: boolean
  KuromojiPartOfSpeechTokenFilter:
    type: object
    properties:
      stop_tags:
        type: array
        items:
          type: string
  KuromojiReadingFormTokenFilter:
    type: object
    properties:
      use_romaji:
        type: boolean
  KuromojiStemmerTokenFilter:
    type: object
    properties:
      minimum_length:
        $ref: '#/definitions/integer'
  KuromojiTokenizer:
    type: object
    properties:
      discard_punctuation:
        type: boolean
      mode:
        $ref: '#/definitions/KuromojiTokenizationMode'
      n_best_cost:
        $ref: '#/definitions/integer'
      n_best_examples:
        type: string
      user_dictionary:
        type: string
      user_dictionary_rules:
        type: array
        items:
          type: string
  PhoneticTokenFilter:
    type: object
    properties:
      encoder:
        $ref: '#/definitions/PhoneticEncoder'
      language_set:
        type: array
        items:
          $ref: '#/definitions/PhoneticLanguage'
      max_code_length:
        $ref: '#/definitions/integer'
      name_type:
        $ref: '#/definitions/PhoneticNameType'
      replace:
        type: boolean
      rule_type:
        $ref: '#/definitions/PhoneticRuleType'
  AsciiFoldingTokenFilter:
    type: object
    properties:
      preserve_original:
        type: boolean
  CommonGramsTokenFilter:
    type: object
    properties:
      common_words:
        type: array
        items:
          type: string
      common_words_path:
        type: string
      ignore_case:
        type: boolean
      query_mode:
        type: boolean
  ConditionTokenFilter:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
      filters:
        type: array
        items:
          type: string
  ElisionTokenFilter:
    type: object
    properties:
      articles:
        type: array
        items:
          type: string
      articles_case:
        type: boolean
  FingerprintTokenFilter:
    type: object
    properties:
      max_output_size:
        $ref: '#/definitions/integer'
      separator:
        type: string
  HunspellTokenFilter:
    type: object
    properties:
      dedup:
        type: boolean
      dictionary:
        type: string
      locale:
        type: string
      longest_only:
        type: boolean
  ITokenFilter:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  KStemTokenFilter:
    type: object
    properties: {}
  KeepTypesTokenFilter:
    type: object
    properties:
      mode:
        $ref: '#/definitions/KeepTypesMode'
      types:
        type: array
        items:
          type: string
  KeepWordsTokenFilter:
    type: object
    properties:
      keep_words:
        type: array
        items:
          type: string
      keep_words_case:
        type: boolean
      keep_words_path:
        type: string
  KeywordMarkerTokenFilter:
    type: object
    properties:
      ignore_case:
        type: boolean
      keywords:
        type: array
        items:
          type: string
      keywords_path:
        type: string
      keywords_pattern:
        type: string
  LengthTokenFilter:
    type: object
    properties:
      max:
        $ref: '#/definitions/integer'
      min:
        $ref: '#/definitions/integer'
  LimitTokenCountTokenFilter:
    type: object
    properties:
      consume_all_tokens:
        type: boolean
      max_token_count:
        $ref: '#/definitions/integer'
  LowercaseTokenFilter:
    type: object
    properties:
      language:
        type: string
  MultiplexerTokenFilter:
    type: object
    properties:
      filters:
        type: array
        items:
          type: string
      preserve_original:
        type: boolean
  NGramTokenFilter:
    type: object
    properties:
      max_gram:
        $ref: '#/definitions/integer'
      min_gram:
        $ref: '#/definitions/integer'
  NoriPartOfSpeechTokenFilter:
    type: object
    properties:
      stop_tags:
        type: array
        items:
          type: string
  PatternCaptureTokenFilter:
    type: object
    properties:
      patterns:
        type: array
        items:
          type: string
      preserve_original:
        type: boolean
  PatternReplaceTokenFilter:
    type: object
    properties:
      flags:
        type: string
      pattern:
        type: string
      replacement:
        type: string
  PorterStemTokenFilter:
    type: object
    properties: {}
  PredicateTokenFilter:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  RemoveDuplicatesTokenFilter:
    type: object
    properties: {}
  ReverseTokenFilter:
    type: object
    properties: {}
  SnowballTokenFilter:
    type: object
    properties:
      language:
        $ref: '#/definitions/SnowballLanguage'
  StemmerOverrideTokenFilter:
    type: object
    properties:
      rules:
        type: array
        items:
          type: string
      rules_path:
        type: string
  StemmerTokenFilter:
    type: object
    properties:
      language:
        type: string
  TokenFilterBase:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  TrimTokenFilter:
    type: object
    properties: {}
  TruncateTokenFilter:
    type: object
    properties:
      length:
        $ref: '#/definitions/integer'
  UniqueTokenFilter:
    type: object
    properties:
      only_on_same_position:
        type: boolean
  UppercaseTokenFilter:
    type: object
    properties: {}
  CompoundWordTokenFilterBase:
    type: object
    properties:
      hyphenation_patterns_path:
        type: string
      max_subword_size:
        $ref: '#/definitions/integer'
      min_subword_size:
        $ref: '#/definitions/integer'
      min_word_size:
        $ref: '#/definitions/integer'
      only_longest_match:
        type: boolean
      word_list:
        type: array
        items:
          type: string
      word_list_path:
        type: string
  DictionaryDecompounderTokenFilter:
    type: object
    properties: {}
  HyphenationDecompounderTokenFilter:
    type: object
    properties: {}
  DelimitedPayloadTokenFilter:
    type: object
    properties:
      delimiter:
        type: string
      encoding:
        $ref: '#/definitions/DelimitedPayloadEncoding'
  EdgeNGramTokenFilter:
    type: object
    properties:
      max_gram:
        $ref: '#/definitions/integer'
      min_gram:
        $ref: '#/definitions/integer'
      side:
        $ref: '#/definitions/EdgeNGramSide'
  ShingleTokenFilter:
    type: object
    properties:
      filler_token:
        type: string
      max_shingle_size:
        $ref: '#/definitions/integer'
      min_shingle_size:
        $ref: '#/definitions/integer'
      output_unigrams:
        type: boolean
      output_unigrams_if_no_shingles:
        type: boolean
      token_separator:
        type: string
  StopTokenFilter:
    type: object
    properties:
      ignore_case:
        type: boolean
      remove_trailing:
        type: boolean
      stop_words:
        $ref: '#/definitions/StopWords'
      stop_words_path:
        type: string
  SynonymGraphTokenFilter:
    type: object
    properties:
      expand:
        type: boolean
      format:
        $ref: '#/definitions/SynonymFormat'
      lenient:
        type: boolean
      synonyms:
        type: array
        items:
          type: string
      synonyms_path:
        type: string
      tokenizer:
        type: string
  SynonymTokenFilter:
    type: object
    properties:
      expand:
        type: boolean
      format:
        $ref: '#/definitions/SynonymFormat'
      lenient:
        type: boolean
      synonyms:
        type: array
        items:
          type: string
      synonyms_path:
        type: string
      tokenizer:
        type: string
  WordDelimiterTokenFilter:
    type: object
    properties:
      catenate_all:
        type: boolean
      catenate_numbers:
        type: boolean
      catenate_words:
        type: boolean
      generate_number_parts:
        type: boolean
      generate_word_parts:
        type: boolean
      preserve_original:
        type: boolean
      protected_words:
        type: array
        items:
          type: string
      protected_words_path:
        type: string
      split_on_case_change:
        type: boolean
      split_on_numerics:
        type: boolean
      stem_english_possessive:
        type: boolean
      type_table:
        type: array
        items:
          type: string
      type_table_path:
        type: string
  WordDelimiterGraphTokenFilter:
    type: object
    properties:
      adjust_offsets:
        type: boolean
      catenate_all:
        type: boolean
      catenate_numbers:
        type: boolean
      catenate_words:
        type: boolean
      generate_number_parts:
        type: boolean
      generate_word_parts:
        type: boolean
      preserve_original:
        type: boolean
      protected_words:
        type: array
        items:
          type: string
      protected_words_path:
        type: string
      split_on_case_change:
        type: boolean
      split_on_numerics:
        type: boolean
      stem_english_possessive:
        type: boolean
      type_table:
        type: array
        items:
          type: string
      type_table_path:
        type: string
  CharGroupTokenizer:
    type: object
    properties:
      tokenize_on_characters:
        type: array
        items:
          type: string
  ITokenizer:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  KeywordTokenizer:
    type: object
    properties:
      buffer_size:
        $ref: '#/definitions/integer'
  LetterTokenizer:
    type: object
    properties: {}
  LowercaseTokenizer:
    type: object
    properties: {}
  NoriTokenizer:
    type: object
    properties:
      decompound_mode:
        $ref: '#/definitions/NoriDecompoundMode'
      user_dictionary:
        type: string
      user_dictionary_rules:
        type: array
        items:
          type: string
  PathHierarchyTokenizer:
    type: object
    properties:
      buffer_size:
        $ref: '#/definitions/integer'
      delimiter:
        type: string
      replacement:
        type: string
      reverse:
        type: boolean
      skip:
        $ref: '#/definitions/integer'
  PatternTokenizer:
    type: object
    properties:
      flags:
        type: string
      group:
        $ref: '#/definitions/integer'
      pattern:
        type: string
  StandardTokenizer:
    type: object
    properties:
      max_token_length:
        $ref: '#/definitions/integer'
  TokenizerBase:
    type: object
    properties:
      type:
        type: string
      version:
        type: string
  UaxEmailUrlTokenizer:
    type: object
    properties:
      max_token_length:
        $ref: '#/definitions/integer'
  WhitespaceTokenizer:
    type: object
    properties:
      max_token_length:
        $ref: '#/definitions/integer'
  EdgeNGramTokenizer:
    type: object
    properties:
      max_gram:
        $ref: '#/definitions/integer'
      min_gram:
        $ref: '#/definitions/integer'
      token_chars:
        type: array
        items:
          $ref: '#/definitions/TokenChar'
  NGramTokenizer:
    type: object
    properties:
      max_gram:
        $ref: '#/definitions/integer'
      min_gram:
        $ref: '#/definitions/integer'
      token_chars:
        type: array
        items:
          $ref: '#/definitions/TokenChar'
  CatResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/TCatRecord'
  ICatRecord:
    type: object
    properties: {}
  CatAliasesRecord:
    type: object
    properties:
      alias:
        type: string
      filter:
        type: string
      index:
        type: string
      index_routing:
        type: string
      search_routing:
        type: string
  CatAliasesRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatAliasesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatAliasesRecord'
  CatAllocationRecord:
    type: object
    properties:
      disk_available:
        type: string
      disk_ratio:
        type: string
      disk_used:
        type: string
      ip:
        type: string
      node:
        type: string
      shards:
        type: string
  CatAllocationRequest:
    type: object
    properties:
      bytes:
        $ref: '#/definitions/Bytes'
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatAllocationResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatAllocationRecord'
  CatCountRecord:
    type: object
    properties:
      count:
        type: string
      epoch:
        type: string
      timestamp:
        type: string
  CatCountRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatCountResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatCountRecord'
  CatFielddataRecord:
    type: object
    properties:
      field:
        type: string
      host:
        type: string
      id:
        type: string
      ip:
        type: string
      node:
        type: string
      size:
        type: string
  CatFielddataRequest:
    type: object
    properties:
      bytes:
        $ref: '#/definitions/Bytes'
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatFielddataResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatFielddataRecord'
  CatHealthRecord:
    type: object
    properties:
      cluster:
        type: string
      epoch:
        type: string
      initializing:
        type: string
      node_data:
        type: string
      node_total:
        type: string
      pending_tasks:
        type: string
      primary:
        type: string
      relocating:
        type: string
      shards:
        type: string
      status:
        type: string
      timestamp:
        type: string
      unassigned:
        type: string
  CatHealthRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      include_timestamp:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatHealthResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatHealthRecord'
  CatHelpRecord:
    type: object
    properties:
      endpoint:
        type: string
  CatHelpRequest:
    type: object
    properties:
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
  CatHelpResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatHelpRecord'
  CatIndicesRecord:
    type: object
    properties:
      docs_count:
        type: string
      docs_deleted:
        type: string
      health:
        type: string
      index:
        type: string
      u_u_i_d:
        type: string
      primary:
        type: string
      primary_store_size:
        type: string
      replica:
        type: string
      status:
        type: string
      store_size:
        type: string
      total_memory:
        type: string
  CatIndicesRequest:
    type: object
    properties:
      bytes:
        $ref: '#/definitions/Bytes'
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      health:
        $ref: '#/definitions/Health'
      help:
        type: boolean
      include_unloaded_segments:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      pri:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatIndicesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatIndicesRecord'
  CatMasterRecord:
    type: object
    properties:
      id:
        type: string
      ip:
        type: string
      node:
        type: string
  CatMasterRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatMasterResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatMasterRecord'
  CatNodeAttributesRecord:
    type: object
    properties:
      attribute:
        type: string
      host:
        type: string
      id:
        type: string
      ip:
        type: string
      node:
        type: string
      port:
        $ref: '#/definitions/long'
      process_id:
        $ref: '#/definitions/long'
      value:
        type: string
  CatNodeAttributesRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatNodeAttributesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatNodeAttributesRecord'
  CatNodesRecord:
    type: object
    properties:
      build:
        type: string
      completion_size:
        type: string
      c_p_u:
        type: string
      disk_available:
        type: string
      fielddata_evictions:
        type: string
      fielddata_memory:
        type: string
      file_descriptor_current:
        $ref: '#/definitions/integer'
      file_descriptor_max:
        $ref: '#/definitions/integer'
      file_descriptor_percent:
        $ref: '#/definitions/integer'
      filter_cache_evictions:
        type: string
      filter_cache_memory:
        type: string
      flush_total:
        type: string
      flush_total_time:
        type: string
      get_current:
        type: string
      get_exists_time:
        type: string
      get_exists_total:
        type: string
      get_missing_time:
        type: string
      get_missing_total:
        type: string
      get_time:
        type: string
      get_total:
        type: string
      heap_current:
        type: string
      heap_max:
        type: string
      heap_percent:
        type: string
      id_cache_memory:
        type: string
      indexing_delete_current:
        type: string
      indexing_delete_time:
        type: string
      indexing_delete_total:
        type: string
      indexing_index_current:
        type: string
      indexing_index_time:
        type: string
      indexing_index_total:
        type: string
      ip:
        type: string
      jdk:
        type: string
      load_fifteen_minute:
        type: string
      load_five_minute:
        type: string
      load_one_minute:
        type: string
      master:
        type: string
      merges_current:
        type: string
      merges_current_docs:
        type: string
      merges_current_size:
        type: string
      merges_total:
        type: string
      merges_total_docs:
        type: string
      merges_total_time:
        type: string
      name:
        type: string
      node_id:
        type: string
      node_role:
        type: string
      percolate_current:
        type: string
      percolate_memory:
        type: string
      percolate_queries:
        type: string
      percolate_time:
        type: string
      percolate_total:
        type: string
      pid:
        type: string
      port:
        type: string
      ram_current:
        type: string
      ram_max:
        type: string
      ram_percent:
        type: string
      refresh_time:
        type: string
      refresh_total:
        type: string
      search_fetch_current:
        type: string
      search_fetch_time:
        type: string
      search_fetch_total:
        type: string
      search_open_contexts:
        type: string
      search_query_current:
        type: string
      search_query_time:
        type: string
      search_query_total:
        type: string
      segments_count:
        type: string
      segments_index_writer_max_memory:
        type: string
      segments_index_writer_memory:
        type: string
      segments_memory:
        type: string
      segments_version_map_memory:
        type: string
      uptime:
        type: string
      version:
        type: string
  CatNodesRequest:
    type: object
    properties:
      format:
        type: string
      full_id:
        type: boolean
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatNodesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatNodesRecord'
  CatPendingTasksRecord:
    type: object
    properties:
      insert_order:
        $ref: '#/definitions/integer'
      priority:
        type: string
      source:
        type: string
      time_in_queue:
        type: string
  CatPendingTasksRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatPendingTasksResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatPendingTasksRecord'
  CatPluginsRecord:
    type: object
    properties:
      component:
        type: string
      description:
        type: string
      id:
        type: string
      isolation:
        type: string
      name:
        type: string
      type:
        type: string
      url:
        type: string
      version:
        type: string
  CatPluginsRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatPluginsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatPluginsRecord'
  CatRecoveryRecord:
    type: object
    properties:
      bytes:
        type: string
      bytes_percent:
        type: string
      bytes_recovered:
        type: string
      bytes_total:
        type: string
      files:
        type: string
      files_percent:
        type: string
      files_recovered:
        type: string
      files_total:
        type: string
      index:
        type: string
      repository:
        type: string
      shard:
        type: string
      snapshot:
        type: string
      source_host:
        type: string
      source_node:
        type: string
      stage:
        type: string
      target_host:
        type: string
      target_node:
        type: string
      time:
        type: string
      translog_ops:
        $ref: '#/definitions/long'
      translog_ops_percent:
        type: string
      translog_ops_recovered:
        $ref: '#/definitions/long'
      type:
        type: string
  CatRecoveryRequest:
    type: object
    properties:
      bytes:
        $ref: '#/definitions/Bytes'
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatRecoveryResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatRecoveryRecord'
  CatRepositoriesRecord:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
  CatRepositoriesRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatRepositoriesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatRepositoriesRecord'
  CatSegmentsRecord:
    type: object
    properties:
      committed:
        type: string
      compound:
        type: string
      docs_count:
        type: string
      docs_deleted:
        type: string
      generation:
        type: string
      id:
        type: string
      index:
        type: string
      ip:
        type: string
      primary_replica:
        type: string
      searchable:
        type: string
      segment:
        type: string
      shard:
        type: string
      size:
        type: string
      size_memory:
        type: string
      version:
        type: string
  CatSegmentsRequest:
    type: object
    properties:
      bytes:
        $ref: '#/definitions/Bytes'
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatSegmentsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatSegmentsRecord'
  CatShardsRecord:
    type: object
    properties:
      completion_size:
        type: string
      docs:
        type: string
      fielddata_evictions:
        type: string
      fielddata_memory_size:
        type: string
      filter_cache_memory_size:
        type: string
      flush_total:
        type: string
      flush_total_time:
        type: string
      get_current:
        type: string
      get_exists_time:
        type: string
      get_exists_total:
        type: string
      get_missing_time:
        type: string
      get_missing_total:
        type: string
      get_time:
        type: string
      get_total:
        type: string
      id:
        type: string
      id_cache_memory_size:
        type: string
      index:
        type: string
      indexing_delete_current:
        type: string
      indexing_delete_time:
        type: string
      indexing_delete_total:
        type: string
      indexing_index_current:
        type: string
      indexing_index_time:
        type: string
      indexing_index_total:
        type: string
      ip:
        type: string
      merges_current:
        type: string
      merges_current_docs:
        type: string
      merges_current_size:
        type: string
      merges_total_docs:
        type: string
      merges_total_size:
        type: string
      merges_total_time:
        type: string
      node:
        type: string
      percolate_current:
        type: string
      percolate_memory_size:
        type: string
      percolate_queries:
        type: string
      percolate_time:
        type: string
      percolate_total:
        type: string
      primary_or_replica:
        type: string
      refresh_time:
        type: string
      refresh_total:
        type: string
      search_fetch_current:
        type: string
      search_fetch_time:
        type: string
      search_fetch_total:
        type: string
      search_open_contexts:
        type: string
      search_query_current:
        type: string
      search_query_time:
        type: string
      search_query_total:
        type: string
      segments_count:
        type: string
      segments_fixed_bitset_memory:
        type: string
      segments_index_writer_max_memory:
        type: string
      segments_index_writer_memory:
        type: string
      segments_memory:
        type: string
      segments_version_map_memory:
        type: string
      shard:
        type: string
      state:
        type: string
      store:
        type: string
      warmer_current:
        type: string
      warmer_total:
        type: string
      warmer_total_time:
        type: string
  CatShardsRequest:
    type: object
    properties:
      bytes:
        $ref: '#/definitions/Bytes'
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatShardsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatShardsRecord'
  CatSnapshotsRecord:
    type: object
    properties:
      duration:
        $ref: '#/definitions/Time'
      end_epoch:
        $ref: '#/definitions/long'
      end_time:
        type: string
      failed_shards:
        $ref: '#/definitions/long'
      id:
        type: string
      indices:
        $ref: '#/definitions/long'
      start_epoch:
        $ref: '#/definitions/long'
      start_time:
        type: string
      status:
        type: string
      successful_shards:
        $ref: '#/definitions/long'
      total_shards:
        $ref: '#/definitions/long'
  CatSnapshotsRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatSnapshotsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatSnapshotsRecord'
  CatTasksRecord:
    type: object
    properties:
      action:
        type: string
      ip:
        type: string
      node:
        type: string
      parent_task_id:
        type: string
      running_time:
        type: string
      start_time:
        type: string
      task_id:
        type: string
      timestamp:
        type: string
      type:
        type: string
  CatTasksRequest:
    type: object
    properties:
      actions:
        type: array
        items:
          type: string
      detailed:
        type: boolean
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      node_id:
        type: array
        items:
          type: string
      parent_task:
        $ref: '#/definitions/long'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatTasksResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatTasksRecord'
  CatTemplatesRecord:
    type: object
    properties:
      index_patterns:
        type: string
      name:
        type: string
      order:
        $ref: '#/definitions/long'
      version:
        $ref: '#/definitions/long'
  CatTemplatesRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatTemplatesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatTemplatesRecord'
  CatThreadPoolRecord:
    type: object
    properties:
      active:
        $ref: '#/definitions/integer'
      completed:
        $ref: '#/definitions/long'
      core:
        $ref: '#/definitions/integer'
      ephemeral_node_id:
        type: string
      host:
        type: string
      ip:
        type: string
      keep_alive:
        $ref: '#/definitions/Time'
      largest:
        $ref: '#/definitions/integer'
      maximum:
        $ref: '#/definitions/integer'
      name:
        type: string
      node_id:
        type: string
      node_name:
        type: string
      pool_size:
        $ref: '#/definitions/integer'
      port:
        $ref: '#/definitions/integer'
      process_id:
        $ref: '#/definitions/integer'
      queue:
        $ref: '#/definitions/integer'
      queue_size:
        $ref: '#/definitions/integer'
      rejected:
        $ref: '#/definitions/long'
      size:
        $ref: '#/definitions/integer'
      type:
        type: string
  CatThreadPoolRequest:
    type: object
    properties:
      format:
        type: string
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      size:
        $ref: '#/definitions/Size'
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatThreadPoolResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatThreadPoolRecord'
  NodeStatistics:
    type: object
    properties:
      failed:
        $ref: '#/definitions/integer'
      successful:
        $ref: '#/definitions/integer'
      total:
        $ref: '#/definitions/integer'
      failures:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
  NodesResponseBase:
    type: object
    properties:
      node_statistics:
        $ref: '#/definitions/NodeStatistics'
  AllocationDecision:
    type: object
    properties:
      decider:
        type: string
      decision:
        $ref: '#/definitions/AllocationExplainDecision'
      explanation:
        type: string
  AllocationStore:
    type: object
    properties:
      allocation_id:
        type: string
      found:
        type: boolean
      in_sync:
        type: boolean
      matching_size_in_bytes:
        $ref: '#/definitions/long'
      matching_sync_id:
        type: boolean
      store_exception:
        type: string
  ClusterAllocationExplainRequest:
    type: object
    properties:
      index:
        $ref: '#/definitions/IndexName'
      primary:
        type: boolean
      shard:
        $ref: '#/definitions/integer'
      include_disk_info:
        type: boolean
      include_yes_decisions:
        type: boolean
  ClusterAllocationExplainResponse:
    type: object
    properties:
      allocate_explanation:
        type: string
      allocation_delay:
        type: string
      allocation_delay_in_milliseconds:
        $ref: '#/definitions/long'
      can_allocate:
        $ref: '#/definitions/Decision'
      can_move_to_other_node:
        $ref: '#/definitions/Decision'
      can_rebalance_cluster:
        $ref: '#/definitions/Decision'
      can_rebalance_cluster_decisions:
        type: array
        items:
          $ref: '#/definitions/AllocationDecision'
      can_rebalance_to_other_node:
        $ref: '#/definitions/Decision'
      can_remain_decisions:
        type: array
        items:
          $ref: '#/definitions/AllocationDecision'
      can_remain_on_current_node:
        $ref: '#/definitions/Decision'
      configured_delay:
        type: string
      configured_delay_in_milliseconds:
        $ref: '#/definitions/long'
      current_node:
        $ref: '#/definitions/CurrentNode'
      current_state:
        type: string
      index:
        type: string
      move_explanation:
        type: string
      node_allocation_decisions:
        type: array
        items:
          $ref: '#/definitions/NodeAllocationExplanation'
      primary:
        type: boolean
      rebalance_explanation:
        type: string
      remaining_delay:
        type: string
      remaining_delay_in_milliseconds:
        $ref: '#/definitions/long'
      shard:
        $ref: '#/definitions/integer'
      unassigned_information:
        $ref: '#/definitions/UnassignedInformation'
  CurrentNode:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      node_attributes:
        type: object
        additionalProperties:
          type: string
      transport_address:
        type: string
      weight_ranking:
        $ref: '#/definitions/integer'
  NodeAllocationExplanation:
    type: object
    properties:
      deciders:
        type: array
        items:
          $ref: '#/definitions/AllocationDecision'
      node_attributes:
        type: object
        additionalProperties:
          type: string
      node_decision:
        $ref: '#/definitions/Decision'
      node_id:
        type: string
      node_name:
        type: string
      store:
        $ref: '#/definitions/AllocationStore'
      transport_address:
        type: string
      weight_ranking:
        $ref: '#/definitions/integer'
  UnassignedInformation:
    type: object
    properties:
      at:
        $ref: '#/definitions/Date'
      last_allocation_status:
        type: string
      reason:
        $ref: '#/definitions/UnassignedInformationReason'
  ClusterHealthRequest:
    type: object
    properties:
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      level:
        $ref: '#/definitions/Level'
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
      wait_for_events:
        $ref: '#/definitions/WaitForEvents'
      wait_for_no_initializing_shards:
        type: boolean
      wait_for_no_relocating_shards:
        type: boolean
      wait_for_nodes:
        type: string
      wait_for_status:
        $ref: '#/definitions/WaitForStatus'
  ClusterHealthResponse:
    type: object
    properties:
      active_primary_shards:
        $ref: '#/definitions/integer'
      active_shards:
        $ref: '#/definitions/integer'
      active_shards_percent_as_number:
        $ref: '#/definitions/double'
      cluster_name:
        type: string
      delayed_unassigned_shards:
        $ref: '#/definitions/integer'
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexHealthStats'
      initializing_shards:
        $ref: '#/definitions/integer'
      number_of_data_nodes:
        $ref: '#/definitions/integer'
      number_of_in_flight_fetch:
        $ref: '#/definitions/integer'
      number_of_nodes:
        $ref: '#/definitions/integer'
      number_of_pending_tasks:
        $ref: '#/definitions/integer'
      relocating_shards:
        $ref: '#/definitions/integer'
      status:
        $ref: '#/definitions/Health'
      task_max_wait_time_in_queue_in_milliseconds:
        $ref: '#/definitions/long'
      timed_out:
        type: boolean
      unassigned_shards:
        $ref: '#/definitions/integer'
  IndexHealthStats:
    type: object
    properties:
      active_primary_shards:
        $ref: '#/definitions/integer'
      active_shards:
        $ref: '#/definitions/integer'
      initializing_shards:
        $ref: '#/definitions/integer'
      number_of_replicas:
        $ref: '#/definitions/integer'
      number_of_shards:
        $ref: '#/definitions/integer'
      relocating_shards:
        $ref: '#/definitions/integer'
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardHealthStats'
      status:
        $ref: '#/definitions/Health'
      unassigned_shards:
        $ref: '#/definitions/integer'
  ShardHealthStats:
    type: object
    properties:
      active_shards:
        $ref: '#/definitions/integer'
      initializing_shards:
        $ref: '#/definitions/integer'
      primary_active:
        type: boolean
      relocating_shards:
        $ref: '#/definitions/integer'
      status:
        $ref: '#/definitions/Health'
      unassigned_shards:
        $ref: '#/definitions/integer'
  ClusterPendingTasksRequest:
    type: object
    properties:
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  ClusterPendingTasksResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          $ref: '#/definitions/PendingTask'
  PendingTask:
    type: object
    properties:
      insert_order:
        $ref: '#/definitions/integer'
      priority:
        type: string
      source:
        type: string
      time_in_queue:
        type: string
      time_in_queue_milliseconds:
        $ref: '#/definitions/integer'
  ClusterRerouteDecision:
    type: object
    properties:
      decider:
        type: string
      decision:
        type: string
      explanation:
        type: string
  ClusterRerouteExplanation:
    type: object
    properties:
      command:
        type: string
      decisions:
        type: array
        items:
          $ref: '#/definitions/ClusterRerouteDecision'
      parameters:
        $ref: '#/definitions/ClusterRerouteParameters'
  ClusterRerouteParameters:
    type: object
    properties:
      allow_primary:
        type: boolean
      from_node:
        type: string
      index:
        type: string
      node:
        type: string
      shard:
        $ref: '#/definitions/integer'
      to_node:
        type: string
  ClusterRerouteRequest:
    type: object
    properties:
      commands:
        type: array
        items:
          $ref: '#/definitions/ClusterRerouteCommand'
      dry_run:
        type: boolean
      explain:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      metric:
        type: array
        items:
          type: string
      retry_failed:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  ClusterRerouteResponse:
    type: object
    properties:
      explanations:
        type: array
        items:
          $ref: '#/definitions/ClusterRerouteExplanation'
      state:
        type: array
        items:
          type: string
  ClusterRerouteCommand:
    type: object
    properties:
      name:
        type: string
  ClusterGetSettingsRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      include_defaults:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  ClusterGetSettingsResponse:
    type: object
    properties:
      persistent:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      transient:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  ClusterPutSettingsRequest:
    type: object
    properties:
      persistent:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      transient:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      flat_settings:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  ClusterPutSettingsResponse:
    type: object
    properties:
      acknowledged:
        type: boolean
      persistent:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      transient:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  ClusterStateRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      ignore_unavailable:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      wait_for_metadata_version:
        $ref: '#/definitions/long'
      wait_for_timeout:
        $ref: '#/definitions/Time'
  ClusterStateResponse:
    type: object
    properties:
      state:
        type: array
        items:
          type: string
      cluster_name:
        type: string
      cluster_u_u_i_d:
        type: string
      master_node:
        type: string
      state_u_u_i_d:
        type: string
      version:
        $ref: '#/definitions/long'
  ClusterFileSystem:
    type: object
    properties:
      available_in_bytes:
        $ref: '#/definitions/long'
      free_in_bytes:
        $ref: '#/definitions/long'
      total_in_bytes:
        $ref: '#/definitions/long'
  ClusterIndicesShardsIndexStats:
    type: object
    properties:
      primaries:
        $ref: '#/definitions/ClusterShardMetrics'
      replication:
        $ref: '#/definitions/ClusterShardMetrics'
      shards:
        $ref: '#/definitions/ClusterShardMetrics'
  ClusterIndicesShardsStats:
    type: object
    properties:
      index:
        $ref: '#/definitions/ClusterIndicesShardsIndexStats'
      primaries:
        $ref: '#/definitions/double'
      replication:
        $ref: '#/definitions/double'
      total:
        $ref: '#/definitions/double'
  ClusterIndicesStats:
    type: object
    properties:
      completion:
        $ref: '#/definitions/CompletionStats'
      count:
        $ref: '#/definitions/long'
      documents:
        $ref: '#/definitions/DocStats'
      fielddata:
        $ref: '#/definitions/FielddataStats'
      query_cache:
        $ref: '#/definitions/QueryCacheStats'
      segments:
        $ref: '#/definitions/SegmentsStats'
      shards:
        $ref: '#/definitions/ClusterIndicesShardsStats'
      store:
        $ref: '#/definitions/StoreStats'
  ClusterJvm:
    type: object
    properties:
      max_uptime_in_milliseconds:
        $ref: '#/definitions/long'
      memory:
        $ref: '#/definitions/ClusterJvmMemory'
      threads:
        $ref: '#/definitions/long'
      versions:
        type: array
        items:
          $ref: '#/definitions/ClusterJvmVersion'
  ClusterJvmMemory:
    type: object
    properties:
      heap_max_in_bytes:
        $ref: '#/definitions/long'
      heap_used_in_bytes:
        $ref: '#/definitions/long'
  ClusterJvmVersion:
    type: object
    properties:
      bundled_jdk:
        type: boolean
      count:
        $ref: '#/definitions/integer'
      using_bundled_jdk:
        type: boolean
      version:
        type: string
      vm_name:
        type: string
      vm_vendor:
        type: string
      vm_version:
        type: string
  ClusterNetworkTypes:
    type: object
    properties:
      http_types:
        type: object
        additionalProperties:
          $ref: '#/definitions/integer'
      transport_types:
        type: object
        additionalProperties:
          $ref: '#/definitions/integer'
  ClusterNodeCount:
    type: object
    properties:
      coordinating_only:
        $ref: '#/definitions/integer'
      data:
        $ref: '#/definitions/integer'
      ingest:
        $ref: '#/definitions/integer'
      master:
        $ref: '#/definitions/integer'
      total:
        $ref: '#/definitions/integer'
      voting_only:
        $ref: '#/definitions/integer'
  ClusterNodesStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/ClusterNodeCount'
      discovery_types:
        type: object
        additionalProperties:
          $ref: '#/definitions/integer'
      file_system:
        $ref: '#/definitions/ClusterFileSystem'
      jvm:
        $ref: '#/definitions/ClusterJvm'
      network_types:
        $ref: '#/definitions/ClusterNetworkTypes'
      operating_system:
        $ref: '#/definitions/ClusterOperatingSystemStats'
      packaging_types:
        type: array
        items:
          $ref: '#/definitions/NodePackagingType'
      plugins:
        type: array
        items:
          $ref: '#/definitions/PluginStats'
      process:
        $ref: '#/definitions/ClusterProcess'
      versions:
        type: array
        items:
          type: string
  ClusterOperatingSystemName:
    type: object
    properties:
      count:
        $ref: '#/definitions/integer'
      name:
        type: string
  ClusterOperatingSystemStats:
    type: object
    properties:
      allocated_processors:
        $ref: '#/definitions/integer'
      available_processors:
        $ref: '#/definitions/integer'
      memory:
        $ref: '#/definitions/OperatingSystemMemoryInfo'
      names:
        type: array
        items:
          $ref: '#/definitions/ClusterOperatingSystemName'
      pretty_names:
        type: array
        items:
          $ref: '#/definitions/ClusterOperatingSystemPrettyNane'
  ClusterProcess:
    type: object
    properties:
      cpu:
        $ref: '#/definitions/ClusterProcessCpu'
      open_file_descriptors:
        $ref: '#/definitions/ClusterProcessOpenFileDescriptors'
  ClusterProcessCpu:
    type: object
    properties:
      percent:
        $ref: '#/definitions/integer'
  ClusterProcessOpenFileDescriptors:
    type: object
    properties:
      avg:
        $ref: '#/definitions/long'
      max:
        $ref: '#/definitions/long'
      min:
        $ref: '#/definitions/long'
  ClusterShardMetrics:
    type: object
    properties:
      avg:
        $ref: '#/definitions/double'
      max:
        $ref: '#/definitions/double'
      min:
        $ref: '#/definitions/double'
  ClusterStatsRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  ClusterStatsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      cluster_u_u_i_d:
        type: string
      indices:
        $ref: '#/definitions/ClusterIndicesStats'
      nodes:
        $ref: '#/definitions/ClusterNodesStats'
      status:
        $ref: '#/definitions/ClusterStatus'
      timestamp:
        $ref: '#/definitions/long'
  NodePackagingType:
    type: object
    properties:
      count:
        $ref: '#/definitions/integer'
      flavor:
        type: string
      type:
        type: string
  OperatingSystemMemoryInfo:
    type: object
    properties:
      free_bytes:
        $ref: '#/definitions/long'
      free_percent:
        $ref: '#/definitions/integer'
      total_bytes:
        $ref: '#/definitions/long'
      used_bytes:
        $ref: '#/definitions/long'
      used_percent:
        $ref: '#/definitions/integer'
  HotThreadInformation:
    type: object
    properties:
      hosts:
        type: array
        items:
          type: string
      node_id:
        type: string
      node_name:
        type: string
      threads:
        type: array
        items:
          type: string
  NodesHotThreadsRequest:
    type: object
    properties:
      ignore_idle_threads:
        type: boolean
      interval:
        $ref: '#/definitions/Time'
      snapshots:
        $ref: '#/definitions/long'
      thread_type:
        $ref: '#/definitions/ThreadType'
      threads:
        $ref: '#/definitions/long'
      timeout:
        $ref: '#/definitions/Time'
  NodesHotThreadsResponse:
    type: object
    properties:
      hot_threads:
        type: array
        items:
          $ref: '#/definitions/HotThreadInformation'
  ClusterOperatingSystemPrettyNane:
    type: object
    properties:
      count:
        $ref: '#/definitions/integer'
      pretty_name:
        type: string
  NodeInfo:
    type: object
    properties:
      build_hash:
        type: string
      host:
        type: string
      http:
        $ref: '#/definitions/NodeInfoHttp'
      ip:
        type: string
      jvm:
        $ref: '#/definitions/NodeJvmInfo'
      name:
        type: string
      network:
        $ref: '#/definitions/NodeInfoNetwork'
      operating_system:
        $ref: '#/definitions/NodeOperatingSystemInfo'
      plugins:
        type: array
        items:
          $ref: '#/definitions/PluginStats'
      process:
        $ref: '#/definitions/NodeProcessInfo'
      roles:
        type: array
        items:
          $ref: '#/definitions/NodeRole'
      settings:
        type: array
        items:
          type: string
      thread_pool:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeThreadPoolInfo'
      transport:
        $ref: '#/definitions/NodeInfoTransport'
      transport_address:
        type: string
      version:
        type: string
  NodeInfoHttp:
    type: object
    properties:
      bound_address:
        type: array
        items:
          type: string
      max_content_length:
        type: string
      max_content_length_in_bytes:
        $ref: '#/definitions/long'
      publish_address:
        type: string
  NodeInfoJvmMemory:
    type: object
    properties:
      direct_max:
        type: string
      direct_max_in_bytes:
        $ref: '#/definitions/long'
      heap_init:
        type: string
      heap_init_in_bytes:
        $ref: '#/definitions/long'
      heap_max:
        type: string
      heap_max_in_bytes:
        $ref: '#/definitions/long'
      non_heap_init:
        type: string
      non_heap_init_in_bytes:
        $ref: '#/definitions/long'
      non_heap_max:
        type: string
      non_heap_max_in_bytes:
        $ref: '#/definitions/long'
  NodeInfoMemory:
    type: object
    properties:
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
  NodeInfoNetwork:
    type: object
    properties:
      primary_interface:
        $ref: '#/definitions/NodeInfoNetworkInterface'
      refresh_interval:
        $ref: '#/definitions/integer'
  NodeInfoNetworkInterface:
    type: object
    properties:
      address:
        type: string
      mac_address:
        type: string
      name:
        type: string
  NodeInfoOSCPU:
    type: object
    properties:
      cache_size:
        type: string
      cache_size_in_bytes:
        $ref: '#/definitions/integer'
      cores_per_socket:
        $ref: '#/definitions/integer'
      mhz:
        $ref: '#/definitions/integer'
      model:
        type: string
      total_cores:
        $ref: '#/definitions/integer'
      total_sockets:
        $ref: '#/definitions/integer'
      vendor:
        type: string
  NodeInfoTransport:
    type: object
    properties:
      bound_address:
        type: array
        items:
          type: string
      publish_address:
        type: string
  NodeJvmInfo:
    type: object
    properties:
      gc_collectors:
        type: array
        items:
          type: string
      memory:
        $ref: '#/definitions/NodeInfoJvmMemory'
      memory_pools:
        type: array
        items:
          type: string
      pid:
        $ref: '#/definitions/integer'
      start_time:
        $ref: '#/definitions/long'
      version:
        type: string
      v_m_name:
        type: string
      v_m_vendor:
        type: string
      v_m_version:
        type: string
  NodeOperatingSystemInfo:
    type: object
    properties:
      architecture:
        type: string
      available_processors:
        $ref: '#/definitions/integer'
      cpu:
        $ref: '#/definitions/NodeInfoOSCPU'
      mem:
        $ref: '#/definitions/NodeInfoMemory'
      name:
        type: string
      pretty_name:
        type: string
      refresh_interval:
        $ref: '#/definitions/integer'
      swap:
        $ref: '#/definitions/NodeInfoMemory'
      version:
        type: string
  NodeProcessInfo:
    type: object
    properties:
      id:
        $ref: '#/definitions/long'
      mlock_all:
        type: boolean
      refresh_interval_in_milliseconds:
        $ref: '#/definitions/long'
  NodeThreadPoolInfo:
    type: object
    properties:
      keep_alive:
        type: string
      max:
        $ref: '#/definitions/integer'
      core:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
      queue_size:
        $ref: '#/definitions/integer'
      type:
        type: string
  NodesInfoRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  NodesInfoResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeInfo'
  AdaptiveSelectionStats:
    type: object
    properties:
      average_queue_size:
        $ref: '#/definitions/long'
      average_response_time:
        $ref: '#/definitions/long'
      average_response_time_in_nanoseconds:
        $ref: '#/definitions/long'
      average_service_time:
        type: string
      average_service_time_in_nanoseconds:
        $ref: '#/definitions/long'
      outgoing_searches:
        $ref: '#/definitions/long'
      rank:
        type: string
  BreakerStats:
    type: object
    properties:
      estimated_size:
        type: string
      estimated_size_in_bytes:
        $ref: '#/definitions/long'
      limit_size:
        type: string
      limit_size_in_bytes:
        $ref: '#/definitions/long'
      overhead:
        $ref: '#/definitions/float'
      tripped:
        $ref: '#/definitions/float'
  CPUStats:
    type: object
    properties:
      percent:
        $ref: '#/definitions/integer'
      system:
        type: string
      system_in_milliseconds:
        $ref: '#/definitions/long'
      total:
        type: string
      total_in_milliseconds:
        $ref: '#/definitions/long'
      user:
        type: string
      user_in_milliseconds:
        $ref: '#/definitions/long'
  DataPathStats:
    type: object
    properties:
      available:
        type: string
      available_in_bytes:
        $ref: '#/definitions/long'
      disk_queue:
        type: string
      disk_reads:
        $ref: '#/definitions/long'
      disk_read_size:
        type: string
      disk_read_size_in_bytes:
        $ref: '#/definitions/long'
      disk_writes:
        $ref: '#/definitions/long'
      disk_write_size:
        type: string
      disk_write_size_in_bytes:
        $ref: '#/definitions/long'
      free:
        type: string
      free_in_bytes:
        $ref: '#/definitions/long'
      mount:
        type: string
      path:
        type: string
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
      type:
        type: string
  ExtendedMemoryStats:
    type: object
    properties:
      free_percent:
        $ref: '#/definitions/integer'
      used_percent:
        $ref: '#/definitions/integer'
  FileSystemStats:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/DataPathStats'
      timestamp:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/TotalFileSystemStats'
  GarbageCollectionGenerationStats:
    type: object
    properties:
      collection_count:
        $ref: '#/definitions/long'
      collection_time:
        type: string
      collection_time_in_milliseconds:
        $ref: '#/definitions/long'
  GarbageCollectionStats:
    type: object
    properties:
      collectors:
        type: object
        additionalProperties:
          $ref: '#/definitions/GarbageCollectionGenerationStats'
  HttpStats:
    type: object
    properties:
      current_open:
        $ref: '#/definitions/integer'
      total_opened:
        $ref: '#/definitions/long'
  JvmClassesStats:
    type: object
    properties:
      current_loaded_count:
        $ref: '#/definitions/long'
      total_loaded_count:
        $ref: '#/definitions/long'
      total_unloaded_count:
        $ref: '#/definitions/long'
  JvmPool:
    type: object
    properties:
      max:
        type: string
      max_in_bytes:
        $ref: '#/definitions/long'
      peak_max:
        type: string
      peak_max_in_bytes:
        $ref: '#/definitions/long'
      peak_used:
        type: string
      peak_used_in_bytes:
        $ref: '#/definitions/long'
      used:
        type: string
      used_in_bytes:
        $ref: '#/definitions/long'
  LoadAverageStats:
    type: object
    properties:
      fifteen_minute:
        $ref: '#/definitions/float'
      five_minute:
        $ref: '#/definitions/float'
      one_minute:
        $ref: '#/definitions/float'
  MemoryStats:
    type: object
    properties:
      resident:
        type: string
      resident_in_bytes:
        $ref: '#/definitions/long'
      share:
        type: string
      share_in_bytes:
        $ref: '#/definitions/long'
      total_virtual:
        type: string
      total_virtual_in_bytes:
        $ref: '#/definitions/long'
  NodeBufferPool:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      total_capacity:
        type: string
      total_capacity_in_bytes:
        $ref: '#/definitions/long'
      used:
        type: string
      used_in_bytes:
        $ref: '#/definitions/long'
  NodeJvmStats:
    type: object
    properties:
      buffer_pools:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeBufferPool'
      classes:
        $ref: '#/definitions/JvmClassesStats'
      garbage_collection:
        $ref: '#/definitions/GarbageCollectionStats'
      memory:
        $ref: '#/definitions/MemoryStats'
      threads:
        $ref: '#/definitions/ThreadStats'
      timestamp:
        $ref: '#/definitions/long'
      uptime:
        type: string
      uptime_in_milliseconds:
        $ref: '#/definitions/long'
  NodeStats:
    type: object
    properties:
      adaptive_selection:
        type: object
        additionalProperties:
          $ref: '#/definitions/AdaptiveSelectionStats'
      breakers:
        type: object
        additionalProperties:
          $ref: '#/definitions/BreakerStats'
      file_system:
        $ref: '#/definitions/FileSystemStats'
      host:
        type: string
      http:
        $ref: '#/definitions/HttpStats'
      indices:
        $ref: '#/definitions/IndexStats'
      ingest:
        $ref: '#/definitions/NodeIngestStats'
      ip:
        type: array
        items:
          type: string
      jvm:
        $ref: '#/definitions/NodeJvmStats'
      name:
        type: string
      operating_system:
        $ref: '#/definitions/OperatingSystemStats'
      process:
        $ref: '#/definitions/ProcessStats'
      roles:
        type: array
        items:
          $ref: '#/definitions/NodeRole'
      script:
        $ref: '#/definitions/ScriptStats'
      thread_pool:
        type: object
        additionalProperties:
          $ref: '#/definitions/ThreadCountStats'
      timestamp:
        $ref: '#/definitions/long'
      transport:
        $ref: '#/definitions/TransportStats'
      transport_address:
        type: string
  NodesStatsRequest:
    type: object
    properties:
      completion_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fielddata_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      groups:
        type: boolean
      include_segment_file_sizes:
        type: boolean
      level:
        $ref: '#/definitions/Level'
      timeout:
        $ref: '#/definitions/Time'
      types:
        type: array
        items:
          type: string
  NodesStatsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeStats'
  OperatingSystemStats:
    type: object
    properties:
      cpu:
        $ref: '#/definitions/CPUStats'
      memory:
        $ref: '#/definitions/ExtendedMemoryStats'
      swap:
        $ref: '#/definitions/MemoryStats'
      timestamp:
        $ref: '#/definitions/long'
  ProcessStats:
    type: object
    properties:
      c_p_u:
        $ref: '#/definitions/CPUStats'
      memory:
        $ref: '#/definitions/MemoryStats'
      open_file_descriptors:
        $ref: '#/definitions/integer'
      timestamp:
        $ref: '#/definitions/long'
  ScriptStats:
    type: object
    properties:
      cache_evictions:
        $ref: '#/definitions/long'
      compilations:
        $ref: '#/definitions/long'
  ThreadCountStats:
    type: object
    properties:
      active:
        $ref: '#/definitions/long'
      completed:
        $ref: '#/definitions/long'
      largest:
        $ref: '#/definitions/long'
      queue:
        $ref: '#/definitions/long'
      rejected:
        $ref: '#/definitions/long'
      threads:
        $ref: '#/definitions/long'
  ThreadStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      peak_count:
        $ref: '#/definitions/long'
  TotalFileSystemStats:
    type: object
    properties:
      available:
        type: string
      available_in_bytes:
        $ref: '#/definitions/long'
      free:
        type: string
      free_in_bytes:
        $ref: '#/definitions/long'
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
  TransportStats:
    type: object
    properties:
      rx_count:
        $ref: '#/definitions/long'
      rx_size:
        type: string
      rx_size_in_bytes:
        $ref: '#/definitions/long'
      server_open:
        $ref: '#/definitions/integer'
      tx_count:
        $ref: '#/definitions/long'
      tx_size:
        type: string
      tx_size_in_bytes:
        $ref: '#/definitions/long'
  IngestStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      current:
        $ref: '#/definitions/long'
      failed:
        $ref: '#/definitions/long'
      time_in_milliseconds:
        $ref: '#/definitions/long'
      processors:
        type: array
        items:
          $ref: '#/definitions/KeyedProcessorStats'
  KeyedProcessorStats:
    type: object
    properties:
      type:
        type: string
      statistics:
        $ref: '#/definitions/ProcessStats'
  NodeIngestStats:
    type: object
    properties:
      pipelines:
        type: object
        additionalProperties:
          $ref: '#/definitions/IngestStats'
      total:
        $ref: '#/definitions/IngestStats'
  NodeUsageInformation:
    type: object
    properties:
      rest_actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/integer'
      since:
        $ref: '#/definitions/Date'
      timestamp:
        $ref: '#/definitions/Date'
  NodesUsageRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
  NodesUsageResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeUsageInformation'
  PingRequest:
    type: object
    properties: {}
  PingResponse:
    type: object
    properties: {}
  ReloadSecureSettingsRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
  ReloadSecureSettingsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeStats'
  RemoteInfo:
    type: object
    properties:
      connected:
        type: boolean
      skip_unavailable:
        type: boolean
      initial_connect_timeout:
        $ref: '#/definitions/Time'
      max_connections_per_cluster:
        $ref: '#/definitions/integer'
      num_nodes_connected:
        $ref: '#/definitions/long'
      seeds:
        type: array
        items:
          type: string
  RemoteInfoRequest:
    type: object
    properties: {}
  RemoteInfoResponse:
    type: object
    properties:
      remotes:
        type: object
        additionalProperties:
          $ref: '#/definitions/RemoteInfo'
  RootNodeInfoRequest:
    type: object
    properties: {}
  RootNodeInfoResponse:
    type: object
    properties:
      name:
        type: string
      cluster_name:
        type: string
      cluster_u_u_i_d:
        type: string
      version:
        $ref: '#/definitions/ElasticsearchVersionInfo'
      tagline:
        type: string
  CancelTasksRequest:
    type: object
    properties:
      actions:
        type: array
        items:
          type: string
      nodes:
        type: array
        items:
          type: string
      parent_task_id:
        type: string
  CancelTasksResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      node_failures:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/TaskExecutingNode'
  GetTaskRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      wait_for_completion:
        type: boolean
  GetTaskResponse:
    type: object
    properties:
      completed:
        type: boolean
      task:
        $ref: '#/definitions/TaskInfo'
  TaskInfo:
    type: object
    properties:
      action:
        type: string
      cancellable:
        type: boolean
      children:
        type: array
        items:
          $ref: '#/definitions/TaskInfo'
      description:
        type: string
      headers:
        type: object
        additionalProperties:
          type: string
      id:
        $ref: '#/definitions/long'
      node:
        type: string
      running_time_in_nanoseconds:
        $ref: '#/definitions/long'
      start_time_in_milliseconds:
        $ref: '#/definitions/long'
      status:
        $ref: '#/definitions/TaskStatus'
      type:
        type: string
  ListTasksRequest:
    type: object
    properties:
      actions:
        type: array
        items:
          type: string
      detailed:
        type: boolean
      group_by:
        $ref: '#/definitions/GroupBy'
      nodes:
        type: array
        items:
          type: string
      parent_task_id:
        type: string
      timeout:
        $ref: '#/definitions/Time'
      wait_for_completion:
        type: boolean
  ListTasksResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      node_failures:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/TaskExecutingNode'
  TaskExecutingNode:
    type: object
    properties:
      attributes:
        type: object
        additionalProperties:
          type: string
      host:
        type: string
      ip:
        type: string
      name:
        type: string
      roles:
        type: array
        items:
          type: string
      tasks:
        type: object
        additionalProperties:
          $ref: '#/definitions/TaskState'
      transport_address:
        type: string
  TaskRetries:
    type: object
    properties:
      bulk:
        $ref: '#/definitions/integer'
      search:
        $ref: '#/definitions/integer'
  TaskState:
    type: object
    properties:
      action:
        type: string
      cancellable:
        type: boolean
      description:
        type: string
      headers:
        type: object
        additionalProperties:
          type: string
      id:
        $ref: '#/definitions/long'
      node:
        type: string
      parent_task_id:
        $ref: '#/definitions/TaskId'
      running_time_in_nano_seconds:
        $ref: '#/definitions/long'
      start_time_in_milliseconds:
        $ref: '#/definitions/long'
      status:
        $ref: '#/definitions/TaskStatus'
      type:
        type: string
  TaskStatus:
    type: object
    properties:
      batches:
        $ref: '#/definitions/long'
      created:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
      noops:
        $ref: '#/definitions/long'
      requests_per_second:
        $ref: '#/definitions/float'
      retries:
        $ref: '#/definitions/TaskRetries'
      throttled_milliseconds:
        $ref: '#/definitions/long'
      throttled_until_milliseconds:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
  Connection:
    type: object
    properties: {}
  ConnectionPool:
    type: object
    properties:
      last_update:
        $ref: '#/definitions/Date'
      max_retries:
        $ref: '#/definitions/integer'
      nodes:
        type: array
        items:
          $ref: '#/definitions/Node'
      sniffed_on_startup:
        type: boolean
      supports_pinging:
        type: boolean
      supports_reseeding:
        type: boolean
      using_ssl:
        type: boolean
  CustomResponseBuilderBase:
    type: object
    properties: {}
  Dictionary:
    type: object
    properties:
      key:
        $ref: '#/definitions/TKey'
      value:
        $ref: '#/definitions/TValue'
  ElasticsearchResponse:
    type: object
    properties: {}
  ElasticsearchSerializer:
    type: object
    properties: {}
  ElasticsearchUrlFormatter:
    type: object
    properties: {}
  ErrorCause:
    type: object
    properties:
      additional_properties:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      bytes_limit:
        $ref: '#/definitions/long'
      bytes_wanted:
        $ref: '#/definitions/long'
      caused_by:
        $ref: '#/definitions/ErrorCause'
      column:
        $ref: '#/definitions/integer'
      failed_shards:
        type: array
        items:
          $ref: '#/definitions/ShardFailure'
      grouped:
        type: boolean
      index:
        type: string
      index_u_u_i_d:
        type: string
      language:
        type: string
      licensed_expired_feature:
        type: string
      line:
        $ref: '#/definitions/integer'
      phase:
        type: string
      reason:
        type: string
      resource_id:
        type: array
        items:
          type: string
      resource_type:
        type: string
      script:
        type: string
      script_stack:
        type: array
        items:
          type: string
      shard:
        $ref: '#/definitions/integer'
      stack_trace:
        type: string
      type:
        type: string
  MainError:
    type: object
    properties:
      headers:
        type: object
        additionalProperties:
          type: string
      root_cause:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
  MemoryStreamFactory:
    type: object
    properties: {}
  PostData:
    type: object
    properties:
      disable_direct_streaming:
        type: boolean
      type:
        $ref: '#/definitions/PostType'
      written_bytes:
        type: array
        items:
          $ref: '#/definitions/short'
  ServerError:
    type: object
    properties:
      error:
        $ref: '#/definitions/MainError'
      status:
        $ref: '#/definitions/integer'
  ShardFailure:
    type: object
    properties:
      index:
        type: string
      node:
        type: string
      reason:
        $ref: '#/definitions/ErrorCause'
      shard:
        $ref: '#/definitions/integer'
      status:
        type: string
  SnapshotLifecycleInProgress:
    type: object
    properties:
      name:
        type: string
      u_u_i_d:
        type: string
      state:
        type: string
      start_time:
        $ref: '#/definitions/Date'
  UrlParameter:
    type: object
    properties: {}
  Descriptor:
    type: object
    properties: {}
  Field:
    type: string
    format: Field
  Id:
    type: string
    format: Id
  Ids:
    type: object
    properties: {}
  IndexName:
    type: string
    format: IndexName
  Indices:
    type: string
    format: Indices
  Routing:
    type: string
    format: Routing
  LongId:
    type: object
    properties: {}
  IndexMetrics:
    type: string
    format: IndexMetrics
  Metrics:
    type: string
    format: Metrics
  Name:
    type: string
    format: Name
  Names:
    type: string
    format: Names
  NodeIds:
    type: string
    format: NodeIds
  PropertyName:
    type: string
    format: PropertyName
  RelationName:
    type: string
    format: RelationName
  TaskId:
    type: string
    format: TaskId
  Timestamp:
    type: object
    properties: {}
  LazyDocument:
    type: object
    properties: {}
  RequestBase:
    type: object
    properties: {}
  AcknowledgedResponseBase:
    type: object
    properties:
      acknowledged:
        type: boolean
      is_valid:
        type: boolean
  DictionaryResponseBase:
    type: object
    properties: {}
  DynamicResponseBase:
    type: object
    properties: {}
  ElasticsearchVersionInfo:
    type: object
    properties:
      lucene_version:
        type: string
      number:
        type: string
      build_flavor:
        type: string
      build_type:
        type: string
      build_hash:
        type: string
      build_date:
        $ref: '#/definitions/Date'
      build_snapshot:
        type: boolean
      minimum_wire_compatibility_version:
        type: string
      minimum_index_compatibility_version:
        type: string
  IResponse:
    type: object
    properties:
      server_error:
        $ref: '#/definitions/ServerError'
  IndicesResponseBase:
    type: object
    properties:
      shards_hit:
        $ref: '#/definitions/ShardStatistics'
  ResponseBase:
    type: object
    properties:
      debug_information:
        type: string
      is_valid:
        type: boolean
      server_error:
        $ref: '#/definitions/ServerError'
  ShardsOperationResponseBase:
    type: object
    properties:
      shards:
        $ref: '#/definitions/ShardStatistics'
  Union:
    type: object
    properties: {}
  DateMath:
    type: string
    format: DateMath
  DateMathExpression:
    type: string
    format: DateMathExpression
  DateMathTime:
    type: object
    properties:
      factor:
        $ref: '#/definitions/integer'
      interval:
        $ref: '#/definitions/DateMathTimeUnit'
  Fuzziness:
    type: object
    properties:
      auto:
        type: boolean
      low:
        $ref: '#/definitions/integer'
      high:
        $ref: '#/definitions/integer'
      edit_distance:
        $ref: '#/definitions/integer'
      ratio:
        $ref: '#/definitions/double'
  Distance:
    type: object
    properties:
      precision:
        $ref: '#/definitions/double'
      unit:
        $ref: '#/definitions/DistanceUnit'
  ClusterStatistics:
    type: object
    properties:
      skipped:
        $ref: '#/definitions/integer'
      successful:
        $ref: '#/definitions/integer'
      total:
        $ref: '#/definitions/integer'
  ShardStatistics:
    type: object
    properties:
      failed:
        $ref: '#/definitions/integer'
      failures:
        type: array
        items:
          $ref: '#/definitions/ShardFailure'
      successful:
        $ref: '#/definitions/integer'
      total:
        $ref: '#/definitions/integer'
  MinimumShouldMatch:
    type: object
    properties: {}
  AggregationRange:
    type: object
    properties:
      from:
        $ref: '#/definitions/double'
      key:
        type: string
      to:
        $ref: '#/definitions/double'
  InlineScript:
    type: object
    properties:
      source:
        type: string
  Script:
    type: object
    properties:
      lang:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  ScriptField:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  CompletionStats:
    type: object
    properties:
      size_in_bytes:
        $ref: '#/definitions/long'
  DocStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
  FielddataStats:
    type: object
    properties:
      evictions:
        $ref: '#/definitions/long'
      memory_size_in_bytes:
        $ref: '#/definitions/long'
  FlushStats:
    type: object
    properties:
      periodic:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  GetStats:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      exists_time:
        type: string
      exists_time_in_milliseconds:
        $ref: '#/definitions/long'
      exists_total:
        $ref: '#/definitions/long'
      missing_time:
        type: string
      missing_time_in_milliseconds:
        $ref: '#/definitions/long'
      missing_total:
        $ref: '#/definitions/long'
      time:
        type: string
      time_in_milliseconds:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  IndexingStats:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      delete_current:
        $ref: '#/definitions/long'
      delete_time:
        type: string
      delete_time_in_milliseconds:
        $ref: '#/definitions/long'
      delete_total:
        $ref: '#/definitions/long'
      is_throttled:
        type: boolean
      noop_update_total:
        $ref: '#/definitions/long'
      throttle_time:
        type: string
      throttle_time_in_milliseconds:
        $ref: '#/definitions/long'
      time:
        type: string
      time_in_milliseconds:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      types:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexingStats'
  MergesStats:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      current_documents:
        $ref: '#/definitions/long'
      current_size:
        type: string
      current_size_in_bytes:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_auto_throttle:
        type: string
      total_auto_throttle_in_bytes:
        $ref: '#/definitions/long'
      total_documents:
        $ref: '#/definitions/long'
      total_size:
        type: string
      total_size_in_bytes:
        $ref: '#/definitions/long'
      total_stopped_time:
        type: string
      total_stopped_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_throttled_time:
        type: string
      total_throttled_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  PluginStats:
    type: object
    properties:
      class_name:
        type: string
      description:
        type: string
      elasticsearch_version:
        type: string
      extended_plugins:
        type: array
        items:
          type: string
      name:
        type: string
      has_native_controller:
        type: boolean
      java_version:
        type: string
      version:
        type: string
  QueryCacheStats:
    type: object
    properties:
      cache_count:
        $ref: '#/definitions/long'
      cache_size:
        $ref: '#/definitions/long'
      evictions:
        $ref: '#/definitions/long'
      hit_count:
        $ref: '#/definitions/long'
      memory_size_in_bytes:
        $ref: '#/definitions/long'
      miss_count:
        $ref: '#/definitions/long'
      total_count:
        $ref: '#/definitions/long'
  RecoveryStats:
    type: object
    properties:
      current_as_source:
        $ref: '#/definitions/long'
      current_as_target:
        $ref: '#/definitions/long'
      throttle_time:
        type: string
      throttle_time_in_milliseconds:
        $ref: '#/definitions/long'
  RefreshStats:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
      external_total:
        $ref: '#/definitions/long'
      external_total_time_in_milliseconds:
        $ref: '#/definitions/long'
  RequestCacheStats:
    type: object
    properties:
      evictions:
        $ref: '#/definitions/long'
      hit_count:
        $ref: '#/definitions/long'
      memory_size:
        type: string
      memory_size_in_bytes:
        $ref: '#/definitions/long'
      miss_count:
        $ref: '#/definitions/long'
  SearchStats:
    type: object
    properties:
      fetch_current:
        $ref: '#/definitions/long'
      fetch_time_in_milliseconds:
        $ref: '#/definitions/long'
      fetch_total:
        $ref: '#/definitions/long'
      open_contexts:
        $ref: '#/definitions/long'
      query_current:
        $ref: '#/definitions/long'
      query_time_in_milliseconds:
        $ref: '#/definitions/long'
      query_total:
        $ref: '#/definitions/long'
      scroll_current:
        $ref: '#/definitions/long'
      scroll_time_in_milliseconds:
        $ref: '#/definitions/long'
      scroll_total:
        $ref: '#/definitions/long'
      suggest_current:
        $ref: '#/definitions/long'
      suggest_time_in_milliseconds:
        $ref: '#/definitions/long'
      suggest_total:
        $ref: '#/definitions/long'
  SegmentsStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      doc_values_memory_in_bytes:
        $ref: '#/definitions/long'
      fixed_bit_set_memory_in_bytes:
        $ref: '#/definitions/long'
      index_writer_max_memory_in_bytes:
        $ref: '#/definitions/long'
      index_writer_memory_in_bytes:
        $ref: '#/definitions/long'
      maximum_unsafe_auto_id_timestamp:
        $ref: '#/definitions/long'
      memory_in_bytes:
        $ref: '#/definitions/long'
      norms_memory_in_bytes:
        $ref: '#/definitions/long'
      points_memory_in_bytes:
        $ref: '#/definitions/long'
      stored_fields_memory_in_bytes:
        $ref: '#/definitions/long'
      terms_memory_in_bytes:
        $ref: '#/definitions/long'
      term_vectors_memory_in_bytes:
        $ref: '#/definitions/long'
      version_map_memory_in_bytes:
        $ref: '#/definitions/long'
      file_sizes:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardFileSizeInfo'
  StoreStats:
    type: object
    properties:
      size:
        type: string
      size_in_bytes:
        $ref: '#/definitions/double'
  TranslogStats:
    type: object
    properties:
      earliest_last_modified_age:
        $ref: '#/definitions/long'
      operations:
        $ref: '#/definitions/long'
      size:
        type: string
      size_in_bytes:
        $ref: '#/definitions/long'
      uncommitted_operations:
        $ref: '#/definitions/integer'
      uncommitted_size:
        type: string
      uncommitted_size_in_bytes:
        $ref: '#/definitions/long'
  WarmerStats:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  Time:
    type: object
    properties:
      factor:
        $ref: '#/definitions/double'
      interval:
        $ref: '#/definitions/TimeUnit'
      milliseconds:
        $ref: '#/definitions/double'
      minus_one:
        $ref: '#/definitions/Time'
      zero:
        $ref: '#/definitions/Time'
  BulkIndexByScrollFailure:
    type: object
    properties:
      cause:
        $ref: '#/definitions/MainError'
      id:
        type: string
      index:
        type: string
      status:
        $ref: '#/definitions/integer'
      type:
        type: string
  Retries:
    type: object
    properties:
      bulk:
        $ref: '#/definitions/long'
      search:
        $ref: '#/definitions/long'
  BulkRequest:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/BulkOperation'
      pipeline:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      timeout:
        $ref: '#/definitions/Time'
      type_query_string:
        type: string
      wait_for_active_shards:
        type: string
  BulkResponse:
    type: object
    properties:
      errors:
        type: boolean
      is_valid:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/BulkResponseItemBase'
      items_with_errors:
        type: array
        items:
          $ref: '#/definitions/BulkResponseItemBase'
      took:
        $ref: '#/definitions/long'
  BulkOperation:
    type: object
    properties:
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      operation:
        type: string
      retries_on_conflict:
        $ref: '#/definitions/integer'
      routing:
        $ref: '#/definitions/Routing'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  BulkResponseItemBase:
    type: object
    properties:
      error:
        $ref: '#/definitions/MainError'
      id:
        type: string
      index:
        type: string
      operation:
        type: string
      primary_term:
        $ref: '#/definitions/long'
      result:
        type: string
      sequence_number:
        $ref: '#/definitions/long'
      shards:
        $ref: '#/definitions/ShardStatistics'
      status:
        $ref: '#/definitions/integer'
      type:
        type: string
      version:
        $ref: '#/definitions/long'
      is_valid:
        type: boolean
  DeleteByQueryRequest:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      slice:
        $ref: '#/definitions/SlicedScroll'
      maximum_documents:
        $ref: '#/definitions/long'
      allow_no_indices:
        type: boolean
      analyze_wildcard:
        type: boolean
      analyzer:
        type: string
      conflicts:
        $ref: '#/definitions/Conflicts'
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      from:
        $ref: '#/definitions/long'
      ignore_unavailable:
        type: boolean
      lenient:
        type: boolean
      preference:
        type: string
      query_on_query_string:
        type: string
      refresh:
        type: boolean
      request_cache:
        type: boolean
      requests_per_second:
        $ref: '#/definitions/long'
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      scroll_size:
        $ref: '#/definitions/long'
      search_timeout:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      size:
        $ref: '#/definitions/long'
      slices:
        $ref: '#/definitions/long'
      sort:
        type: array
        items:
          type: string
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      stats:
        type: array
        items:
          type: string
      terminate_after:
        $ref: '#/definitions/long'
      timeout:
        $ref: '#/definitions/Time'
      version:
        type: boolean
      wait_for_active_shards:
        type: string
      wait_for_completion:
        type: boolean
  DeleteByQueryResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      batches:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
      failures:
        type: array
        items:
          $ref: '#/definitions/BulkIndexByScrollFailure'
      noops:
        $ref: '#/definitions/long'
      requests_per_second:
        $ref: '#/definitions/float'
      retries:
        $ref: '#/definitions/Retries'
      slice_id:
        $ref: '#/definitions/integer'
      task:
        $ref: '#/definitions/TaskId'
      throttled_milliseconds:
        $ref: '#/definitions/long'
      throttled_until_milliseconds:
        $ref: '#/definitions/long'
      timed_out:
        type: boolean
      took:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
  DeleteByQueryRethrottleRequest:
    type: object
    properties:
      requests_per_second:
        $ref: '#/definitions/long'
  MultiGetOperation:
    type: object
    properties:
      can_be_flattened:
        type: boolean
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      routing:
        type: string
      source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  MultiGetRequest:
    type: object
    properties:
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      documents:
        type: array
        items:
          $ref: '#/definitions/MultiGetOperation'
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
  MultiGetHit:
    type: object
    properties:
      error:
        $ref: '#/definitions/MainError'
      found:
        type: boolean
      id:
        type: string
      index:
        type: string
      routing:
        type: string
      source:
        $ref: '#/definitions/TDocument'
      type:
        type: string
      version:
        $ref: '#/definitions/long'
      sequence_number:
        $ref: '#/definitions/long'
      primary_term:
        $ref: '#/definitions/long'
  MultiGetResponse:
    type: object
    properties:
      hits:
        type: array
        items:
          $ref: '#/definitions/MultiGetHit<any>'
      is_valid:
        type: boolean
  MultiTermVectorOperation:
    type: object
    properties:
      document:
        $ref: '#/definitions/object'
      field_statistics:
        type: boolean
      filter:
        $ref: '#/definitions/TermVectorFilter'
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      offsets:
        type: boolean
      payloads:
        type: boolean
      positions:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      term_statistics:
        type: boolean
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  MultiTermVectorsRequest:
    type: object
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/MultiTermVectorOperation'
      ids:
        type: array
        items:
          $ref: '#/definitions/Id'
      field_statistics:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      offsets:
        type: boolean
      payloads:
        type: boolean
      positions:
        type: boolean
      preference:
        type: string
      realtime:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      term_statistics:
        type: boolean
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  MultiTermVectorsResponse:
    type: object
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/TermVectors'
  ReindexDestination:
    type: object
    properties:
      index:
        $ref: '#/definitions/IndexName'
      op_type:
        $ref: '#/definitions/OpType'
      routing:
        $ref: '#/definitions/ReindexRouting'
      version_type:
        $ref: '#/definitions/VersionType'
  ReindexOnServerRequest:
    type: object
    properties:
      conflicts:
        $ref: '#/definitions/Conflicts'
      destination:
        $ref: '#/definitions/ReindexDestination'
      script:
        $ref: '#/definitions/Script'
      size:
        $ref: '#/definitions/long'
      maximum_documents:
        $ref: '#/definitions/long'
      source:
        $ref: '#/definitions/ReindexSource'
      refresh:
        type: boolean
      requests_per_second:
        $ref: '#/definitions/long'
      scroll:
        $ref: '#/definitions/Time'
      slices:
        $ref: '#/definitions/long'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
      wait_for_completion:
        type: boolean
  ReindexOnServerResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      batches:
        $ref: '#/definitions/long'
      created:
        $ref: '#/definitions/long'
      failures:
        type: array
        items:
          $ref: '#/definitions/BulkIndexByScrollFailure'
      noops:
        $ref: '#/definitions/long'
      retries:
        $ref: '#/definitions/Retries'
      slice_id:
        $ref: '#/definitions/integer'
      task:
        $ref: '#/definitions/TaskId'
      timed_out:
        type: boolean
      took:
        $ref: '#/definitions/Time'
      total:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
  ReindexRouting:
    type: object
    properties: {}
  ReindexSource:
    type: object
    properties:
      index:
        $ref: '#/definitions/Indices'
      query:
        $ref: '#/definitions/QueryContainer'
      remote:
        $ref: '#/definitions/RemoteSource'
      size:
        $ref: '#/definitions/integer'
      slice:
        $ref: '#/definitions/SlicedScroll'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      source:
        type: array
        items:
          $ref: '#/definitions/Field'
  RemoteSource:
    type: object
    properties:
      host:
        $ref: '#/definitions/Uri'
      password:
        type: string
      username:
        type: string
  ReindexNode:
    type: object
    properties:
      attributes:
        type: object
        additionalProperties:
          type: string
      host:
        type: string
      ip:
        type: string
      name:
        type: string
      roles:
        type: array
        items:
          type: string
      tasks:
        type: object
        additionalProperties:
          $ref: '#/definitions/ReindexTask'
      transport_address:
        type: string
  ReindexRethrottleRequest:
    type: object
    properties:
      requests_per_second:
        $ref: '#/definitions/long'
  ReindexRethrottleResponse:
    type: object
    properties:
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/ReindexNode'
  ReindexStatus:
    type: object
    properties:
      batches:
        $ref: '#/definitions/long'
      created:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
      noops:
        $ref: '#/definitions/long'
      requests_per_second:
        $ref: '#/definitions/float'
      retries:
        $ref: '#/definitions/Retries'
      throttled_in_milliseconds:
        $ref: '#/definitions/long'
      throttled_until_in_milliseconds:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
  ReindexTask:
    type: object
    properties:
      action:
        type: string
      cancellable:
        type: boolean
      description:
        type: string
      id:
        $ref: '#/definitions/long'
      node:
        type: string
      running_time_in_nanoseconds:
        $ref: '#/definitions/long'
      start_time_in_milliseconds:
        $ref: '#/definitions/long'
      status:
        $ref: '#/definitions/ReindexStatus'
      type:
        type: string
  UpdateByQueryRequest:
    type: object
    properties:
      slice:
        $ref: '#/definitions/SlicedScroll'
      query:
        $ref: '#/definitions/QueryContainer'
      script:
        $ref: '#/definitions/Script'
      maximum_documents:
        $ref: '#/definitions/long'
      allow_no_indices:
        type: boolean
      analyze_wildcard:
        type: boolean
      analyzer:
        type: string
      conflicts:
        $ref: '#/definitions/Conflicts'
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      from:
        $ref: '#/definitions/long'
      ignore_unavailable:
        type: boolean
      lenient:
        type: boolean
      pipeline:
        type: string
      preference:
        type: string
      query_on_query_string:
        type: string
      refresh:
        type: boolean
      request_cache:
        type: boolean
      requests_per_second:
        $ref: '#/definitions/long'
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      scroll_size:
        $ref: '#/definitions/long'
      search_timeout:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      size:
        $ref: '#/definitions/long'
      slices:
        $ref: '#/definitions/long'
      sort:
        type: array
        items:
          type: string
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      stats:
        type: array
        items:
          type: string
      terminate_after:
        $ref: '#/definitions/long'
      timeout:
        $ref: '#/definitions/Time'
      version:
        type: boolean
      version_type:
        type: boolean
      wait_for_active_shards:
        type: string
      wait_for_completion:
        type: boolean
  UpdateByQueryResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      batches:
        $ref: '#/definitions/long'
      failures:
        type: array
        items:
          $ref: '#/definitions/BulkIndexByScrollFailure'
      noops:
        $ref: '#/definitions/long'
      requests_per_second:
        $ref: '#/definitions/float'
      retries:
        $ref: '#/definitions/Retries'
      task:
        $ref: '#/definitions/TaskId'
      timed_out:
        type: boolean
      took:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
  UpdateByQueryRethrottleRequest:
    type: object
    properties:
      requests_per_second:
        $ref: '#/definitions/long'
  WriteResponseBase:
    type: object
    properties:
      id:
        type: string
      index:
        type: string
      primary_term:
        $ref: '#/definitions/long'
      result:
        $ref: '#/definitions/Result'
      sequence_number:
        $ref: '#/definitions/long'
      shards:
        $ref: '#/definitions/ShardStatistics'
      type:
        type: string
      version:
        $ref: '#/definitions/long'
  CreateRequest:
    type: object
    properties:
      document:
        $ref: '#/definitions/TDocument'
      pipeline:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      wait_for_active_shards:
        type: string
  CreateResponse:
    type: object
    properties:
      is_valid:
        type: boolean
  DeleteRequest:
    type: object
    properties:
      if_primary_term:
        $ref: '#/definitions/long'
      if_sequence_number:
        $ref: '#/definitions/long'
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      wait_for_active_shards:
        type: string
  DeleteResponse:
    type: object
    properties:
      is_valid:
        type: boolean
  DocumentExistsRequest:
    type: object
    properties:
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  GetRequest:
    type: object
    properties:
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  GetResponse:
    type: object
    properties:
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
      found:
        type: boolean
      id:
        type: string
      index:
        type: string
      primary_term:
        $ref: '#/definitions/long'
      routing:
        type: string
      sequence_number:
        $ref: '#/definitions/long'
      source:
        $ref: '#/definitions/TDocument'
      type:
        type: string
      version:
        $ref: '#/definitions/long'
  IndexRequest:
    type: object
    properties:
      document:
        $ref: '#/definitions/TDocument'
      if_primary_term:
        $ref: '#/definitions/long'
      if_sequence_number:
        $ref: '#/definitions/long'
      op_type:
        $ref: '#/definitions/OpType'
      pipeline:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      wait_for_active_shards:
        type: string
  IndexResponse:
    type: object
    properties:
      is_valid:
        type: boolean
  SourceRequest:
    type: object
    properties:
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  SourceResponse:
    type: object
    properties:
      body:
        $ref: '#/definitions/TDocument'
  SourceExistsRequest:
    type: object
    properties:
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  FieldStatistics:
    type: object
    properties:
      document_count:
        $ref: '#/definitions/integer'
      sum_of_document_frequencies:
        $ref: '#/definitions/integer'
      sum_of_total_term_frequencies:
        $ref: '#/definitions/integer'
  TermVector:
    type: object
    properties:
      field_statistics:
        $ref: '#/definitions/FieldStatistics'
      terms:
        type: object
        additionalProperties:
          $ref: '#/definitions/TermVectorTerm'
  TermVectorFilter:
    type: object
    properties:
      maximum_document_frequency:
        $ref: '#/definitions/integer'
      maximum_number_of_terms:
        $ref: '#/definitions/integer'
      maximum_term_frequency:
        $ref: '#/definitions/integer'
      maximum_word_length:
        $ref: '#/definitions/integer'
      minimum_document_frequency:
        $ref: '#/definitions/integer'
      minimum_term_frequency:
        $ref: '#/definitions/integer'
      minimum_word_length:
        $ref: '#/definitions/integer'
  TermVectorTerm:
    type: object
    properties:
      document_frequency:
        $ref: '#/definitions/integer'
      term_frequency:
        $ref: '#/definitions/integer'
      score:
        $ref: '#/definitions/double'
      tokens:
        type: array
        items:
          $ref: '#/definitions/Token'
      total_term_frequency:
        $ref: '#/definitions/integer'
  TermVectors:
    type: object
    properties:
      found:
        type: boolean
      id:
        type: string
      index:
        type: string
      term_vectors:
        type: object
        additionalProperties:
          $ref: '#/definitions/TermVector'
      took:
        $ref: '#/definitions/long'
      version:
        $ref: '#/definitions/long'
  TermVectorsRequest:
    type: object
    properties:
      document:
        $ref: '#/definitions/TDocument'
      filter:
        $ref: '#/definitions/TermVectorFilter'
      per_field_analyzer:
        type: object
        additionalProperties:
          type: string
      field_statistics:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      offsets:
        type: boolean
      payloads:
        type: boolean
      positions:
        type: boolean
      preference:
        type: string
      realtime:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      term_statistics:
        type: boolean
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  TermVectorsResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      found:
        type: boolean
      id:
        type: string
      index:
        type: string
      term_vectors:
        type: object
        additionalProperties:
          $ref: '#/definitions/TermVector'
      took:
        $ref: '#/definitions/long'
      type:
        type: string
      version:
        $ref: '#/definitions/long'
  Token:
    type: object
    properties:
      end_offset:
        $ref: '#/definitions/integer'
      payload:
        type: string
      position:
        $ref: '#/definitions/integer'
      start_offset:
        $ref: '#/definitions/integer'
  UpdateRequest:
    type: object
    properties:
      detect_noop:
        type: boolean
      doc:
        $ref: '#/definitions/TPartialDocument'
      doc_as_upsert:
        type: boolean
      script:
        $ref: '#/definitions/Script'
      scripted_upsert:
        type: boolean
      source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      upsert:
        $ref: '#/definitions/TDocument'
      if_primary_term:
        $ref: '#/definitions/long'
      if_sequence_number:
        $ref: '#/definitions/long'
      lang:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      retry_on_conflict:
        $ref: '#/definitions/long'
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  UpdateResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      get:
        $ref: '#/definitions/InlineGet<TDocument>'
  IndexState:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      mappings:
        $ref: '#/definitions/TypeMapping'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  Alias:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      index_routing:
        $ref: '#/definitions/Routing'
      is_write_index:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      search_routing:
        $ref: '#/definitions/Routing'
  AliasDefinition:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      index_routing:
        type: string
      is_write_index:
        type: boolean
      routing:
        type: string
      search_routing:
        type: string
  BulkAliasRequest:
    type: object
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/AliasAction'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  BulkAliasResponse:
    type: object
    properties: {}
  AliasAction:
    type: object
    properties: {}
  AliasExistsRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      local:
        type: boolean
  DeleteAliasRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeleteAliasResponse:
    type: object
    properties: {}
  GetAliasRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      local:
        type: boolean
  GetAliasResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexAliases'
      is_valid:
        type: boolean
  IndexAliases:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/AliasDefinition'
  PutAliasRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      index_routing:
        $ref: '#/definitions/Routing'
      is_write_index:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      search_routing:
        $ref: '#/definitions/Routing'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  PutAliasResponse:
    type: object
    properties: {}
  AnalyzeDetail:
    type: object
    properties:
      char_filters:
        type: array
        items:
          $ref: '#/definitions/CharFilterDetail'
      custom_analyzer:
        type: boolean
      filters:
        type: array
        items:
          $ref: '#/definitions/TokenDetail'
      tokenizer:
        $ref: '#/definitions/TokenDetail'
  AnalyzeRequest:
    type: object
    properties:
      analyzer:
        type: string
      attributes:
        type: array
        items:
          type: string
      char_filter:
        type: array
        items:
          description: 'Not an array but: union<string, ICharFilter>'
          type: array
          items:
            - type: string
            - $ref: '#/definitions/ICharFilter'
      explain:
        type: boolean
      field:
        $ref: '#/definitions/Field'
      filter:
        type: array
        items:
          description: 'Not an array but: union<string, ITokenFilter>'
          type: array
          items:
            - type: string
            - $ref: '#/definitions/ITokenFilter'
      normalizer:
        type: string
      text:
        type: array
        items:
          type: string
      tokenizer:
        description: 'Not an array but: union<string, ITokenizer>'
        type: array
        items:
          - type: string
          - $ref: '#/definitions/ITokenizer'
  AnalyzeResponse:
    type: object
    properties:
      detail:
        $ref: '#/definitions/AnalyzeDetail'
      tokens:
        type: array
        items:
          $ref: '#/definitions/AnalyzeToken'
  AnalyzeToken:
    type: object
    properties:
      end_offset:
        $ref: '#/definitions/long'
      position:
        $ref: '#/definitions/long'
      position_length:
        $ref: '#/definitions/long'
      start_offset:
        $ref: '#/definitions/long'
      token:
        type: string
      type:
        type: string
  CharFilterDetail:
    type: object
    properties:
      filtered_text:
        type: array
        items:
          type: string
      name:
        type: string
  ExplainAnalyzeToken:
    type: object
    properties:
      bytes:
        type: string
      end_offset:
        $ref: '#/definitions/long'
      keyword:
        type: boolean
      position:
        $ref: '#/definitions/long'
      position_length:
        $ref: '#/definitions/long'
      start_offset:
        $ref: '#/definitions/long'
      term_frequency:
        $ref: '#/definitions/long'
      token:
        type: string
      type:
        type: string
  TokenDetail:
    type: object
    properties:
      name:
        type: string
      tokens:
        type: array
        items:
          $ref: '#/definitions/ExplainAnalyzeToken'
  CloneIndexRequest:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  CloneIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
      index:
        type: string
  CreateIndexRequest:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      mappings:
        $ref: '#/definitions/TypeMapping'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      include_type_name:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  CreateIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
      index:
        type: string
  DeleteIndexRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeleteIndexResponse:
    type: object
    properties: {}
  FreezeIndexRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  FreezeIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
  GetIndexRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      ignore_unavailable:
        type: boolean
      include_defaults:
        type: boolean
      include_type_name:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  GetIndexResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexState'
  ExistsResponse:
    type: object
    properties:
      exists:
        type: boolean
  IndexExistsRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      ignore_unavailable:
        type: boolean
      include_defaults:
        type: boolean
      local:
        type: boolean
  CloseIndexRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  CloseIndexResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/CloseIndexResult'
      shards_acknowledged:
        type: boolean
  CloseIndexResult:
    type: object
    properties:
      closed:
        type: boolean
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/CloseShardResult'
  CloseShardResult:
    type: object
    properties:
      failures:
        type: array
        items:
          $ref: '#/definitions/ShardFailure'
  OpenIndexRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  OpenIndexResponse:
    type: object
    properties: {}
  RolloverConditions:
    type: object
    properties:
      max_age:
        $ref: '#/definitions/Time'
      max_docs:
        $ref: '#/definitions/long'
      max_size:
        type: string
  RolloverIndexRequest:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      conditions:
        $ref: '#/definitions/RolloverConditions'
      mappings:
        $ref: '#/definitions/TypeMapping'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      dry_run:
        type: boolean
      include_type_name:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  RolloverIndexResponse:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          type: boolean
      dry_run:
        type: boolean
      new_index:
        type: string
      old_index:
        type: string
      rolled_over:
        type: boolean
      shards_acknowledged:
        type: boolean
  ShrinkIndexRequest:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  ShrinkIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
  SplitIndexRequest:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  SplitIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
  TypeExistsRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      local:
        type: boolean
  UnfreezeIndexRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  UnfreezeIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
  GetIndexSettingsRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      ignore_unavailable:
        type: boolean
      include_defaults:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  GetIndexSettingsResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexState'
  DeleteIndexTemplateRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeleteIndexTemplateResponse:
    type: object
    properties: {}
  GetIndexTemplateRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      include_type_name:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  GetIndexTemplateResponse:
    type: object
    properties:
      template_mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TemplateMapping'
  TemplateMapping:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      index_patterns:
        type: array
        items:
          type: string
      mappings:
        $ref: '#/definitions/TypeMapping'
      order:
        $ref: '#/definitions/integer'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      version:
        $ref: '#/definitions/integer'
  IndexTemplateExistsRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  PutIndexTemplateRequest:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      index_patterns:
        type: array
        items:
          type: string
      mappings:
        $ref: '#/definitions/TypeMapping'
      order:
        $ref: '#/definitions/integer'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      version:
        $ref: '#/definitions/integer'
      create:
        type: boolean
      flat_settings:
        type: boolean
      include_type_name:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  PutIndexTemplateResponse:
    type: object
    properties: {}
  UpdateIndexSettingsRequest:
    type: object
    properties:
      index_settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      preserve_existing:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  UpdateIndexSettingsResponse:
    type: object
    properties: {}
  GetFieldMappingRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      include_defaults:
        type: boolean
      include_type_name:
        type: boolean
      local:
        type: boolean
  GetFieldMappingResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeFieldMappings'
      is_valid:
        type: boolean
  TypeFieldMappings:
    type: object
    properties:
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/FieldMapping'
  GetMappingRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      include_type_name:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  GetMappingResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexMappings'
  IndexMappings:
    type: object
    properties:
      item:
        $ref: '#/definitions/TypeMapping'
      mappings:
        $ref: '#/definitions/TypeMapping'
  PutMappingRequest:
    type: object
    properties:
      all_field:
        $ref: '#/definitions/AllField'
      date_detection:
        type: boolean
      dynamic:
        description: 'Not an array but: union<boolean, DynamicMapping>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/DynamicMapping'
      dynamic_date_formats:
        type: array
        items:
          type: string
      dynamic_templates:
        type: object
        additionalProperties:
          $ref: '#/definitions/DynamicTemplate'
      field_names_field:
        $ref: '#/definitions/FieldNamesField'
      index_field:
        $ref: '#/definitions/IndexField'
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      numeric_detection:
        type: boolean
      properties:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
      routing_field:
        $ref: '#/definitions/RoutingField'
      size_field:
        $ref: '#/definitions/SizeField'
      source_field:
        $ref: '#/definitions/SourceField'
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      include_type_name:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  PutMappingResponse:
    type: object
    properties: {}
  RecoveryBytes:
    type: object
    properties:
      percent:
        type: string
      recovered:
        $ref: '#/definitions/long'
      reused:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  RecoveryFileDetails:
    type: object
    properties:
      length:
        $ref: '#/definitions/long'
      name:
        type: string
      recovered:
        $ref: '#/definitions/long'
  RecoveryFiles:
    type: object
    properties:
      details:
        type: array
        items:
          $ref: '#/definitions/RecoveryFileDetails'
      percent:
        type: string
      recovered:
        $ref: '#/definitions/long'
      reused:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  RecoveryIndexStatus:
    type: object
    properties:
      bytes:
        $ref: '#/definitions/RecoveryBytes'
      files:
        $ref: '#/definitions/RecoveryFiles'
      size:
        $ref: '#/definitions/RecoveryBytes'
      source_throttle_time_in_milliseconds:
        $ref: '#/definitions/long'
      target_throttle_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  RecoveryOrigin:
    type: object
    properties:
      host_name:
        type: string
      id:
        type: string
      ip:
        type: string
      name:
        type: string
  RecoveryStartStatus:
    type: object
    properties:
      check_index_time:
        $ref: '#/definitions/long'
      total_time_in_milliseconds:
        type: string
  RecoveryStatus:
    type: object
    properties:
      shards:
        type: array
        items:
          $ref: '#/definitions/ShardRecovery'
  RecoveryStatusRequest:
    type: object
    properties:
      active_only:
        type: boolean
      detailed:
        type: boolean
  RecoveryStatusResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/RecoveryStatus'
  RecoveryTranslogStatus:
    type: object
    properties:
      percent:
        type: string
      recovered:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_on_start:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  RecoveryVerifyIndex:
    type: object
    properties:
      check_index_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  ShardRecovery:
    type: object
    properties:
      id:
        $ref: '#/definitions/long'
      index:
        $ref: '#/definitions/RecoveryIndexStatus'
      primary:
        type: boolean
      source:
        $ref: '#/definitions/RecoveryOrigin'
      stage:
        type: string
      start:
        $ref: '#/definitions/RecoveryStartStatus'
      start_time:
        $ref: '#/definitions/Date'
      stop_time:
        $ref: '#/definitions/Date'
      target:
        $ref: '#/definitions/RecoveryOrigin'
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
      translog:
        $ref: '#/definitions/RecoveryTranslogStatus'
      type:
        type: string
      verify_index:
        $ref: '#/definitions/RecoveryVerifyIndex'
  IndexSegment:
    type: object
    properties:
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardsSegment'
  Segment:
    type: object
    properties:
      attributes:
        type: object
        additionalProperties:
          type: string
      committed:
        type: boolean
      compound:
        type: boolean
      deleted_documents:
        $ref: '#/definitions/long'
      generation:
        $ref: '#/definitions/integer'
      memory_in_bytes:
        $ref: '#/definitions/double'
      search:
        type: boolean
      size_in_bytes:
        $ref: '#/definitions/double'
      total_documents:
        $ref: '#/definitions/long'
      version:
        type: string
  SegmentsRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      verbose:
        type: boolean
  SegmentsResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexSegment'
      shards:
        $ref: '#/definitions/ShardStatistics'
  ShardSegmentRouting:
    type: object
    properties:
      node:
        type: string
      primary:
        type: boolean
      state:
        type: string
  ShardsSegment:
    type: object
    properties:
      committed_segments:
        $ref: '#/definitions/integer'
      routing:
        $ref: '#/definitions/ShardSegmentRouting'
      search_segments:
        $ref: '#/definitions/integer'
      segments:
        type: object
        additionalProperties:
          $ref: '#/definitions/Segment'
  IndicesShardStores:
    type: object
    properties:
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardStoreWrapper'
  IndicesShardStoresRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      status:
        type: array
        items:
          type: string
  IndicesShardStoresResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndicesShardStores'
  ShardStore:
    type: object
    properties:
      allocation:
        $ref: '#/definitions/ShardStoreAllocation'
      allocation_id:
        type: string
      attributes:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      id:
        type: string
      legacy_version:
        $ref: '#/definitions/long'
      name:
        type: string
      store_exception:
        $ref: '#/definitions/ShardStoreException'
      transport_address:
        type: string
  ShardStoreException:
    type: object
    properties:
      reason:
        type: string
      type:
        type: string
  ShardStoreWrapper:
    type: object
    properties:
      stores:
        type: array
        items:
          $ref: '#/definitions/ShardStore'
  IndexStats:
    type: object
    properties:
      completion:
        $ref: '#/definitions/CompletionStats'
      documents:
        $ref: '#/definitions/DocStats'
      fielddata:
        $ref: '#/definitions/FielddataStats'
      flush:
        $ref: '#/definitions/FlushStats'
      get:
        $ref: '#/definitions/GetStats'
      indexing:
        $ref: '#/definitions/IndexingStats'
      merges:
        $ref: '#/definitions/MergesStats'
      query_cache:
        $ref: '#/definitions/QueryCacheStats'
      recovery:
        $ref: '#/definitions/RecoveryStats'
      refresh:
        $ref: '#/definitions/RefreshStats'
      request_cache:
        $ref: '#/definitions/RequestCacheStats'
      search:
        $ref: '#/definitions/SearchStats'
      segments:
        $ref: '#/definitions/SegmentsStats'
      store:
        $ref: '#/definitions/StoreStats'
      translog:
        $ref: '#/definitions/TranslogStats'
      warmer:
        $ref: '#/definitions/WarmerStats'
  IndicesStats:
    type: object
    properties:
      primaries:
        $ref: '#/definitions/IndexStats'
      shards:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/ShardStats'
      total:
        $ref: '#/definitions/IndexStats'
      u_u_i_d:
        type: string
  IndicesStatsRequest:
    type: object
    properties:
      completion_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      fielddata_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      forbid_closed_indices:
        type: boolean
      groups:
        type: array
        items:
          type: string
      include_segment_file_sizes:
        type: boolean
      include_unloaded_segments:
        type: boolean
      level:
        $ref: '#/definitions/Level'
  IndicesStatsResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndicesStats'
      shards:
        $ref: '#/definitions/ShardStatistics'
      stats:
        $ref: '#/definitions/IndicesStats'
  ShardCommit:
    type: object
    properties:
      generation:
        $ref: '#/definitions/integer'
      id:
        type: string
      number_of_documents:
        $ref: '#/definitions/long'
      user_data:
        type: object
        additionalProperties:
          type: string
  ShardCompletion:
    type: object
    properties:
      size_in_bytes:
        $ref: '#/definitions/long'
  ShardDocs:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
  ShardFielddata:
    type: object
    properties:
      evictions:
        $ref: '#/definitions/long'
      memory_size_in_bytes:
        $ref: '#/definitions/long'
  ShardFileSizeInfo:
    type: object
    properties:
      description:
        type: string
      size_in_bytes:
        $ref: '#/definitions/long'
  ShardFlush:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  ShardGet:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      exists_time_in_milliseconds:
        $ref: '#/definitions/long'
      exists_total:
        $ref: '#/definitions/long'
      missing_time_in_milliseconds:
        $ref: '#/definitions/long'
      missing_total:
        $ref: '#/definitions/long'
      time_in_milliseconds:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  ShardIndexing:
    type: object
    properties:
      delete_current:
        $ref: '#/definitions/long'
      delete_time_in_milliseconds:
        $ref: '#/definitions/long'
      delete_total:
        $ref: '#/definitions/long'
      index_current:
        $ref: '#/definitions/long'
      index_failed:
        $ref: '#/definitions/long'
      index_time_in_milliseconds:
        $ref: '#/definitions/long'
      index_total:
        $ref: '#/definitions/long'
      is_throttled:
        type: boolean
      noop_update_total:
        $ref: '#/definitions/long'
      throttle_time_in_milliseconds:
        $ref: '#/definitions/long'
  ShardMerges:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      current_documents:
        $ref: '#/definitions/long'
      current_size_in_bytes:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_auto_throttle_in_bytes:
        $ref: '#/definitions/long'
      total_documents:
        $ref: '#/definitions/long'
      total_size_in_bytes:
        $ref: '#/definitions/long'
      total_stopped_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_throttled_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  ShardPath:
    type: object
    properties:
      data_path:
        type: string
      is_custom_data_path:
        type: boolean
      state_path:
        type: string
  ShardQueryCache:
    type: object
    properties:
      cache_count:
        $ref: '#/definitions/long'
      cache_size:
        $ref: '#/definitions/long'
      evictions:
        $ref: '#/definitions/long'
      hit_count:
        $ref: '#/definitions/long'
      memory_size_in_bytes:
        $ref: '#/definitions/long'
      miss_count:
        $ref: '#/definitions/long'
      total_count:
        $ref: '#/definitions/long'
  ShardRefresh:
    type: object
    properties:
      listeners:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  ShardRequestCache:
    type: object
    properties:
      evictions:
        $ref: '#/definitions/long'
      hit_count:
        $ref: '#/definitions/long'
      memory_size_in_bytes:
        $ref: '#/definitions/long'
      miss_count:
        $ref: '#/definitions/long'
  ShardRouting:
    type: object
    properties:
      node:
        type: string
      primary:
        type: boolean
      relocating_node:
        type: string
      state:
        $ref: '#/definitions/ShardRoutingState'
  ShardSearch:
    type: object
    properties:
      fetch_current:
        $ref: '#/definitions/long'
      fetch_time_in_milliseconds:
        $ref: '#/definitions/long'
      fetch_total:
        $ref: '#/definitions/long'
      open_contexts:
        $ref: '#/definitions/long'
      query_current:
        $ref: '#/definitions/long'
      query_time_in_milliseconds:
        $ref: '#/definitions/long'
      query_total:
        $ref: '#/definitions/long'
      scroll_current:
        $ref: '#/definitions/long'
      scroll_time_in_milliseconds:
        $ref: '#/definitions/long'
      scroll_total:
        $ref: '#/definitions/long'
      suggest_current:
        $ref: '#/definitions/long'
      suggest_time_in_milliseconds:
        $ref: '#/definitions/long'
      suggest_total:
        $ref: '#/definitions/long'
  ShardSegments:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      document_values_memory_in_bytes:
        $ref: '#/definitions/long'
      file_sizes:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardFileSizeInfo'
      fixed_bit_memory_in_bytes:
        $ref: '#/definitions/long'
      index_writer_memory_in_bytes:
        $ref: '#/definitions/long'
      max_unsafe_auto_id_time_stamp:
        $ref: '#/definitions/long'
      memory_in_bytes:
        $ref: '#/definitions/long'
      norms_memory_in_bytes:
        $ref: '#/definitions/long'
      points_memory_in_bytes:
        $ref: '#/definitions/long'
      stored_fields_memory_in_bytes:
        $ref: '#/definitions/long'
      terms_memory_in_bytes:
        $ref: '#/definitions/long'
      term_vectors_memory_in_bytes:
        $ref: '#/definitions/long'
      version_map_memory_in_bytes:
        $ref: '#/definitions/long'
  ShardSequenceNumber:
    type: object
    properties:
      global_checkpoint:
        $ref: '#/definitions/long'
      local_checkpoint:
        $ref: '#/definitions/long'
      maximum_sequence_number:
        $ref: '#/definitions/long'
  ShardStats:
    type: object
    properties:
      commit:
        $ref: '#/definitions/ShardCommit'
      completion:
        $ref: '#/definitions/ShardCompletion'
      documents:
        $ref: '#/definitions/ShardDocs'
      fielddata:
        $ref: '#/definitions/ShardFielddata'
      flush:
        $ref: '#/definitions/ShardFlush'
      get:
        $ref: '#/definitions/ShardGet'
      indexing:
        $ref: '#/definitions/ShardIndexing'
      merges:
        $ref: '#/definitions/ShardMerges'
      path:
        $ref: '#/definitions/ShardPath'
      query_cache:
        $ref: '#/definitions/ShardQueryCache'
      recovery:
        $ref: '#/definitions/ShardStatsRecovery'
      refresh:
        $ref: '#/definitions/ShardRefresh'
      request_cache:
        $ref: '#/definitions/ShardRequestCache'
      routing:
        $ref: '#/definitions/ShardRouting'
      search:
        $ref: '#/definitions/ShardSearch'
      segments:
        $ref: '#/definitions/ShardSegments'
      sequence_number:
        $ref: '#/definitions/ShardSequenceNumber'
      store:
        $ref: '#/definitions/ShardStatsStore'
      transaction_log:
        $ref: '#/definitions/ShardTransactionLog'
      warmer:
        $ref: '#/definitions/ShardWarmer'
  ShardStatsRecovery:
    type: object
    properties:
      current_as_source:
        $ref: '#/definitions/long'
      current_as_target:
        $ref: '#/definitions/long'
      throttle_time_in_milliseconds:
        $ref: '#/definitions/long'
  ShardStatsStore:
    type: object
    properties:
      size_in_bytes:
        $ref: '#/definitions/long'
  ShardTransactionLog:
    type: object
    properties:
      operations:
        $ref: '#/definitions/long'
      size_in_bytes:
        $ref: '#/definitions/long'
      uncommitted_operations:
        $ref: '#/definitions/long'
      uncommitted_size_in_bytes:
        $ref: '#/definitions/long'
  ShardWarmer:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_time_in_milliseconds:
        $ref: '#/definitions/long'
  ClearCacheRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      fielddata:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      ignore_unavailable:
        type: boolean
      query:
        type: boolean
      request:
        type: boolean
  ClearCacheResponse:
    type: object
    properties: {}
  FlushRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      force:
        type: boolean
      ignore_unavailable:
        type: boolean
      wait_if_ongoing:
        type: boolean
  FlushResponse:
    type: object
    properties: {}
  ForceMergeRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flush:
        type: boolean
      ignore_unavailable:
        type: boolean
      max_num_segments:
        $ref: '#/definitions/long'
      only_expunge_deletes:
        type: boolean
  ForceMergeResponse:
    type: object
    properties: {}
  RefreshRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
  RefreshResponse:
    type: object
    properties: {}
  SyncedFlushRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
  SyncedFlushResponse:
    type: object
    properties: {}
  Pipeline:
    type: object
    properties:
      description:
        type: string
      on_failure:
        type: array
        items:
          $ref: '#/definitions/Processor'
      processors:
        type: array
        items:
          $ref: '#/definitions/Processor'
  Processor:
    type: object
    properties:
      name:
        type: string
      on_failure:
        type: array
        items:
          $ref: '#/definitions/Processor'
      if:
        type: string
      tag:
        type: string
      ignore_failure:
        type: boolean
  DeletePipelineRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeletePipelineResponse:
    type: object
    properties: {}
  GetPipelineRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  GetPipelineResponse:
    type: object
    properties:
      pipelines:
        type: object
        additionalProperties:
          $ref: '#/definitions/Pipeline'
  GrokProcessorPatternsRequest:
    type: object
    properties: {}
  GrokProcessorPatternsResponse:
    type: object
    properties:
      patterns:
        type: object
        additionalProperties:
          type: string
  PutPipelineRequest:
    type: object
    properties:
      description:
        type: string
      on_failure:
        type: array
        items:
          $ref: '#/definitions/Processor'
      processors:
        type: array
        items:
          $ref: '#/definitions/Processor'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  PutPipelineResponse:
    type: object
    properties: {}
  DocumentSimulation:
    type: object
    properties:
      id:
        type: string
      index:
        type: string
      ingest:
        $ref: '#/definitions/Ingest'
      parent:
        type: string
      routing:
        type: string
      source:
        $ref: '#/definitions/LazyDocument'
      type:
        type: string
  Ingest:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/Date'
  PipelineSimulation:
    type: object
    properties:
      document:
        $ref: '#/definitions/DocumentSimulation'
      processor_results:
        type: array
        items:
          $ref: '#/definitions/PipelineSimulation'
      tag:
        type: string
  SimulatePipelineDocument:
    type: object
    properties:
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      source:
        $ref: '#/definitions/object'
  SimulatePipelineRequest:
    type: object
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/SimulatePipelineDocument'
      pipeline:
        $ref: '#/definitions/Pipeline'
      verbose:
        type: boolean
  SimulatePipelineResponse:
    type: object
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/PipelineSimulation'
  TypeMapping:
    type: object
    properties:
      all_field:
        $ref: '#/definitions/AllField'
      date_detection:
        type: boolean
      dynamic:
        description: 'Not an array but: union<boolean, DynamicMapping>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/DynamicMapping'
      dynamic_date_formats:
        type: array
        items:
          type: string
      dynamic_templates:
        type: object
        additionalProperties:
          $ref: '#/definitions/DynamicTemplate'
      field_names_field:
        $ref: '#/definitions/FieldNamesField'
      index_field:
        $ref: '#/definitions/IndexField'
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      numeric_detection:
        type: boolean
      properties:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
      routing_field:
        $ref: '#/definitions/RoutingField'
      size_field:
        $ref: '#/definitions/SizeField'
      source_field:
        $ref: '#/definitions/SourceField'
  DynamicTemplate:
    type: object
    properties:
      mapping:
        $ref: '#/definitions/IProperty'
      match:
        type: string
      match_mapping_type:
        type: string
      match_pattern:
        $ref: '#/definitions/MatchType'
      path_match:
        type: string
      path_unmatch:
        type: string
      unmatch:
        type: string
  FieldMapping:
    type: object
    properties: {}
  AllField:
    type: object
    properties:
      analyzer:
        type: string
      enabled:
        type: boolean
      omit_norms:
        type: boolean
      search_analyzer:
        type: string
      similarity:
        type: string
      store:
        type: boolean
      store_term_vector_offsets:
        type: boolean
      store_term_vector_payloads:
        type: boolean
      store_term_vector_positions:
        type: boolean
      store_term_vectors:
        type: boolean
  FieldNamesField:
    type: object
    properties:
      enabled:
        type: boolean
  IndexField:
    type: object
    properties:
      enabled:
        type: boolean
  RoutingField:
    type: object
    properties:
      required:
        type: boolean
  SizeField:
    type: object
    properties:
      enabled:
        type: boolean
  SourceField:
    type: object
    properties:
      compress:
        type: boolean
      compress_threshold:
        type: string
      enabled:
        type: boolean
      excludes:
        type: array
        items:
          type: string
      includes:
        type: array
        items:
          type: string
  CorePropertyBase:
    type: object
    properties:
      copy_to:
        type: array
        items:
          $ref: '#/definitions/Field'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
      similarity:
        type: string
      store:
        type: boolean
  DocValuesPropertyBase:
    type: object
    properties:
      doc_values:
        type: boolean
  IProperty:
    type: object
    properties:
      local_metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      name:
        $ref: '#/definitions/PropertyName'
      type:
        type: string
  PropertyBase:
    type: object
    properties:
      local_metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      name:
        $ref: '#/definitions/PropertyName'
      type:
        type: string
  PropertyWithClrOrigin:
    type: object
    properties: {}
  FlattenedProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      depth_limit:
        $ref: '#/definitions/integer'
      doc_values:
        type: boolean
      eager_global_ordinals:
        type: boolean
      ignore_above:
        $ref: '#/definitions/integer'
      index:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      null_value:
        type: string
      similarity:
        type: string
      split_queries_on_whitespace:
        type: boolean
  NestedProperty:
    type: object
    properties:
      include_in_parent:
        type: boolean
      include_in_root:
        type: boolean
  ObjectProperty:
    type: object
    properties:
      dynamic:
        description: 'Not an array but: union<boolean, DynamicMapping>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/DynamicMapping'
      enabled:
        type: boolean
      properties:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
  BinaryProperty:
    type: object
    properties: {}
  BooleanProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      fielddata:
        $ref: '#/definitions/NumericFielddata'
      index:
        type: boolean
      null_value:
        type: boolean
  DateProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      fielddata:
        $ref: '#/definitions/NumericFielddata'
      format:
        type: string
      ignore_malformed:
        type: boolean
      index:
        type: boolean
      null_value:
        $ref: '#/definitions/Date'
      precision_step:
        $ref: '#/definitions/integer'
  DateNanosProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      format:
        type: string
      ignore_malformed:
        type: boolean
      index:
        type: boolean
      null_value:
        $ref: '#/definitions/Date'
      precision_step:
        $ref: '#/definitions/integer'
  JoinProperty:
    type: object
    properties:
      relations:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/RelationName'
  KeywordProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      eager_global_ordinals:
        type: boolean
      ignore_above:
        $ref: '#/definitions/integer'
      index:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      normalizer:
        type: string
      norms:
        type: boolean
      null_value:
        type: string
      split_queries_on_whitespace:
        type: boolean
  NumberProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      coerce:
        type: boolean
      fielddata:
        $ref: '#/definitions/NumericFielddata'
      ignore_malformed:
        type: boolean
      index:
        type: boolean
      null_value:
        $ref: '#/definitions/double'
      scaling_factor:
        $ref: '#/definitions/double'
  PercolatorProperty:
    type: object
    properties: {}
  RangePropertyBase:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      coerce:
        type: boolean
      index:
        type: boolean
  DateRangeProperty:
    type: object
    properties:
      format:
        type: string
  DoubleRangeProperty:
    type: object
    properties: {}
  FloatRangeProperty:
    type: object
    properties: {}
  IntegerRangeProperty:
    type: object
    properties: {}
  IpRangeProperty:
    type: object
    properties: {}
  LongRangeProperty:
    type: object
    properties: {}
  RankFeatureProperty:
    type: object
    properties:
      positive_score_impact:
        type: boolean
  RankFeaturesProperty:
    type: object
    properties: {}
  SearchAsYouTypeProperty:
    type: object
    properties:
      analyzer:
        type: string
      index:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      max_shingle_size:
        $ref: '#/definitions/integer'
      norms:
        type: boolean
      search_analyzer:
        type: string
      search_quote_analyzer:
        type: string
      term_vector:
        $ref: '#/definitions/TermVectorOption'
  TextIndexPrefixes:
    type: object
    properties:
      max_characters:
        $ref: '#/definitions/integer'
      min_characters:
        $ref: '#/definitions/integer'
  TextProperty:
    type: object
    properties:
      analyzer:
        type: string
      boost:
        $ref: '#/definitions/double'
      eager_global_ordinals:
        type: boolean
      fielddata:
        type: boolean
      fielddata_frequency_filter:
        $ref: '#/definitions/FielddataFrequencyFilter'
      index:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      index_phrases:
        type: boolean
      index_prefixes:
        $ref: '#/definitions/TextIndexPrefixes'
      norms:
        type: boolean
      position_increment_gap:
        $ref: '#/definitions/integer'
      search_analyzer:
        type: string
      search_quote_analyzer:
        type: string
      term_vector:
        $ref: '#/definitions/TermVectorOption'
  GeoPointProperty:
    type: object
    properties:
      ignore_malformed:
        type: boolean
      ignore_z_value:
        type: boolean
      null_value:
        $ref: '#/definitions/GeoLocation'
  GeoShapeProperty:
    type: object
    properties:
      ignore_malformed:
        type: boolean
      ignore_z_value:
        type: boolean
      orientation:
        $ref: '#/definitions/GeoOrientation'
      strategy:
        $ref: '#/definitions/GeoStrategy'
      coerce:
        type: boolean
  CompletionProperty:
    type: object
    properties:
      analyzer:
        type: string
      contexts:
        type: array
        items:
          $ref: '#/definitions/SuggestContext'
      max_input_length:
        $ref: '#/definitions/integer'
      preserve_position_increments:
        type: boolean
      preserve_separators:
        type: boolean
      search_analyzer:
        type: string
  SuggestContext:
    type: object
    properties:
      name:
        type: string
      path:
        $ref: '#/definitions/Field'
      type:
        type: string
  FieldAliasProperty:
    type: object
    properties:
      path:
        $ref: '#/definitions/Field'
  GenericProperty:
    type: object
    properties:
      analyzer:
        type: string
      boost:
        $ref: '#/definitions/double'
      fielddata:
        $ref: '#/definitions/StringFielddata'
      ignore_above:
        $ref: '#/definitions/integer'
      index:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      norms:
        type: boolean
      null_value:
        type: string
      position_increment_gap:
        $ref: '#/definitions/integer'
      search_analyzer:
        type: string
      term_vector:
        $ref: '#/definitions/TermVectorOption'
      type:
        type: string
  IpProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      index:
        type: boolean
      null_value:
        type: string
  Murmur3HashProperty:
    type: object
    properties: {}
  ShapeProperty:
    type: object
    properties:
      ignore_malformed:
        type: boolean
      ignore_z_value:
        type: boolean
      orientation:
        $ref: '#/definitions/ShapeOrientation'
      coerce:
        type: boolean
  TokenCountProperty:
    type: object
    properties:
      analyzer:
        type: string
      boost:
        $ref: '#/definitions/double'
      index:
        type: boolean
      null_value:
        $ref: '#/definitions/double'
  IndicesModuleSettings:
    type: object
    properties:
      circuit_breaker_settings:
        $ref: '#/definitions/CircuitBreakerSettings'
      fielddata_settings:
        $ref: '#/definitions/FielddataSettings'
      qeueries_cache_size:
        type: string
      recovery_settings:
        $ref: '#/definitions/IndicesRecoverySettings'
  CircuitBreakerSettings:
    type: object
    properties:
      fielddata_limit:
        type: string
      fielddata_overhead:
        $ref: '#/definitions/float'
      request_limit:
        type: string
      request_overhead:
        $ref: '#/definitions/float'
      total_limit:
        type: string
  Fielddata:
    type: object
    properties:
      filter:
        $ref: '#/definitions/FielddataFilter'
      loading:
        $ref: '#/definitions/FielddataLoading'
  FielddataFilter:
    type: object
    properties:
      frequency:
        $ref: '#/definitions/FielddataFrequencyFilter'
      regex:
        $ref: '#/definitions/FielddataRegexFilter'
  FielddataFrequencyFilter:
    type: object
    properties:
      max:
        $ref: '#/definitions/double'
      min:
        $ref: '#/definitions/double'
      min_segment_size:
        $ref: '#/definitions/integer'
  FielddataRegexFilter:
    type: object
    properties:
      pattern:
        type: string
  FielddataSettings:
    type: object
    properties:
      cache_expire:
        $ref: '#/definitions/Time'
      cache_size:
        type: string
  NumericFielddata:
    type: object
    properties:
      format:
        $ref: '#/definitions/NumericFielddataFormat'
  StringFielddata:
    type: object
    properties:
      format:
        $ref: '#/definitions/StringFielddataFormat'
  IndicesRecoverySettings:
    type: object
    properties:
      compress:
        type: boolean
      concurrent_small_file_streams:
        $ref: '#/definitions/integer'
      concurrent_streams:
        $ref: '#/definitions/integer'
      file_chunk_size:
        type: string
      max_bytes_per_second:
        type: string
      translog_operations:
        $ref: '#/definitions/integer'
      translog_size:
        type: string
  StoredScript:
    type: object
    properties:
      lang:
        type: string
      source:
        type: string
  DeleteScriptRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeleteScriptResponse:
    type: object
    properties: {}
  ExecutePainlessScriptRequest:
    type: object
    properties:
      context:
        type: string
      context_setup:
        $ref: '#/definitions/PainlessContextSetup'
      script:
        $ref: '#/definitions/InlineScript'
  ExecutePainlessScriptResponse:
    type: object
    properties:
      result:
        $ref: '#/definitions/TResult'
  PainlessContextSetup:
    type: object
    properties:
      document:
        $ref: '#/definitions/object'
      index:
        $ref: '#/definitions/IndexName'
      query:
        $ref: '#/definitions/QueryContainer'
  GetScriptRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  GetScriptResponse:
    type: object
    properties:
      script:
        $ref: '#/definitions/StoredScript'
  PutScriptRequest:
    type: object
    properties:
      script:
        $ref: '#/definitions/StoredScript'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  PutScriptResponse:
    type: object
    properties: {}
  SnapshotRepository:
    type: object
    properties:
      type:
        type: string
  CleanupRepositoryRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  CleanupRepositoryResponse:
    type: object
    properties:
      results:
        $ref: '#/definitions/CleanupRepositoryResults'
  CleanupRepositoryResults:
    type: object
    properties:
      deleted_bytes:
        $ref: '#/definitions/long'
      deleted_blobs:
        $ref: '#/definitions/long'
  CreateRepositoryRequest:
    type: object
    properties:
      repository:
        $ref: '#/definitions/SnapshotRepository'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      verify:
        type: boolean
  CreateRepositoryResponse:
    type: object
    properties: {}
  DeleteRepositoryRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeleteRepositoryResponse:
    type: object
    properties: {}
  GetRepositoryRequest:
    type: object
    properties:
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  GetRepositoryResponse:
    type: object
    properties:
      repositories:
        type: object
        additionalProperties:
          $ref: '#/definitions/SnapshotRepository'
  CompactNodeInfo:
    type: object
    properties:
      name:
        type: string
  VerifyRepositoryRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  VerifyRepositoryResponse:
    type: object
    properties:
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/CompactNodeInfo'
  RestoreRequest:
    type: object
    properties:
      ignore_index_settings:
        type: array
        items:
          type: string
      ignore_unavailable:
        type: boolean
      include_aliases:
        type: boolean
      include_global_state:
        type: boolean
      index_settings:
        $ref: '#/definitions/UpdateIndexSettingsRequest'
      indices:
        $ref: '#/definitions/Indices'
      partial:
        type: boolean
      rename_pattern:
        type: string
      rename_replacement:
        type: string
      master_timeout:
        $ref: '#/definitions/Time'
      wait_for_completion:
        type: boolean
  RestoreResponse:
    type: object
    properties:
      snapshot:
        $ref: '#/definitions/SnapshotRestore'
  SnapshotRestore:
    type: object
    properties:
      indices:
        type: array
        items:
          $ref: '#/definitions/IndexName'
      name:
        type: string
      shards:
        $ref: '#/definitions/ShardStatistics'
  Snapshot:
    type: object
    properties:
      duration_in_milliseconds:
        $ref: '#/definitions/long'
      end_time:
        $ref: '#/definitions/Date'
      end_time_in_milliseconds:
        $ref: '#/definitions/long'
      failures:
        type: array
        items:
          $ref: '#/definitions/SnapshotShardFailure'
      indices:
        type: array
        items:
          $ref: '#/definitions/IndexName'
      name:
        type: string
      shards:
        $ref: '#/definitions/ShardStatistics'
      start_time:
        $ref: '#/definitions/Date'
      start_time_in_milliseconds:
        $ref: '#/definitions/long'
      state:
        type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  SnapshotShardFailure:
    type: object
    properties:
      index:
        type: string
      node_id:
        type: string
      reason:
        type: string
      shard_id:
        type: string
      status:
        type: string
  DeleteSnapshotRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  DeleteSnapshotResponse:
    type: object
    properties: {}
  GetSnapshotRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      verbose:
        type: boolean
  GetSnapshotResponse:
    type: object
    properties:
      snapshots:
        type: array
        items:
          $ref: '#/definitions/Snapshot'
  SnapshotRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      include_global_state:
        type: boolean
      indices:
        $ref: '#/definitions/Indices'
      partial:
        type: boolean
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      master_timeout:
        $ref: '#/definitions/Time'
      wait_for_completion:
        type: boolean
  SnapshotResponse:
    type: object
    properties:
      accepted:
        type: boolean
      snapshot:
        $ref: '#/definitions/Snapshot'
  FileCountSnapshotStats:
    type: object
    properties:
      file_count:
        $ref: '#/definitions/integer'
      size_in_bytes:
        $ref: '#/definitions/long'
  SnapshotIndexStats:
    type: object
    properties:
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/SnapshotShardsStats'
      shards_stats:
        $ref: '#/definitions/SnapshotShardsStats'
      stats:
        $ref: '#/definitions/SnapshotStats'
  SnapshotShardsStats:
    type: object
    properties:
      done:
        $ref: '#/definitions/long'
      failed:
        $ref: '#/definitions/long'
      finalizing:
        $ref: '#/definitions/long'
      initializing:
        $ref: '#/definitions/long'
      started:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  SnapshotStats:
    type: object
    properties:
      incremental:
        $ref: '#/definitions/FileCountSnapshotStats'
      total:
        $ref: '#/definitions/FileCountSnapshotStats'
      start_time_in_milliseconds:
        $ref: '#/definitions/long'
      time_in_milliseconds:
        $ref: '#/definitions/long'
  SnapshotStatus:
    type: object
    properties:
      include_global_state:
        type: boolean
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/SnapshotIndexStats'
      repository:
        type: string
      shards_stats:
        $ref: '#/definitions/SnapshotShardsStats'
      snapshot:
        type: string
      state:
        type: string
      stats:
        $ref: '#/definitions/SnapshotStats'
      u_u_i_d:
        type: string
  SnapshotStatusRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  SnapshotStatusResponse:
    type: object
    properties:
      snapshots:
        type: array
        items:
          $ref: '#/definitions/SnapshotStatus'
  MatchAllQuery:
    type: object
    properties:
      norm_field:
        type: string
  MatchNoneQuery:
    type: object
    properties: {}
  QueryContainer:
    type: object
    properties:
      bool:
        $ref: '#/definitions/BoolQuery'
      boosting:
        $ref: '#/definitions/BoostingQuery'
      common_terms:
        $ref: '#/definitions/CommonTermsQuery'
      constant_score:
        $ref: '#/definitions/ConstantScoreQuery'
      dis_max:
        $ref: '#/definitions/DisMaxQuery'
      exists:
        $ref: '#/definitions/ExistsQuery'
      function_score:
        $ref: '#/definitions/FunctionScoreQuery'
      fuzzy:
        $ref: '#/definitions/FuzzyQuery'
      geo_bounding_box:
        $ref: '#/definitions/GeoBoundingBoxQuery'
      geo_distance:
        $ref: '#/definitions/GeoDistanceQuery'
      geo_polygon:
        $ref: '#/definitions/GeoPolygonQuery'
      geo_shape:
        $ref: '#/definitions/GeoShapeQuery'
      shape:
        $ref: '#/definitions/ShapeQuery'
      has_child:
        $ref: '#/definitions/HasChildQuery'
      has_parent:
        $ref: '#/definitions/HasParentQuery'
      ids:
        $ref: '#/definitions/IdsQuery'
      intervals:
        $ref: '#/definitions/IntervalsQuery'
      is_conditionless:
        type: boolean
      is_strict:
        type: boolean
      is_verbatim:
        type: boolean
      is_writable:
        type: boolean
      match:
        $ref: '#/definitions/MatchQuery'
      match_all:
        $ref: '#/definitions/MatchAllQuery'
      match_none:
        $ref: '#/definitions/MatchNoneQuery'
      match_phrase:
        $ref: '#/definitions/MatchPhraseQuery'
      match_phrase_prefix:
        $ref: '#/definitions/MatchPhrasePrefixQuery'
      more_like_this:
        $ref: '#/definitions/MoreLikeThisQuery'
      multi_match:
        $ref: '#/definitions/MultiMatchQuery'
      nested:
        $ref: '#/definitions/NestedQuery'
      parent_id:
        $ref: '#/definitions/ParentIdQuery'
      percolate:
        $ref: '#/definitions/PercolateQuery'
      prefix:
        $ref: '#/definitions/PrefixQuery'
      query_string:
        $ref: '#/definitions/QueryStringQuery'
      range:
        $ref: '#/definitions/RangeQuery'
      raw_query:
        $ref: '#/definitions/RawQuery'
      regexp:
        $ref: '#/definitions/RegexpQuery'
      script:
        $ref: '#/definitions/ScriptQuery'
      script_score:
        $ref: '#/definitions/ScriptScoreQuery'
      simple_query_string:
        $ref: '#/definitions/SimpleQueryStringQuery'
      span_containing:
        $ref: '#/definitions/SpanContainingQuery'
      span_field_masking:
        $ref: '#/definitions/SpanFieldMaskingQuery'
      span_first:
        $ref: '#/definitions/SpanFirstQuery'
      span_multi_term:
        $ref: '#/definitions/SpanMultiTermQuery'
      span_near:
        $ref: '#/definitions/SpanNearQuery'
      span_not:
        $ref: '#/definitions/SpanNotQuery'
      span_or:
        $ref: '#/definitions/SpanOrQuery'
      span_term:
        $ref: '#/definitions/SpanTermQuery'
      span_within:
        $ref: '#/definitions/SpanWithinQuery'
      term:
        $ref: '#/definitions/TermQuery'
      terms:
        $ref: '#/definitions/TermsQuery'
      terms_set:
        $ref: '#/definitions/TermsSetQuery'
      wildcard:
        $ref: '#/definitions/WildcardQuery'
      rank_feature:
        $ref: '#/definitions/RankFeatureQuery'
      distance_feature:
        $ref: '#/definitions/DistanceFeatureQuery'
      pinned:
        $ref: '#/definitions/PinnedQuery'
  FieldLookup:
    type: object
    properties:
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      path:
        $ref: '#/definitions/Field'
      routing:
        $ref: '#/definitions/Routing'
  FieldNameQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
  Query:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      conditionless:
        type: boolean
      is_strict:
        type: boolean
      is_verbatim:
        type: boolean
      is_writable:
        type: boolean
      name:
        type: string
  BoolQuery:
    type: object
    properties:
      filter:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      locked:
        type: boolean
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      must:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      must_not:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      should:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
  BoostingQuery:
    type: object
    properties:
      negative_boost:
        $ref: '#/definitions/double'
      negative_query:
        $ref: '#/definitions/QueryContainer'
      positive_query:
        $ref: '#/definitions/QueryContainer'
  ConstantScoreQuery:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
  DisMaxQuery:
    type: object
    properties:
      queries:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      tie_breaker:
        $ref: '#/definitions/double'
  FunctionScoreQuery:
    type: object
    properties:
      boost_mode:
        $ref: '#/definitions/FunctionBoostMode'
      functions:
        type: array
        items:
          $ref: '#/definitions/ScoreFunction'
      max_boost:
        $ref: '#/definitions/double'
      min_score:
        $ref: '#/definitions/double'
      query:
        $ref: '#/definitions/QueryContainer'
      score_mode:
        $ref: '#/definitions/FunctionScoreMode'
  ScoreFunction:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      weight:
        $ref: '#/definitions/double'
  CommonTermsQuery:
    type: object
    properties:
      analyzer:
        type: string
      cutoff_frequency:
        $ref: '#/definitions/double'
      high_frequency_operator:
        $ref: '#/definitions/Operator'
      low_frequency_operator:
        $ref: '#/definitions/Operator'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      query:
        type: string
  Intervals:
    type: object
    properties:
      filter:
        $ref: '#/definitions/IntervalsFilter'
  IntervalsAllOf:
    type: object
    properties:
      intervals:
        type: array
        items:
          $ref: '#/definitions/IntervalsContainer'
      max_gaps:
        $ref: '#/definitions/integer'
      ordered:
        type: boolean
  IntervalsAnyOf:
    type: object
    properties:
      intervals:
        type: array
        items:
          $ref: '#/definitions/IntervalsContainer'
  IntervalsContainer:
    type: object
    properties:
      all_of:
        $ref: '#/definitions/IntervalsAllOf'
      any_of:
        $ref: '#/definitions/IntervalsAnyOf'
      match:
        $ref: '#/definitions/IntervalsMatch'
      prefix:
        $ref: '#/definitions/IntervalsPrefix'
      wildcard:
        $ref: '#/definitions/IntervalsWildcard'
  IntervalsFilter:
    type: object
    properties:
      after:
        $ref: '#/definitions/IntervalsContainer'
      before:
        $ref: '#/definitions/IntervalsContainer'
      contained_by:
        $ref: '#/definitions/IntervalsContainer'
      containing:
        $ref: '#/definitions/IntervalsContainer'
      not_contained_by:
        $ref: '#/definitions/IntervalsContainer'
      not_containing:
        $ref: '#/definitions/IntervalsContainer'
      not_overlapping:
        $ref: '#/definitions/IntervalsContainer'
      overlapping:
        $ref: '#/definitions/IntervalsContainer'
      script:
        $ref: '#/definitions/Script'
  IntervalsMatch:
    type: object
    properties:
      analyzer:
        type: string
      max_gaps:
        $ref: '#/definitions/integer'
      ordered:
        type: boolean
      query:
        type: string
      use_field:
        $ref: '#/definitions/Field'
  IntervalsNoFilter:
    type: object
    properties: {}
  IntervalsPrefix:
    type: object
    properties:
      analyzer:
        type: string
      prefix:
        type: string
      use_field:
        $ref: '#/definitions/Field'
  IntervalsQuery:
    type: object
    properties: {}
  IntervalsWildcard:
    type: object
    properties:
      analyzer:
        type: string
      pattern:
        type: string
      use_field:
        $ref: '#/definitions/Field'
  MatchQuery:
    type: object
    properties:
      analyzer:
        type: string
      auto_generate_synonyms_phrase_query:
        type: boolean
      cutoff_frequency:
        $ref: '#/definitions/double'
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      fuzzy_rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      fuzzy_transpositions:
        type: boolean
      lenient:
        type: boolean
      max_expansions:
        $ref: '#/definitions/integer'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      operator:
        $ref: '#/definitions/Operator'
      prefix_length:
        $ref: '#/definitions/integer'
      query:
        type: string
      zero_terms_query:
        $ref: '#/definitions/ZeroTermsQuery'
  MatchPhraseQuery:
    type: object
    properties:
      analyzer:
        type: string
      query:
        type: string
      slop:
        $ref: '#/definitions/integer'
  MatchPhrasePrefixQuery:
    type: object
    properties:
      analyzer:
        type: string
      max_expansions:
        $ref: '#/definitions/integer'
      query:
        type: string
      slop:
        $ref: '#/definitions/integer'
      zero_terms_query:
        $ref: '#/definitions/ZeroTermsQuery'
  MultiMatchQuery:
    type: object
    properties:
      analyzer:
        type: string
      auto_generate_synonyms_phrase_query:
        type: boolean
      cutoff_frequency:
        $ref: '#/definitions/double'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      fuzzy_rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      fuzzy_transpositions:
        type: boolean
      lenient:
        type: boolean
      max_expansions:
        $ref: '#/definitions/integer'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      operator:
        $ref: '#/definitions/Operator'
      prefix_length:
        $ref: '#/definitions/integer'
      query:
        type: string
      slop:
        $ref: '#/definitions/integer'
      tie_breaker:
        $ref: '#/definitions/double'
      type:
        $ref: '#/definitions/TextQueryType'
      use_dis_max:
        type: boolean
      zero_terms_query:
        $ref: '#/definitions/ZeroTermsQuery'
  QueryStringQuery:
    type: object
    properties:
      allow_leading_wildcard:
        type: boolean
      analyzer:
        type: string
      analyze_wildcard:
        type: boolean
      auto_generate_synonyms_phrase_query:
        type: boolean
      default_field:
        $ref: '#/definitions/Field'
      default_operator:
        $ref: '#/definitions/Operator'
      enable_position_increments:
        type: boolean
      escape:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      fuzzy_max_expansions:
        $ref: '#/definitions/integer'
      fuzzy_prefix_length:
        $ref: '#/definitions/integer'
      fuzzy_rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      fuzzy_transpositions:
        type: boolean
      lenient:
        type: boolean
      maximum_determinized_states:
        $ref: '#/definitions/integer'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      phrase_slop:
        $ref: '#/definitions/double'
      query:
        type: string
      quote_analyzer:
        type: string
      quote_field_suffix:
        type: string
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      tie_breaker:
        $ref: '#/definitions/double'
      time_zone:
        type: string
      type:
        $ref: '#/definitions/TextQueryType'
  SimpleQueryStringQuery:
    type: object
    properties:
      analyzer:
        type: string
      analyze_wildcard:
        type: boolean
      auto_generate_synonyms_phrase_query:
        type: boolean
      default_operator:
        $ref: '#/definitions/Operator'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      flags:
        $ref: '#/definitions/SimpleQueryStringFlags'
      fuzzy_max_expansions:
        $ref: '#/definitions/integer'
      fuzzy_prefix_length:
        $ref: '#/definitions/integer'
      fuzzy_transpositions:
        type: boolean
      lenient:
        type: boolean
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      query:
        type: string
      quote_field_suffix:
        type: string
  GeoCoordinate:
    type: object
    properties:
      z:
        $ref: '#/definitions/double'
  GeoLocation:
    type: object
    properties:
      latitude:
        $ref: '#/definitions/double'
      longitude:
        $ref: '#/definitions/double'
  BoundingBox:
    type: object
    properties:
      bottom_right:
        $ref: '#/definitions/GeoLocation'
      top_left:
        $ref: '#/definitions/GeoLocation'
      well_known_text:
        type: string
  GeoBoundingBoxQuery:
    type: object
    properties:
      bounding_box:
        $ref: '#/definitions/BoundingBox'
      type:
        $ref: '#/definitions/GeoExecution'
      validation_method:
        $ref: '#/definitions/GeoValidationMethod'
  GeoDistanceQuery:
    type: object
    properties:
      distance:
        $ref: '#/definitions/Distance'
      distance_type:
        $ref: '#/definitions/GeoDistanceType'
      location:
        $ref: '#/definitions/GeoLocation'
      validation_method:
        $ref: '#/definitions/GeoValidationMethod'
  GeoPolygonQuery:
    type: object
    properties:
      points:
        type: array
        items:
          $ref: '#/definitions/GeoLocation'
      validation_method:
        $ref: '#/definitions/GeoValidationMethod'
  GeoShape:
    type: object
    properties:
      type:
        type: string
  GeoShapeQuery:
    type: object
    properties:
      ignore_unmapped:
        type: boolean
      indexed_shape:
        $ref: '#/definitions/FieldLookup'
      relation:
        $ref: '#/definitions/GeoShapeRelation'
      shape:
        $ref: '#/definitions/GeoShape'
  HasChildQuery:
    type: object
    properties:
      ignore_unmapped:
        type: boolean
      inner_hits:
        $ref: '#/definitions/InnerHits'
      max_children:
        $ref: '#/definitions/integer'
      min_children:
        $ref: '#/definitions/integer'
      query:
        $ref: '#/definitions/QueryContainer'
      score_mode:
        $ref: '#/definitions/ChildScoreMode'
      type:
        $ref: '#/definitions/RelationName'
  HasParentQuery:
    type: object
    properties:
      ignore_unmapped:
        type: boolean
      inner_hits:
        $ref: '#/definitions/InnerHits'
      parent_type:
        $ref: '#/definitions/RelationName'
      query:
        $ref: '#/definitions/QueryContainer'
      score:
        type: boolean
  NestedQuery:
    type: object
    properties:
      ignore_unmapped:
        type: boolean
      inner_hits:
        $ref: '#/definitions/InnerHits'
      path:
        $ref: '#/definitions/Field'
      query:
        $ref: '#/definitions/QueryContainer'
      score_mode:
        $ref: '#/definitions/NestedScoreMode'
  ParentIdQuery:
    type: object
    properties:
      id:
        $ref: '#/definitions/Id'
      ignore_unmapped:
        type: boolean
      type:
        $ref: '#/definitions/RelationName'
  MultiTermQueryRewrite:
    type: object
    properties:
      constant_score:
        $ref: '#/definitions/MultiTermQueryRewrite'
      constant_score_boolean:
        $ref: '#/definitions/MultiTermQueryRewrite'
      rewrite:
        $ref: '#/definitions/RewriteMultiTerm'
      scoring_boolean:
        $ref: '#/definitions/MultiTermQueryRewrite'
      size:
        $ref: '#/definitions/integer'
  RawQuery:
    type: object
    properties:
      raw:
        type: string
  SpanQuery:
    type: object
    properties:
      span_containing:
        $ref: '#/definitions/SpanContainingQuery'
      span_field_masking:
        $ref: '#/definitions/SpanFieldMaskingQuery'
      span_first:
        $ref: '#/definitions/SpanFirstQuery'
      span_gap:
        $ref: '#/definitions/SpanGapQuery'
      span_multi_term:
        $ref: '#/definitions/SpanMultiTermQuery'
      span_near:
        $ref: '#/definitions/SpanNearQuery'
      span_not:
        $ref: '#/definitions/SpanNotQuery'
      span_or:
        $ref: '#/definitions/SpanOrQuery'
      span_term:
        $ref: '#/definitions/SpanTermQuery'
      span_within:
        $ref: '#/definitions/SpanWithinQuery'
  SpanSubQuery:
    type: object
    properties: {}
  SpanContainingQuery:
    type: object
    properties:
      big:
        $ref: '#/definitions/SpanQuery'
      little:
        $ref: '#/definitions/SpanQuery'
  SpanFieldMaskingQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      query:
        $ref: '#/definitions/SpanQuery'
  SpanFirstQuery:
    type: object
    properties:
      end:
        $ref: '#/definitions/integer'
      match:
        $ref: '#/definitions/SpanQuery'
  SpanGapQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      width:
        $ref: '#/definitions/integer'
  SpanMultiTermQuery:
    type: object
    properties:
      match:
        $ref: '#/definitions/QueryContainer'
  SpanNearQuery:
    type: object
    properties:
      clauses:
        type: array
        items:
          $ref: '#/definitions/SpanQuery'
      in_order:
        type: boolean
      slop:
        $ref: '#/definitions/integer'
  SpanNotQuery:
    type: object
    properties:
      dist:
        $ref: '#/definitions/integer'
      exclude:
        $ref: '#/definitions/SpanQuery'
      include:
        $ref: '#/definitions/SpanQuery'
      post:
        $ref: '#/definitions/integer'
      pre:
        $ref: '#/definitions/integer'
  SpanOrQuery:
    type: object
    properties:
      clauses:
        type: array
        items:
          $ref: '#/definitions/SpanQuery'
  SpanTermQuery:
    type: object
    properties: {}
  SpanWithinQuery:
    type: object
    properties:
      big:
        $ref: '#/definitions/SpanQuery'
      little:
        $ref: '#/definitions/SpanQuery'
  DistanceFeatureQuery:
    type: object
    properties:
      origin:
        description: 'Not an array but: union<GeoCoordinate, DateMath>'
        type: array
        items:
          - $ref: '#/definitions/GeoCoordinate'
          - $ref: '#/definitions/DateMath'
      pivot:
        description: 'Not an array but: union<Distance, Time>'
        type: array
        items:
          - $ref: '#/definitions/Distance'
          - $ref: '#/definitions/Time'
  MoreLikeThisQuery:
    type: object
    properties:
      analyzer:
        type: string
      boost_terms:
        $ref: '#/definitions/double'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      include:
        type: boolean
      like:
        type: array
        items:
          $ref: '#/definitions/Like'
      max_document_frequency:
        $ref: '#/definitions/integer'
      max_query_terms:
        $ref: '#/definitions/integer'
      max_word_length:
        $ref: '#/definitions/integer'
      min_document_frequency:
        $ref: '#/definitions/integer'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      min_term_frequency:
        $ref: '#/definitions/integer'
      min_word_length:
        $ref: '#/definitions/integer'
      per_field_analyzer:
        type: object
        additionalProperties:
          type: string
      routing:
        $ref: '#/definitions/Routing'
      stop_words:
        $ref: '#/definitions/StopWords'
      unlike:
        type: array
        items:
          $ref: '#/definitions/Like'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  Like:
    type: object
    properties: {}
  LikeDocument:
    type: object
    properties:
      document:
        $ref: '#/definitions/object'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      per_field_analyzer:
        type: object
        additionalProperties:
          type: string
      routing:
        $ref: '#/definitions/Routing'
  PercolateQuery:
    type: object
    properties:
      document:
        $ref: '#/definitions/object'
      documents:
        type: array
        items:
          $ref: '#/definitions/object'
      field:
        $ref: '#/definitions/Field'
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      version:
        $ref: '#/definitions/long'
  PinnedQuery:
    type: object
    properties:
      ids:
        type: array
        items:
          $ref: '#/definitions/Id'
      organic:
        $ref: '#/definitions/QueryContainer'
  RankFeatureFunction:
    type: object
    properties: {}
  RankFeatureQuery:
    type: object
    properties:
      function:
        $ref: '#/definitions/RankFeatureFunction'
  ScriptQuery:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  ScriptScoreQuery:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      script:
        $ref: '#/definitions/Script'
  ShapeQuery:
    type: object
    properties:
      ignore_unmapped:
        type: boolean
      indexed_shape:
        $ref: '#/definitions/FieldLookup'
      relation:
        $ref: '#/definitions/ShapeRelation'
      shape:
        $ref: '#/definitions/GeoShape'
  ExistsQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
  FuzzyQuery:
    type: object
    properties:
      max_expansions:
        $ref: '#/definitions/integer'
      prefix_length:
        $ref: '#/definitions/integer'
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      transpositions:
        type: boolean
  IdsQuery:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/Id'
  PrefixQuery:
    type: object
    properties:
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
  RangeQuery:
    type: object
    properties: {}
  RegexpQuery:
    type: object
    properties:
      flags:
        type: string
      maximum_determinized_states:
        $ref: '#/definitions/integer'
      value:
        type: string
  TermQuery:
    type: object
    properties:
      value:
        $ref: '#/definitions/object'
  TermsQuery:
    type: object
    properties:
      terms:
        type: array
        items:
          $ref: '#/definitions/object'
      terms_lookup:
        $ref: '#/definitions/FieldLookup'
  TermsSetQuery:
    type: object
    properties:
      minimum_should_match_field:
        $ref: '#/definitions/Field'
      minimum_should_match_script:
        $ref: '#/definitions/Script'
      terms:
        type: array
        items:
          $ref: '#/definitions/object'
  WildcardQuery:
    type: object
    properties:
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
  TypedSearchRequest:
    type: object
    properties: {}
  CountRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      analyze_wildcard:
        type: boolean
      analyzer:
        type: string
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_throttled:
        type: boolean
      ignore_unavailable:
        type: boolean
      lenient:
        type: boolean
      min_score:
        $ref: '#/definitions/double'
      preference:
        type: string
      query_on_query_string:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      terminate_after:
        $ref: '#/definitions/long'
      query:
        $ref: '#/definitions/QueryContainer'
  CountResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      shards:
        $ref: '#/definitions/ShardStatistics'
  ExplainRequest:
    type: object
    properties:
      analyze_wildcard:
        type: boolean
      analyzer:
        type: string
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      lenient:
        type: boolean
      preference:
        type: string
      query_on_query_string:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      query:
        $ref: '#/definitions/QueryContainer'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
  ExplainResponse:
    type: object
    properties:
      explanation:
        $ref: '#/definitions/ExplanationDetail'
      get:
        $ref: '#/definitions/InlineGet<TDocument>'
      matched:
        type: boolean
  Explanation:
    type: object
    properties:
      description:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/ExplanationDetail'
      value:
        $ref: '#/definitions/float'
  ExplanationDetail:
    type: object
    properties:
      description:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/ExplanationDetail'
      value:
        $ref: '#/definitions/float'
  InlineGet:
    type: object
    properties:
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
      found:
        type: boolean
      source:
        $ref: '#/definitions/TDocument'
  FieldCapabilities:
    type: object
    properties:
      aggregatable:
        type: boolean
      indices:
        $ref: '#/definitions/Indices'
      non_aggregatable_indices:
        $ref: '#/definitions/Indices'
      non_searchable_indices:
        $ref: '#/definitions/Indices'
      searchable:
        type: boolean
  FieldCapabilitiesRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      ignore_unavailable:
        type: boolean
      include_unmapped:
        type: boolean
  FieldCapabilitiesResponse:
    type: object
    properties:
      fields:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/FieldCapabilities'
  MultiSearchRequest:
    type: object
    properties:
      ccs_minimize_roundtrips:
        type: boolean
      max_concurrent_searches:
        $ref: '#/definitions/long'
      max_concurrent_shard_requests:
        $ref: '#/definitions/long'
      pre_filter_shard_size:
        $ref: '#/definitions/long'
      search_type:
        $ref: '#/definitions/SearchType'
      total_hits_as_integer:
        type: boolean
      typed_keys:
        type: boolean
      operations:
        type: object
        additionalProperties:
          $ref: '#/definitions/SearchRequest'
  MultiSearchResponse:
    type: object
    properties:
      took:
        $ref: '#/definitions/long'
      all_responses:
        type: array
        items:
          $ref: '#/definitions/IResponse'
      is_valid:
        type: boolean
      total_responses:
        $ref: '#/definitions/integer'
  MultiSearchTemplateRequest:
    type: object
    properties:
      ccs_minimize_roundtrips:
        type: boolean
      max_concurrent_searches:
        $ref: '#/definitions/long'
      search_type:
        $ref: '#/definitions/SearchType'
      total_hits_as_integer:
        type: boolean
      typed_keys:
        type: boolean
      operations:
        type: object
        additionalProperties:
          $ref: '#/definitions/SearchTemplateRequest'
  ClearScrollRequest:
    type: object
    properties:
      scroll_ids:
        type: array
        items:
          type: string
  ClearScrollResponse:
    type: object
    properties: {}
  ScrollRequest:
    type: object
    properties:
      total_hits_as_integer:
        type: boolean
      scroll:
        $ref: '#/definitions/Time'
      scroll_id:
        type: string
  SlicedScroll:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      id:
        $ref: '#/definitions/integer'
      max:
        $ref: '#/definitions/integer'
  SearchRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      allow_partial_search_results:
        type: boolean
      analyze_wildcard:
        type: boolean
      analyzer:
        type: string
      batched_reduce_size:
        $ref: '#/definitions/long'
      ccs_minimize_roundtrips:
        type: boolean
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_throttled:
        type: boolean
      ignore_unavailable:
        type: boolean
      lenient:
        type: boolean
      max_concurrent_shard_requests:
        $ref: '#/definitions/long'
      pre_filter_shard_size:
        $ref: '#/definitions/long'
      preference:
        type: string
      request_cache:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      sequence_number_primary_term:
        type: boolean
      stats:
        type: array
        items:
          type: string
      suggest_field:
        $ref: '#/definitions/Field'
      suggest_mode:
        $ref: '#/definitions/SuggestMode'
      suggest_size:
        $ref: '#/definitions/long'
      suggest_text:
        type: string
      total_hits_as_integer:
        type: boolean
      typed_keys:
        type: boolean
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      collapse:
        $ref: '#/definitions/FieldCollapse'
      doc_value_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      explain:
        type: boolean
      from:
        $ref: '#/definitions/integer'
      highlight:
        $ref: '#/definitions/Highlight'
      indices_boost:
        type: object
        additionalProperties:
          $ref: '#/definitions/double'
      min_score:
        $ref: '#/definitions/double'
      post_filter:
        $ref: '#/definitions/QueryContainer'
      profile:
        type: boolean
      query:
        $ref: '#/definitions/QueryContainer'
      rescore:
        type: array
        items:
          $ref: '#/definitions/Rescore'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      search_after:
        type: array
        items:
          $ref: '#/definitions/object'
      size:
        $ref: '#/definitions/integer'
      slice:
        $ref: '#/definitions/SlicedScroll'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      suggest:
        type: object
        additionalProperties:
          $ref: '#/definitions/SuggestBucket'
      terminate_after:
        $ref: '#/definitions/long'
      timeout:
        type: string
      track_scores:
        type: boolean
      track_total_hits:
        type: boolean
      version:
        type: boolean
  SearchResponse:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/Aggregate'
      clusters:
        $ref: '#/definitions/ClusterStatistics'
      documents:
        type: array
        items:
          $ref: '#/definitions/TDocument'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
      hits_metadata:
        $ref: '#/definitions/HitsMetadata<TDocument>'
      max_score:
        $ref: '#/definitions/double'
      number_of_reduce_phases:
        $ref: '#/definitions/long'
      profile:
        $ref: '#/definitions/Profile'
      scroll_id:
        type: string
      shards:
        $ref: '#/definitions/ShardStatistics'
      suggest:
        $ref: '#/definitions/SuggestDictionary<TDocument>'
      terminated_early:
        type: boolean
      timed_out:
        type: boolean
      took:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  FieldCollapse:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      inner_hits:
        $ref: '#/definitions/InnerHits'
      max_concurrent_group_searches:
        $ref: '#/definitions/integer'
  Highlight:
    type: object
    properties:
      boundary_chars:
        type: string
      boundary_max_scan:
        $ref: '#/definitions/integer'
      boundary_scanner:
        $ref: '#/definitions/BoundaryScanner'
      boundary_scanner_locale:
        type: string
      encoder:
        $ref: '#/definitions/HighlighterEncoder'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/HighlightField'
      fragmenter:
        $ref: '#/definitions/HighlighterFragmenter'
      fragment_offset:
        $ref: '#/definitions/integer'
      fragment_size:
        $ref: '#/definitions/integer'
      max_fragment_length:
        $ref: '#/definitions/integer'
      no_match_size:
        $ref: '#/definitions/integer'
      number_of_fragments:
        $ref: '#/definitions/integer'
      order:
        $ref: '#/definitions/HighlighterOrder'
      post_tags:
        type: array
        items:
          type: string
      pre_tags:
        type: array
        items:
          type: string
      require_field_match:
        type: boolean
      tags_schema:
        $ref: '#/definitions/HighlighterTagsSchema'
  HighlightField:
    type: object
    properties:
      boundary_chars:
        type: string
      boundary_max_scan:
        $ref: '#/definitions/integer'
      boundary_scanner:
        $ref: '#/definitions/BoundaryScanner'
      boundary_scanner_locale:
        type: string
      field:
        $ref: '#/definitions/Field'
      force_source:
        type: boolean
      fragmenter:
        $ref: '#/definitions/HighlighterFragmenter'
      fragment_offset:
        $ref: '#/definitions/integer'
      fragment_size:
        $ref: '#/definitions/integer'
      highlight_query:
        $ref: '#/definitions/QueryContainer'
      matched_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      max_fragment_length:
        $ref: '#/definitions/integer'
      no_match_size:
        $ref: '#/definitions/integer'
      number_of_fragments:
        $ref: '#/definitions/integer'
      order:
        $ref: '#/definitions/HighlighterOrder'
      phrase_limit:
        $ref: '#/definitions/integer'
      post_tags:
        type: array
        items:
          type: string
      pre_tags:
        type: array
        items:
          type: string
      require_field_match:
        type: boolean
      tags_schema:
        $ref: '#/definitions/HighlighterTagsSchema'
      type:
        description: 'Not an array but: union<HighlighterType, string>'
        type: array
        items:
          - $ref: '#/definitions/HighlighterType'
          - type: string
  Hit:
    type: object
    properties:
      explanation:
        $ref: '#/definitions/Explanation'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
      highlight:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
      inner_hits:
        type: object
        additionalProperties:
          $ref: '#/definitions/InnerHitsResult'
      matched_queries:
        type: array
        items:
          type: string
      nested:
        $ref: '#/definitions/NestedIdentity'
      score:
        $ref: '#/definitions/double'
      sorts:
        type: array
        items:
          $ref: '#/definitions/object'
  HitMetadata:
    type: object
    properties:
      id:
        type: string
      index:
        type: string
      primary_term:
        $ref: '#/definitions/long'
      routing:
        type: string
      sequence_number:
        $ref: '#/definitions/long'
      source:
        $ref: '#/definitions/TDocument'
      type:
        type: string
      version:
        $ref: '#/definitions/long'
  HitsMetadata:
    type: object
    properties:
      hits:
        type: array
        items:
          $ref: '#/definitions/Hit<T>'
      max_score:
        $ref: '#/definitions/double'
      total:
        $ref: '#/definitions/TotalHits'
  InnerHitsMetadata:
    type: object
    properties:
      hits:
        type: array
        items:
          $ref: '#/definitions/Hit<LazyDocument>'
      max_score:
        $ref: '#/definitions/double'
      total:
        $ref: '#/definitions/TotalHits'
  InnerHitsResult:
    type: object
    properties:
      hits:
        $ref: '#/definitions/InnerHitsMetadata'
  NestedIdentity:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      nested:
        $ref: '#/definitions/NestedIdentity'
      offset:
        $ref: '#/definitions/integer'
  TotalHits:
    type: object
    properties:
      relation:
        $ref: '#/definitions/TotalHitsRelation'
      value:
        $ref: '#/definitions/long'
  InnerHits:
    type: object
    properties:
      collapse:
        $ref: '#/definitions/FieldCollapse'
      doc_value_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      explain:
        type: boolean
      from:
        $ref: '#/definitions/integer'
      highlight:
        $ref: '#/definitions/Highlight'
      ignore_unmapped:
        type: boolean
      name:
        type: string
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      size:
        $ref: '#/definitions/integer'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      version:
        type: boolean
  AggregationBreakdown:
    type: object
    properties:
      build_aggregation:
        $ref: '#/definitions/long'
      build_aggregation_count:
        $ref: '#/definitions/long'
      collect:
        $ref: '#/definitions/long'
      collect_count:
        $ref: '#/definitions/long'
      initialize:
        $ref: '#/definitions/long'
      initialize_count:
        $ref: '#/definitions/long'
      reduce:
        $ref: '#/definitions/long'
      reduce_count:
        $ref: '#/definitions/long'
  AggregationProfile:
    type: object
    properties:
      breakdown:
        $ref: '#/definitions/AggregationBreakdown'
      description:
        type: string
      time_in_nanoseconds:
        $ref: '#/definitions/long'
      type:
        type: string
  Collector:
    type: object
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/Collector'
      name:
        type: string
      reason:
        type: string
      time_in_nanoseconds:
        $ref: '#/definitions/long'
  Profile:
    type: object
    properties:
      shards:
        type: array
        items:
          $ref: '#/definitions/ShardProfile'
  QueryBreakdown:
    type: object
    properties:
      advance:
        $ref: '#/definitions/long'
      build_scorer:
        $ref: '#/definitions/long'
      create_weight:
        $ref: '#/definitions/long'
      match:
        $ref: '#/definitions/long'
      next_doc:
        $ref: '#/definitions/long'
      score:
        $ref: '#/definitions/long'
  QueryProfile:
    type: object
    properties:
      breakdown:
        $ref: '#/definitions/QueryBreakdown'
      children:
        type: array
        items:
          $ref: '#/definitions/QueryProfile'
      description:
        type: string
      time_in_nanoseconds:
        $ref: '#/definitions/long'
      type:
        type: string
  SearchProfile:
    type: object
    properties:
      collector:
        type: array
        items:
          $ref: '#/definitions/Collector'
      query:
        type: array
        items:
          $ref: '#/definitions/QueryProfile'
      rewrite_time:
        $ref: '#/definitions/long'
  ShardProfile:
    type: object
    properties:
      aggregations:
        type: array
        items:
          $ref: '#/definitions/AggregationProfile'
      id:
        type: string
      searches:
        type: array
        items:
          $ref: '#/definitions/SearchProfile'
  Rescore:
    type: object
    properties:
      query:
        $ref: '#/definitions/RescoreQuery'
      window_size:
        $ref: '#/definitions/integer'
  RescoreQuery:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      query_weight:
        $ref: '#/definitions/double'
      rescore_query_weight:
        $ref: '#/definitions/double'
      score_mode:
        $ref: '#/definitions/ScoreMode'
  NestedSort:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      nested:
        $ref: '#/definitions/NestedSort'
      path:
        $ref: '#/definitions/Field'
  Sort:
    type: object
    properties:
      missing:
        $ref: '#/definitions/object'
      mode:
        $ref: '#/definitions/SortMode'
      numeric_type:
        $ref: '#/definitions/NumericType'
      nested:
        $ref: '#/definitions/NestedSort'
      order:
        $ref: '#/definitions/SortOrder'
      sort_key:
        $ref: '#/definitions/Field'
  SourceFilter:
    type: object
    properties:
      excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
      includes:
        type: array
        items:
          $ref: '#/definitions/Field'
  SearchNode:
    type: object
    properties:
      name:
        type: string
      transport_address:
        type: string
  SearchShard:
    type: object
    properties:
      index:
        type: string
      node:
        type: string
      primary:
        type: boolean
      relocating_node:
        type: string
      shard:
        $ref: '#/definitions/integer'
      state:
        type: string
  SearchShardsRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      local:
        type: boolean
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
  SearchShardsResponse:
    type: object
    properties:
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/SearchNode'
      shards:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/SearchShard'
  SearchTemplateRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      ccs_minimize_roundtrips:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      explain:
        type: boolean
      ignore_throttled:
        type: boolean
      ignore_unavailable:
        type: boolean
      preference:
        type: string
      profile:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      total_hits_as_integer:
        type: boolean
      typed_keys:
        type: boolean
      id:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      source:
        type: string
  RenderSearchTemplateRequest:
    type: object
    properties:
      file:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      source:
        type: string
  RenderSearchTemplateResponse:
    type: object
    properties:
      template_output:
        $ref: '#/definitions/LazyDocument'
  Suggest:
    type: object
    properties:
      length:
        $ref: '#/definitions/integer'
      offset:
        $ref: '#/definitions/integer'
      options:
        type: array
        items:
          $ref: '#/definitions/SuggestOption<T>'
      text:
        type: string
  SuggestBucket:
    type: object
    properties:
      completion:
        $ref: '#/definitions/CompletionSuggester'
      phrase:
        $ref: '#/definitions/PhraseSuggester'
      prefix:
        type: string
      regex:
        type: string
      term:
        $ref: '#/definitions/TermSuggester'
      text:
        type: string
  SuggestDictionary:
    type: object
    properties:
      item:
        type: array
        items:
          $ref: '#/definitions/Suggest<T>'
      keys:
        type: array
        items:
          type: string
      values:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/Suggest<T>'
  SuggestOption:
    type: object
    properties:
      collate_match:
        type: boolean
      contexts:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/Context'
      document_score:
        $ref: '#/definitions/double'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
      frequency:
        $ref: '#/definitions/long'
      highlighted:
        type: string
      id:
        type: string
      index:
        $ref: '#/definitions/IndexName'
      score:
        $ref: '#/definitions/double'
      source:
        $ref: '#/definitions/TDocument'
      suggest_score:
        $ref: '#/definitions/double'
      text:
        type: string
  Suggester:
    type: object
    properties:
      analyzer:
        type: string
      field:
        $ref: '#/definitions/Field'
      size:
        $ref: '#/definitions/integer'
  CompletionSuggester:
    type: object
    properties:
      contexts:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/SuggestContextQuery'
      fuzzy:
        $ref: '#/definitions/SuggestFuzziness'
      prefix:
        type: string
      regex:
        type: string
      skip_duplicates:
        type: boolean
  SuggestFuzziness:
    type: object
    properties:
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      min_length:
        $ref: '#/definitions/integer'
      prefix_length:
        $ref: '#/definitions/integer'
      transpositions:
        type: boolean
      unicode_aware:
        type: boolean
  Context:
    type: object
    properties:
      category:
        type: string
      geo:
        $ref: '#/definitions/GeoLocation'
  SuggestContextQuery:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      context:
        $ref: '#/definitions/Context'
      neighbours:
        description: 'Not an array but: union<Distance[], integer[]>'
        type: array
        items:
          - type: array
            items:
              $ref: '#/definitions/Distance'
          - type: array
            items:
              $ref: '#/definitions/integer'
      precision:
        description: 'Not an array but: union<Distance, integer>'
        type: array
        items:
          - $ref: '#/definitions/Distance'
          - $ref: '#/definitions/integer'
      prefix:
        type: boolean
  DirectGenerator:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      max_edits:
        $ref: '#/definitions/integer'
      max_inspections:
        $ref: '#/definitions/float'
      max_term_frequency:
        $ref: '#/definitions/float'
      min_doc_frequency:
        $ref: '#/definitions/float'
      min_word_length:
        $ref: '#/definitions/integer'
      post_filter:
        type: string
      pre_filter:
        type: string
      prefix_length:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
      suggest_mode:
        $ref: '#/definitions/SuggestMode'
  PhraseSuggestCollate:
    type: object
    properties:
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      prune:
        type: boolean
      query:
        $ref: '#/definitions/PhraseSuggestCollateQuery'
  PhraseSuggestCollateQuery:
    type: object
    properties:
      id:
        $ref: '#/definitions/Id'
      source:
        type: string
  PhraseSuggestHighlight:
    type: object
    properties:
      post_tag:
        type: string
      pre_tag:
        type: string
  PhraseSuggester:
    type: object
    properties:
      collate:
        $ref: '#/definitions/PhraseSuggestCollate'
      confidence:
        $ref: '#/definitions/double'
      direct_generator:
        type: array
        items:
          $ref: '#/definitions/DirectGenerator'
      force_unigrams:
        type: boolean
      gram_size:
        $ref: '#/definitions/integer'
      highlight:
        $ref: '#/definitions/PhraseSuggestHighlight'
      max_errors:
        $ref: '#/definitions/double'
      real_word_error_likelihood:
        $ref: '#/definitions/double'
      separator:
        type: string
      shard_size:
        $ref: '#/definitions/integer'
      smoothing:
        $ref: '#/definitions/SmoothingModelContainer'
      text:
        type: string
      token_limit:
        $ref: '#/definitions/integer'
  LaplaceSmoothingModel:
    type: object
    properties:
      alpha:
        $ref: '#/definitions/double'
  LinearInterpolationSmoothingModel:
    type: object
    properties:
      bigram_lambda:
        $ref: '#/definitions/double'
      trigram_lambda:
        $ref: '#/definitions/double'
      unigram_lambda:
        $ref: '#/definitions/double'
  SmoothingModel:
    type: object
    properties: {}
  SmoothingModelContainer:
    type: object
    properties:
      laplace:
        $ref: '#/definitions/LaplaceSmoothingModel'
      linear_interpolation:
        $ref: '#/definitions/LinearInterpolationSmoothingModel'
      stupid_backoff:
        $ref: '#/definitions/StupidBackoffSmoothingModel'
  StupidBackoffSmoothingModel:
    type: object
    properties:
      discount:
        $ref: '#/definitions/double'
  TermSuggester:
    type: object
    properties:
      lowercase_terms:
        type: boolean
      max_edits:
        $ref: '#/definitions/integer'
      max_inspections:
        $ref: '#/definitions/integer'
      max_term_frequency:
        $ref: '#/definitions/float'
      min_doc_frequency:
        $ref: '#/definitions/float'
      min_word_length:
        $ref: '#/definitions/integer'
      prefix_length:
        $ref: '#/definitions/integer'
      shard_size:
        $ref: '#/definitions/integer'
      sort:
        $ref: '#/definitions/SuggestSort'
      string_distance:
        $ref: '#/definitions/StringDistance'
      suggest_mode:
        $ref: '#/definitions/SuggestMode'
      text:
        type: string
  ValidateQueryRequest:
    type: object
    properties:
      all_shards:
        type: boolean
      allow_no_indices:
        type: boolean
      analyze_wildcard:
        type: boolean
      analyzer:
        type: string
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      explain:
        type: boolean
      ignore_unavailable:
        type: boolean
      lenient:
        type: boolean
      query_on_query_string:
        type: string
      rewrite:
        type: boolean
      query:
        $ref: '#/definitions/QueryContainer'
  ValidateQueryResponse:
    type: object
    properties:
      explanations:
        type: array
        items:
          $ref: '#/definitions/ValidationExplanation'
      shards:
        $ref: '#/definitions/ShardStatistics'
      valid:
        type: boolean
  ValidationExplanation:
    type: object
    properties:
      error:
        type: string
      explanation:
        type: string
      index:
        type: string
      valid:
        type: boolean
  CreateAutoFollowPatternRequest:
    type: object
    properties:
      remote_cluster:
        type: string
      leader_index_patterns:
        type: array
        items:
          type: string
      follow_index_pattern:
        type: string
      max_read_request_operation_count:
        $ref: '#/definitions/integer'
      max_outstanding_read_requests:
        $ref: '#/definitions/long'
      max_read_request_size:
        type: string
      max_write_request_operation_count:
        $ref: '#/definitions/integer'
      max_write_request_size:
        type: string
      max_outstanding_write_requests:
        $ref: '#/definitions/integer'
      max_write_buffer_count:
        $ref: '#/definitions/integer'
      max_write_buffer_size:
        type: string
      max_retry_delay:
        $ref: '#/definitions/Time'
      max_poll_timeout:
        $ref: '#/definitions/Time'
  CreateAutoFollowPatternResponse:
    type: object
    properties: {}
  DeleteAutoFollowPatternRequest:
    type: object
    properties: {}
  DeleteAutoFollowPatternResponse:
    type: object
    properties: {}
  AutoFollowPattern:
    type: object
    properties:
      follow_index_pattern:
        type: string
      leader_index_patterns:
        type: array
        items:
          type: string
      max_outstanding_read_requests:
        $ref: '#/definitions/long'
      max_outstanding_write_requests:
        $ref: '#/definitions/integer'
      max_poll_timeout:
        $ref: '#/definitions/Time'
      max_read_request_operation_count:
        $ref: '#/definitions/integer'
      max_read_request_size:
        type: string
      max_retry_delay:
        $ref: '#/definitions/Time'
      max_write_buffer_count:
        $ref: '#/definitions/integer'
      max_write_buffer_size:
        type: string
      max_write_request_operation_count:
        $ref: '#/definitions/integer'
      max_write_request_size:
        type: string
      remote_cluster:
        type: string
  GetAutoFollowPatternRequest:
    type: object
    properties: {}
  GetAutoFollowPatternResponse:
    type: object
    properties:
      patterns:
        type: object
        additionalProperties:
          $ref: '#/definitions/AutoFollowPattern'
  CreateFollowIndexRequest:
    type: object
    properties:
      wait_for_active_shards:
        type: string
      remote_cluster:
        type: string
      leader_index:
        $ref: '#/definitions/IndexName'
      max_read_request_operation_count:
        $ref: '#/definitions/long'
      max_outstanding_read_requests:
        $ref: '#/definitions/long'
      max_request_size:
        type: string
      max_write_request_operation_count:
        $ref: '#/definitions/long'
      max_write_request_size:
        type: string
      max_outstanding_write_requests:
        $ref: '#/definitions/long'
      max_write_buffer_count:
        $ref: '#/definitions/long'
      max_write_buffer_size:
        type: string
      max_retry_delay:
        $ref: '#/definitions/Time'
      read_poll_timeout:
        $ref: '#/definitions/Time'
  CreateFollowIndexResponse:
    type: object
    properties:
      follow_index_created:
        type: boolean
      follow_index_shards_acked:
        type: boolean
      index_following_started:
        type: boolean
  FollowIndexReadException:
    type: object
    properties:
      from_squence_number:
        $ref: '#/definitions/long'
      retries:
        $ref: '#/definitions/integer'
      exception:
        $ref: '#/definitions/ErrorCause'
  FollowIndexShardStats:
    type: object
    properties:
      bytes_read:
        $ref: '#/definitions/long'
      failed_read_requests:
        $ref: '#/definitions/long'
      failed_write_requests:
        $ref: '#/definitions/long'
      follower_global_checkpoint:
        $ref: '#/definitions/long'
      follower_index:
        type: string
      follower_mapping_version:
        $ref: '#/definitions/long'
      follower_max_sequence_number:
        $ref: '#/definitions/long'
      follower_settings_version:
        $ref: '#/definitions/long'
      follower_aliases_version:
        $ref: '#/definitions/long'
      last_requested_sequence_number:
        $ref: '#/definitions/long'
      leader_global_checkpoint:
        $ref: '#/definitions/long'
      leader_index:
        type: string
      leader_max_sequence_number:
        $ref: '#/definitions/long'
      operations_read:
        $ref: '#/definitions/long'
      operations_written:
        $ref: '#/definitions/long'
      outstanding_read_requests:
        $ref: '#/definitions/integer'
      outstanding_write_request:
        $ref: '#/definitions/integer'
      remote_cluster:
        type: string
      shard_id:
        $ref: '#/definitions/integer'
      successful_read_requests:
        $ref: '#/definitions/long'
      successful_write_requests:
        $ref: '#/definitions/long'
      total_read_remote_execution_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_read_time_in_milliseconds:
        $ref: '#/definitions/long'
      total_write_time_in_milliseconds:
        $ref: '#/definitions/long'
      write_buffer_operation_count:
        $ref: '#/definitions/long'
      write_buffer_size_in_bytes:
        $ref: '#/definitions/long'
      read_exceptions:
        type: array
        items:
          $ref: '#/definitions/FollowIndexReadException'
      time_since_last_read_in_milliseconds:
        $ref: '#/definitions/long'
      fatal_exception:
        $ref: '#/definitions/ErrorCause'
  FollowIndexStats:
    type: object
    properties:
      index:
        type: string
      shards:
        type: array
        items:
          $ref: '#/definitions/FollowIndexShardStats'
  FollowIndexStatsRequest:
    type: object
    properties: {}
  FollowIndexStatsResponse:
    type: object
    properties:
      indices:
        type: array
        items:
          $ref: '#/definitions/FollowIndexStats'
  FollowConfig:
    type: object
    properties:
      maximum_read_request_operation_count:
        $ref: '#/definitions/integer'
      maximum_read_request_size:
        type: string
      maximum_outstanding_read_requests:
        $ref: '#/definitions/integer'
      maximum_write_request_operation_count:
        $ref: '#/definitions/integer'
      maximum_write_request_size:
        type: string
      maximum_outstanding_write_requests:
        $ref: '#/definitions/integer'
      maximum_write_buffer_count:
        $ref: '#/definitions/integer'
      maximum_write_buffer_size:
        type: string
      maximum_retry_delay:
        $ref: '#/definitions/Time'
      read_poll_timeout:
        $ref: '#/definitions/Time'
  FollowInfoRequest:
    type: object
    properties: {}
  FollowInfoResponse:
    type: object
    properties:
      follower_indices:
        type: array
        items:
          $ref: '#/definitions/FollowerInfo'
  FollowerInfo:
    type: object
    properties:
      follower_index:
        type: string
      remote_cluster:
        type: string
      leader_index:
        type: string
      status:
        $ref: '#/definitions/FollowerIndexStatus'
      parameters:
        $ref: '#/definitions/FollowConfig'
  ForgetFollowerIndexRequest:
    type: object
    properties:
      follower_cluster:
        type: string
      follower_index:
        $ref: '#/definitions/IndexName'
      follower_index_u_u_i_d:
        type: string
      leader_remote_cluster:
        type: string
  ForgetFollowerIndexResponse:
    type: object
    properties:
      shards:
        $ref: '#/definitions/ShardStatistics'
  PauseFollowIndexRequest:
    type: object
    properties: {}
  PauseFollowIndexResponse:
    type: object
    properties: {}
  ResumeFollowIndexRequest:
    type: object
    properties:
      max_read_request_operation_count:
        $ref: '#/definitions/long'
      max_outstanding_read_requests:
        $ref: '#/definitions/long'
      max_request_size:
        type: string
      max_write_request_operation_count:
        $ref: '#/definitions/long'
      max_write_request_size:
        type: string
      max_outstanding_write_requests:
        $ref: '#/definitions/long'
      max_write_buffer_count:
        $ref: '#/definitions/long'
      max_write_buffer_size:
        type: string
      max_retry_delay:
        $ref: '#/definitions/Time'
      read_poll_timeout:
        $ref: '#/definitions/Time'
  ResumeFollowIndexResponse:
    type: object
    properties: {}
  UnfollowIndexRequest:
    type: object
    properties: {}
  UnfollowIndexResponse:
    type: object
    properties: {}
  AutoFollowedCluster:
    type: object
    properties:
      cluster_name:
        type: string
      time_since_last_check:
        $ref: '#/definitions/Date'
      last_seen_metadata_version:
        $ref: '#/definitions/long'
  CcrAutoFollowStats:
    type: object
    properties:
      number_of_failed_follow_indices:
        $ref: '#/definitions/long'
      number_of_failed_remote_cluster_state_requests:
        $ref: '#/definitions/long'
      number_of_successful_follow_indices:
        $ref: '#/definitions/long'
      recent_auto_follow_errors:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
      auto_followed_clusters:
        type: array
        items:
          $ref: '#/definitions/AutoFollowedCluster'
  CcrFollowStats:
    type: object
    properties:
      indices:
        type: array
        items:
          $ref: '#/definitions/FollowIndexStats'
  CcrStatsRequest:
    type: object
    properties: {}
  CcrStatsResponse:
    type: object
    properties:
      auto_follow_stats:
        $ref: '#/definitions/CcrAutoFollowStats'
      follow_stats:
        $ref: '#/definitions/CcrFollowStats'
  GraphExploreRequest:
    type: object
    properties:
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      connections:
        $ref: '#/definitions/Hop'
      controls:
        $ref: '#/definitions/GraphExploreControls'
      query:
        $ref: '#/definitions/QueryContainer'
      vertices:
        type: array
        items:
          $ref: '#/definitions/GraphVertexDefinition'
  GraphExploreResponse:
    type: object
    properties:
      connections:
        type: array
        items:
          $ref: '#/definitions/GraphConnection'
      failures:
        type: array
        items:
          $ref: '#/definitions/ShardFailure'
      timed_out:
        type: boolean
      took:
        $ref: '#/definitions/long'
      vertices:
        type: array
        items:
          $ref: '#/definitions/GraphVertex'
  GraphExploreControls:
    type: object
    properties:
      sample_diversity:
        $ref: '#/definitions/SampleDiversity'
      sample_size:
        $ref: '#/definitions/integer'
      timeout:
        $ref: '#/definitions/Time'
      use_significance:
        type: boolean
  GraphVertexDefinition:
    type: object
    properties:
      exclude:
        type: array
        items:
          type: string
      field:
        $ref: '#/definitions/Field'
      include:
        type: array
        items:
          $ref: '#/definitions/GraphVertexInclude'
      minimum_document_count:
        $ref: '#/definitions/long'
      shard_minimum_document_count:
        $ref: '#/definitions/long'
      size:
        $ref: '#/definitions/integer'
  GraphVertexInclude:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      term:
        type: string
  Hop:
    type: object
    properties:
      connections:
        $ref: '#/definitions/Hop'
      query:
        $ref: '#/definitions/QueryContainer'
      vertices:
        type: array
        items:
          $ref: '#/definitions/GraphVertexDefinition'
  SampleDiversity:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      max_documents_per_value:
        $ref: '#/definitions/integer'
  GraphConnection:
    type: object
    properties:
      document_count:
        $ref: '#/definitions/long'
      source:
        $ref: '#/definitions/long'
      target:
        $ref: '#/definitions/long'
      weight:
        $ref: '#/definitions/double'
  GraphVertex:
    type: object
    properties:
      depth:
        $ref: '#/definitions/long'
      field:
        type: string
      term:
        type: string
      weight:
        $ref: '#/definitions/double'
  Phase:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/LifecycleAction'
      minimum_age:
        $ref: '#/definitions/Time'
  Phases:
    type: object
    properties:
      cold:
        $ref: '#/definitions/Phase'
      delete:
        $ref: '#/definitions/Phase'
      hot:
        $ref: '#/definitions/Phase'
      warm:
        $ref: '#/definitions/Phase'
  Policy:
    type: object
    properties:
      phases:
        $ref: '#/definitions/Phases'
  LifecycleAction:
    type: object
    properties: {}
  DeleteLifecycleRequest:
    type: object
    properties: {}
  DeleteLifecycleResponse:
    type: object
    properties: {}
  ExplainLifecycleRequest:
    type: object
    properties:
      only_errors:
        type: boolean
      only_managed:
        type: boolean
  ExplainLifecycleResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/LifecycleExplain'
  LifecycleExplain:
    type: object
    properties:
      action:
        type: string
      action_time:
        $ref: '#/definitions/Date'
      failed_step:
        type: string
      index:
        $ref: '#/definitions/IndexName'
      lifecycle_date:
        $ref: '#/definitions/Date'
      managed:
        type: boolean
      phase:
        type: string
      phase_time:
        $ref: '#/definitions/Date'
      policy:
        type: string
      step:
        type: string
      step_info:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      step_time:
        $ref: '#/definitions/Date'
      age:
        $ref: '#/definitions/Time'
  GetLifecycleRequest:
    type: object
    properties: {}
  GetLifecycleResponse:
    type: object
    properties:
      policies:
        type: object
        additionalProperties:
          $ref: '#/definitions/LifecyclePolicy'
  LifecyclePolicy:
    type: object
    properties:
      modified_date:
        $ref: '#/definitions/Date'
      policy:
        $ref: '#/definitions/Policy'
      version:
        $ref: '#/definitions/integer'
  GetIlmStatusRequest:
    type: object
    properties: {}
  GetIlmStatusResponse:
    type: object
    properties:
      operation_mode:
        $ref: '#/definitions/LifecycleOperationMode'
  MoveToStepRequest:
    type: object
    properties:
      current_step:
        $ref: '#/definitions/StepKey'
      next_step:
        $ref: '#/definitions/StepKey'
  MoveToStepResponse:
    type: object
    properties: {}
  StepKey:
    type: object
    properties:
      action:
        type: string
      name:
        type: string
      phase:
        type: string
  PutLifecycleRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/Policy'
  PutLifecycleResponse:
    type: object
    properties: {}
  RemovePolicyRequest:
    type: object
    properties: {}
  RemovePolicyResponse:
    type: object
    properties:
      failed_indexes:
        type: array
        items:
          type: string
      has_failures:
        type: boolean
  RetryIlmRequest:
    type: object
    properties: {}
  RetryIlmResponse:
    type: object
    properties: {}
  StartIlmRequest:
    type: object
    properties: {}
  StartIlmResponse:
    type: object
    properties: {}
  StopIlmRequest:
    type: object
    properties: {}
  StopIlmResponse:
    type: object
    properties: {}
  MinimalLicenseInformation:
    type: object
    properties:
      expiry_date_in_milliseconds:
        $ref: '#/definitions/long'
      mode:
        $ref: '#/definitions/LicenseType'
      status:
        $ref: '#/definitions/LicenseStatus'
      type:
        $ref: '#/definitions/LicenseType'
      u_i_d:
        type: string
  NativeCodeInformation:
    type: object
    properties:
      build_hash:
        type: string
      version:
        type: string
  XPackBuildInformation:
    type: object
    properties:
      date:
        $ref: '#/definitions/Date'
      hash:
        type: string
  XPackFeature:
    type: object
    properties:
      available:
        type: boolean
      description:
        type: string
      enabled:
        type: boolean
      native_code_information:
        $ref: '#/definitions/NativeCodeInformation'
  XPackFeatures:
    type: object
    properties:
      ccr:
        $ref: '#/definitions/XPackFeature'
      data_frame:
        $ref: '#/definitions/XPackFeature'
      flattened:
        $ref: '#/definitions/XPackFeature'
      data_science:
        $ref: '#/definitions/XPackFeature'
      graph:
        $ref: '#/definitions/XPackFeature'
      ilm:
        $ref: '#/definitions/XPackFeature'
      logstash:
        $ref: '#/definitions/XPackFeature'
      machine_learning:
        $ref: '#/definitions/XPackFeature'
      monitoring:
        $ref: '#/definitions/XPackFeature'
      rollup:
        $ref: '#/definitions/XPackFeature'
      security:
        $ref: '#/definitions/XPackFeature'
      sql:
        $ref: '#/definitions/XPackFeature'
      vectors:
        $ref: '#/definitions/XPackFeature'
      watcher:
        $ref: '#/definitions/XPackFeature'
  XPackInfoRequest:
    type: object
    properties:
      categories:
        type: array
        items:
          type: string
  XPackInfoResponse:
    type: object
    properties:
      build:
        $ref: '#/definitions/XPackBuildInformation'
      features:
        $ref: '#/definitions/XPackFeatures'
      license:
        $ref: '#/definitions/MinimalLicenseInformation'
      tagline:
        type: string
  AlertingCount:
    type: object
    properties:
      active:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  AlertingExecution:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/ExecutionAction'
  AlertingInput:
    type: object
    properties:
      input:
        type: object
        additionalProperties:
          $ref: '#/definitions/AlertingCount'
      trigger:
        type: object
        additionalProperties:
          $ref: '#/definitions/AlertingCount'
  AlertingUsage:
    type: object
    properties:
      count:
        $ref: '#/definitions/AlertingCount'
      execution:
        $ref: '#/definitions/AlertingExecution'
      watch:
        $ref: '#/definitions/AlertingInput'
  AuditUsage:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: string
  CcrUsage:
    type: object
    properties:
      auto_follow_patterns_count:
        $ref: '#/definitions/integer'
      follower_indices_count:
        $ref: '#/definitions/integer'
  DataFeed:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
  ExecutionAction:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      total_in_milliseconds:
        $ref: '#/definitions/long'
  ForecastStatistics:
    type: object
    properties:
      jobs:
        $ref: '#/definitions/long'
      memory_bytes:
        $ref: '#/definitions/JobStatistics'
      processing_time_milliseconds:
        $ref: '#/definitions/JobStatistics'
      records:
        $ref: '#/definitions/JobStatistics'
      status:
        type: object
        additionalProperties:
          $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  IlmPolicyStatistics:
    type: object
    properties:
      phases:
        $ref: '#/definitions/Phases'
      indices_managed:
        $ref: '#/definitions/integer'
  IlmUsage:
    type: object
    properties:
      policy_count:
        $ref: '#/definitions/integer'
      policy_statistics:
        type: array
        items:
          $ref: '#/definitions/IlmPolicyStatistics'
  IpFilterUsage:
    type: object
    properties:
      http:
        type: boolean
      transport:
        type: boolean
  Job:
    type: object
    properties:
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      background_persist_interval:
        $ref: '#/definitions/Time'
      create_time:
        $ref: '#/definitions/Date'
      data_description:
        $ref: '#/definitions/DataDescription'
      description:
        type: string
      finished_time:
        $ref: '#/definitions/Date'
      job_id:
        type: string
      job_type:
        type: string
      model_plot_config:
        $ref: '#/definitions/ModelPlotConfig'
      model_snapshot_id:
        type: string
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      renormalization_window_days:
        $ref: '#/definitions/long'
      results_index_name:
        type: string
      results_retention_days:
        $ref: '#/definitions/long'
  JobStatistics:
    type: object
    properties:
      average:
        $ref: '#/definitions/double'
      maximum:
        $ref: '#/definitions/double'
      minimum:
        $ref: '#/definitions/double'
      total:
        $ref: '#/definitions/double'
  MachineLearningUsage:
    type: object
    properties:
      node_count:
        $ref: '#/definitions/integer'
      datafeeds:
        type: object
        additionalProperties:
          $ref: '#/definitions/DataFeed'
      jobs:
        type: object
        additionalProperties:
          $ref: '#/definitions/Job'
  MonitoringUsage:
    type: object
    properties:
      collection_enabled:
        type: boolean
      enabled_exporters:
        type: object
        additionalProperties:
          $ref: '#/definitions/long'
  QueryUsage:
    type: object
    properties:
      total:
        $ref: '#/definitions/integer'
      paging:
        $ref: '#/definitions/integer'
      failed:
        $ref: '#/definitions/integer'
      count:
        $ref: '#/definitions/integer'
  RealmUsage:
    type: object
    properties:
      name:
        type: array
        items:
          type: string
      order:
        type: array
        items:
          $ref: '#/definitions/long'
      size:
        type: array
        items:
          $ref: '#/definitions/long'
  RoleMappingUsage:
    type: object
    properties:
      enabled:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  RoleUsage:
    type: object
    properties:
      dls:
        type: boolean
      fls:
        type: boolean
      size:
        $ref: '#/definitions/long'
  SecurityFeatureToggle:
    type: object
    properties:
      enabled:
        type: boolean
  SecurityUsage:
    type: object
    properties:
      anonymous:
        $ref: '#/definitions/SecurityFeatureToggle'
      audit:
        $ref: '#/definitions/AuditUsage'
      ip_filter:
        $ref: '#/definitions/IpFilterUsage'
      realms:
        type: object
        additionalProperties:
          $ref: '#/definitions/RealmUsage'
      role_mapping:
        type: object
        additionalProperties:
          $ref: '#/definitions/RoleMappingUsage'
      roles:
        type: object
        additionalProperties:
          $ref: '#/definitions/RoleUsage'
      ssl:
        $ref: '#/definitions/SslUsage'
      system_key:
        $ref: '#/definitions/SecurityFeatureToggle'
  SqlUsage:
    type: object
    properties:
      features:
        type: object
        additionalProperties:
          $ref: '#/definitions/integer'
      queries:
        type: object
        additionalProperties:
          $ref: '#/definitions/QueryUsage'
  SslUsage:
    type: object
    properties:
      http:
        $ref: '#/definitions/SecurityFeatureToggle'
      transport:
        $ref: '#/definitions/SecurityFeatureToggle'
  VectorUsage:
    type: object
    properties:
      dense_vector_fields_count:
        $ref: '#/definitions/integer'
      sparse_vector_fields_count:
        $ref: '#/definitions/integer'
      dense_vector_dimensions_average_count:
        $ref: '#/definitions/integer'
  XPackUsage:
    type: object
    properties:
      available:
        type: boolean
      enabled:
        type: boolean
  XPackUsageRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  XPackUsageResponse:
    type: object
    properties:
      sql:
        $ref: '#/definitions/SqlUsage'
      rollup:
        $ref: '#/definitions/XPackUsage'
      data_frame:
        $ref: '#/definitions/XPackUsage'
      flattened:
        $ref: '#/definitions/XPackUsage'
      data_science:
        $ref: '#/definitions/XPackUsage'
      index_lifecycle_management:
        $ref: '#/definitions/IlmUsage'
      ccr:
        $ref: '#/definitions/CcrUsage'
      alerting:
        $ref: '#/definitions/AlertingUsage'
      graph:
        $ref: '#/definitions/XPackUsage'
      logstash:
        $ref: '#/definitions/XPackUsage'
      machine_learning:
        $ref: '#/definitions/MachineLearningUsage'
      monitoring:
        $ref: '#/definitions/MonitoringUsage'
      security:
        $ref: '#/definitions/SecurityUsage'
      vectors:
        $ref: '#/definitions/VectorUsage'
      voting_only:
        $ref: '#/definitions/XPackUsage'
  DeleteLicenseRequest:
    type: object
    properties: {}
  DeleteLicenseResponse:
    type: object
    properties: {}
  GetBasicLicenseStatusRequest:
    type: object
    properties: {}
  GetBasicLicenseStatusResponse:
    type: object
    properties:
      eligable_to_start_basic:
        type: boolean
  GetLicenseRequest:
    type: object
    properties:
      local:
        type: boolean
  GetLicenseResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      license:
        $ref: '#/definitions/LicenseInformation'
  License:
    type: object
    properties:
      expiry_date_in_milliseconds:
        $ref: '#/definitions/long'
      issue_date_in_milliseconds:
        $ref: '#/definitions/long'
      issued_to:
        type: string
      issuer:
        type: string
      max_nodes:
        $ref: '#/definitions/long'
      signature:
        type: string
      type:
        $ref: '#/definitions/LicenseType'
      u_i_d:
        type: string
  LicenseInformation:
    type: object
    properties:
      expiry_date:
        $ref: '#/definitions/Date'
      expiry_date_in_milliseconds:
        $ref: '#/definitions/long'
      issue_date:
        $ref: '#/definitions/Date'
      issue_date_in_milliseconds:
        $ref: '#/definitions/long'
      issued_to:
        type: string
      issuer:
        type: string
      max_nodes:
        $ref: '#/definitions/long'
      status:
        $ref: '#/definitions/LicenseStatus'
      type:
        $ref: '#/definitions/LicenseType'
      u_i_d:
        type: string
  GetTrialLicenseStatusRequest:
    type: object
    properties: {}
  GetTrialLicenseStatusResponse:
    type: object
    properties:
      eligible_to_start_trial:
        type: boolean
  LicenseAcknowledgement:
    type: object
    properties:
      license:
        type: array
        items:
          type: string
      message:
        type: string
  PostLicenseRequest:
    type: object
    properties:
      acknowledge:
        type: boolean
      license:
        $ref: '#/definitions/License'
  PostLicenseResponse:
    type: object
    properties:
      acknowledge:
        $ref: '#/definitions/LicenseAcknowledgement'
      acknowledged:
        type: boolean
      license_status:
        $ref: '#/definitions/LicenseStatus'
  StartBasicLicenseRequest:
    type: object
    properties:
      acknowledge:
        type: boolean
  StartBasicLicenseResponse:
    type: object
    properties:
      acknowledge:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
      basic_was_started:
        type: boolean
      error_message:
        type: string
  StartTrialLicenseRequest:
    type: object
    properties:
      acknowledge:
        type: boolean
      type_query_string:
        type: string
  StartTrialLicenseResponse:
    type: object
    properties:
      error_message:
        type: string
      trial_was_started:
        type: boolean
  CloseJobRequest:
    type: object
    properties:
      allow_no_jobs:
        type: boolean
      force:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  CloseJobResponse:
    type: object
    properties:
      closed:
        type: boolean
  ChunkingConfig:
    type: object
    properties:
      mode:
        $ref: '#/definitions/ChunkingMode'
      time_span:
        $ref: '#/definitions/Time'
  DatafeedConfig:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      datafeed_id:
        type: string
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        type: string
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
  DatafeedStats:
    type: object
    properties:
      assignment_explanation:
        type: string
      datafeed_id:
        type: string
      node:
        $ref: '#/definitions/DiscoveryNode'
      state:
        $ref: '#/definitions/DatafeedState'
      timing_stats:
        $ref: '#/definitions/DatafeedTimingStats'
  DatafeedTimingStats:
    type: object
    properties:
      bucket_count:
        $ref: '#/definitions/long'
      exponential_average_search_time_per_hour_milliseconds:
        $ref: '#/definitions/double'
      job_id:
        type: string
      search_count:
        $ref: '#/definitions/long'
      total_search_time_milliseconds:
        $ref: '#/definitions/double'
  DiscoveryNode:
    type: object
    properties:
      attributes:
        type: object
        additionalProperties:
          type: string
      ephemeral_id:
        type: string
      id:
        type: string
      name:
        type: string
      transport_address:
        type: string
  DeleteCalendarRequest:
    type: object
    properties: {}
  DeleteCalendarResponse:
    type: object
    properties: {}
  DeleteCalendarEventRequest:
    type: object
    properties: {}
  DeleteCalendarEventResponse:
    type: object
    properties: {}
  DeleteCalendarJobRequest:
    type: object
    properties: {}
  DeleteCalendarJobResponse:
    type: object
    properties:
      calendar_id:
        type: string
      description:
        type: string
      job_ids:
        type: array
        items:
          $ref: '#/definitions/Id'
  DeleteDatafeedRequest:
    type: object
    properties:
      force:
        type: boolean
  DeleteDatafeedResponse:
    type: object
    properties: {}
  DeleteExpiredDataRequest:
    type: object
    properties: {}
  DeleteExpiredDataResponse:
    type: object
    properties:
      deleted:
        type: boolean
  DeleteFilterRequest:
    type: object
    properties: {}
  DeleteFilterResponse:
    type: object
    properties: {}
  DeleteForecastRequest:
    type: object
    properties:
      allow_no_forecasts:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  DeleteForecastResponse:
    type: object
    properties: {}
  DeleteJobRequest:
    type: object
    properties:
      force:
        type: boolean
      wait_for_completion:
        type: boolean
  DeleteJobResponse:
    type: object
    properties: {}
  DeleteModelSnapshotRequest:
    type: object
    properties: {}
  DeleteModelSnapshotResponse:
    type: object
    properties: {}
  FlushJobRequest:
    type: object
    properties:
      skip_time:
        type: string
      advance_time:
        $ref: '#/definitions/Date'
      calculate_interim:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      start:
        $ref: '#/definitions/Date'
  FlushJobResponse:
    type: object
    properties:
      flushed:
        type: boolean
  ForecastJobRequest:
    type: object
    properties:
      duration:
        $ref: '#/definitions/Time'
      expires_in:
        $ref: '#/definitions/Time'
  ForecastJobResponse:
    type: object
    properties:
      forecast_id:
        type: string
  GetAnomalyRecordsRequest:
    type: object
    properties:
      descending:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      exclude_interim:
        type: boolean
      page:
        $ref: '#/definitions/Page'
      record_score:
        $ref: '#/definitions/double'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
  GetAnomalyRecordsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      records:
        type: array
        items:
          $ref: '#/definitions/AnomalyRecord'
  GetBucketsRequest:
    type: object
    properties:
      anomaly_score:
        $ref: '#/definitions/double'
      descending:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      exclude_interim:
        type: boolean
      expand:
        type: boolean
      page:
        $ref: '#/definitions/Page'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
  GetBucketsResponse:
    type: object
    properties:
      buckets:
        type: array
        items:
          $ref: '#/definitions/Bucket'
      count:
        $ref: '#/definitions/long'
  GetCalendarEventsRequest:
    type: object
    properties:
      end:
        $ref: '#/definitions/Date'
      job_id:
        type: string
      start:
        type: string
      from:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  GetCalendarEventsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/integer'
      events:
        type: array
        items:
          $ref: '#/definitions/ScheduledEvent'
  Calendar:
    type: object
    properties:
      calendar_id:
        type: string
      job_ids:
        type: array
        items:
          type: string
      description:
        type: string
  GetCalendarsRequest:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
  GetCalendarsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      calendars:
        type: array
        items:
          $ref: '#/definitions/Calendar'
  GetCategoriesRequest:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
  GetCategoriesResponse:
    type: object
    properties:
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryDefinition'
      count:
        $ref: '#/definitions/long'
  GetDatafeedStatsRequest:
    type: object
    properties:
      allow_no_datafeeds:
        type: boolean
  GetDatafeedStatsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      datafeeds:
        type: array
        items:
          $ref: '#/definitions/DatafeedStats'
  GetDatafeedsRequest:
    type: object
    properties:
      allow_no_datafeeds:
        type: boolean
  GetDatafeedsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      datafeeds:
        type: array
        items:
          $ref: '#/definitions/DatafeedConfig'
  Filter:
    type: object
    properties:
      description:
        type: string
      filter_id:
        type: string
      items:
        type: array
        items:
          type: string
  GetFiltersRequest:
    type: object
    properties:
      from:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  GetFiltersResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      filters:
        type: array
        items:
          $ref: '#/definitions/Filter'
  GetInfluencersRequest:
    type: object
    properties:
      descending:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      exclude_interim:
        type: boolean
      influencer_score:
        $ref: '#/definitions/double'
      page:
        $ref: '#/definitions/Page'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
  GetInfluencersResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      influencers:
        type: array
        items:
          $ref: '#/definitions/BucketInfluencer'
  GetJobStatsRequest:
    type: object
    properties:
      allow_no_jobs:
        type: boolean
  GetJobStatsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      jobs:
        type: array
        items:
          $ref: '#/definitions/JobStats'
  GetJobsRequest:
    type: object
    properties:
      allow_no_jobs:
        type: boolean
  GetJobsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      jobs:
        type: array
        items:
          $ref: '#/definitions/Job'
  GetModelSnapshotsRequest:
    type: object
    properties:
      descending:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      page:
        $ref: '#/definitions/Page'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
  GetModelSnapshotsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      model_snapshots:
        type: array
        items:
          $ref: '#/definitions/ModelSnapshot'
  GetOverallBucketsRequest:
    type: object
    properties:
      allow_no_jobs:
        type: boolean
      bucket_span:
        $ref: '#/definitions/Time'
      end:
        $ref: '#/definitions/Date'
      exclude_interim:
        type: boolean
      overall_score:
        $ref: '#/definitions/double'
      start:
        $ref: '#/definitions/Date'
      top_n:
        $ref: '#/definitions/integer'
  GetOverallBucketsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      overall_buckets:
        type: array
        items:
          $ref: '#/definitions/OverallBucket'
  Page:
    type: object
    properties:
      from:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  AnalysisConfig:
    type: object
    properties:
      bucket_span:
        $ref: '#/definitions/Time'
      categorization_field_name:
        $ref: '#/definitions/Field'
      categorization_filters:
        type: array
        items:
          type: string
      detectors:
        type: array
        items:
          $ref: '#/definitions/Detector'
      influencers:
        type: array
        items:
          $ref: '#/definitions/Field'
      latency:
        $ref: '#/definitions/Time'
      multivariate_by_fields:
        type: boolean
      summary_count_field_name:
        $ref: '#/definitions/Field'
  AnalysisLimits:
    type: object
    properties:
      categorization_examples_limit:
        $ref: '#/definitions/long'
      model_memory_limit:
        type: string
  AnalysisMemoryLimit:
    type: object
    properties:
      model_memory_limit:
        type: string
  DataDescription:
    type: object
    properties:
      format:
        type: string
      time_field:
        $ref: '#/definitions/Field'
      time_format:
        type: string
  JobForecastStatistics:
    type: object
    properties:
      memory_bytes:
        $ref: '#/definitions/JobStatistics'
      processing_time_milliseconds:
        $ref: '#/definitions/JobStatistics'
      records:
        $ref: '#/definitions/JobStatistics'
      status:
        type: object
        additionalProperties:
          $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  JobStats:
    type: object
    properties:
      assignment_explanation:
        type: string
      data_counts:
        $ref: '#/definitions/DataCounts'
      forecasts:
        $ref: '#/definitions/JobForecastStatistics'
      job_id:
        type: string
      model_size_stats:
        $ref: '#/definitions/ModelSizeStats'
      node:
        $ref: '#/definitions/DiscoveryNode'
      open_time:
        $ref: '#/definitions/Time'
      state:
        $ref: '#/definitions/JobState'
      timing_stats:
        $ref: '#/definitions/TimingStats'
  ModelPlotConfig:
    type: object
    properties:
      terms:
        type: array
        items:
          $ref: '#/definitions/Field'
  ModelPlotConfigEnabled:
    type: object
    properties:
      enabled:
        type: boolean
  TimingStats:
    type: object
    properties:
      job_id:
        type: string
      bucket_count:
        $ref: '#/definitions/long'
      minimum_bucket_processing_time_milliseconds:
        $ref: '#/definitions/double'
      maximum_bucket_processing_time_milliseconds:
        $ref: '#/definitions/double'
      average_bucket_processing_time_milliseconds:
        $ref: '#/definitions/double'
      exponential_average_bucket_processing_time_milliseconds:
        $ref: '#/definitions/double'
      exponential_average_bucket_processing_time_per_hour_milliseconds:
        $ref: '#/definitions/double'
  DetectionRule:
    type: object
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/RuleAction'
      conditions:
        type: array
        items:
          $ref: '#/definitions/RuleCondition'
      scope:
        type: object
        additionalProperties:
          $ref: '#/definitions/FilterRef'
  Detector:
    type: object
    properties:
      custom_rules:
        type: array
        items:
          $ref: '#/definitions/DetectionRule'
      detector_description:
        type: string
      detector_index:
        $ref: '#/definitions/integer'
      exclude_frequent:
        $ref: '#/definitions/ExcludeFrequent'
      function:
        type: string
      use_null:
        type: boolean
  FilterRef:
    type: object
    properties:
      filter_id:
        $ref: '#/definitions/Id'
      filter_type:
        $ref: '#/definitions/RuleFilterType'
  RuleCondition:
    type: object
    properties:
      applies_to:
        $ref: '#/definitions/AppliesTo'
      operator:
        $ref: '#/definitions/ConditionOperator'
      value:
        $ref: '#/definitions/double'
  DataCounts:
    type: object
    properties:
      bucket_count:
        $ref: '#/definitions/long'
      earliest_record_timestamp:
        $ref: '#/definitions/Date'
      empty_bucket_count:
        $ref: '#/definitions/long'
      input_bytes:
        $ref: '#/definitions/long'
      input_field_count:
        $ref: '#/definitions/long'
      input_record_count:
        $ref: '#/definitions/long'
      invalid_date_count:
        $ref: '#/definitions/long'
      job_id:
        type: string
      last_data_time:
        $ref: '#/definitions/Date'
      latest_empty_bucket_timestamp:
        $ref: '#/definitions/Date'
      latest_record_timestamp:
        $ref: '#/definitions/Date'
      latest_sparse_bucket_timestamp:
        $ref: '#/definitions/Date'
      missing_field_count:
        $ref: '#/definitions/long'
      out_of_order_timestamp_count:
        $ref: '#/definitions/long'
      processed_field_count:
        $ref: '#/definitions/long'
      processed_record_count:
        $ref: '#/definitions/long'
      sparse_bucket_count:
        $ref: '#/definitions/long'
  ModelSizeStats:
    type: object
    properties:
      bucket_allocation_failures_count:
        $ref: '#/definitions/long'
      job_id:
        type: string
      log_time:
        $ref: '#/definitions/Date'
      memory_status:
        $ref: '#/definitions/MemoryStatus'
      model_bytes:
        $ref: '#/definitions/long'
      result_type:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
      total_by_field_count:
        $ref: '#/definitions/long'
      total_over_field_count:
        $ref: '#/definitions/long'
      total_partition_field_count:
        $ref: '#/definitions/long'
  ModelSnapshot:
    type: object
    properties:
      description:
        type: string
      job_id:
        type: string
      latest_record_time_stamp:
        $ref: '#/definitions/Date'
      latest_result_time_stamp:
        $ref: '#/definitions/Date'
      model_size_stats:
        $ref: '#/definitions/ModelSizeStats'
      retain:
        type: boolean
      snapshot_doc_count:
        $ref: '#/definitions/long'
      snapshot_id:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
  AnomalyCause:
    type: object
    properties:
      actual:
        type: array
        items:
          $ref: '#/definitions/double'
      by_field_name:
        type: string
      by_field_value:
        type: string
      correlated_by_field_value:
        type: string
      field_name:
        type: string
      function:
        type: string
      function_description:
        type: string
      influencers:
        type: array
        items:
          $ref: '#/definitions/Influence'
      over_field_name:
        type: string
      over_field_value:
        type: string
      partition_field_name:
        type: string
      partition_field_value:
        type: string
      probability:
        $ref: '#/definitions/double'
      typical:
        type: array
        items:
          $ref: '#/definitions/double'
  AnomalyRecord:
    type: object
    properties:
      actual:
        type: array
        items:
          $ref: '#/definitions/double'
      bucket_span:
        $ref: '#/definitions/Time'
      by_field_name:
        type: string
      by_field_value:
        type: string
      causes:
        type: array
        items:
          $ref: '#/definitions/AnomalyCause'
      detector_index:
        $ref: '#/definitions/integer'
      field_name:
        type: string
      function:
        type: string
      function_description:
        type: string
      influencers:
        type: array
        items:
          $ref: '#/definitions/Influence'
      initial_record_score:
        $ref: '#/definitions/double'
      is_interim:
        type: boolean
      job_id:
        type: string
      over_field_name:
        type: string
      over_field_value:
        type: string
      partition_field_name:
        type: string
      partition_field_value:
        type: string
      probability:
        $ref: '#/definitions/double'
      record_score:
        $ref: '#/definitions/double'
      result_type:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
      typical:
        type: array
        items:
          $ref: '#/definitions/double'
  Bucket:
    type: object
    properties:
      anomaly_score:
        $ref: '#/definitions/double'
      bucket_influencers:
        type: array
        items:
          $ref: '#/definitions/BucketInfluencer'
      bucket_span:
        $ref: '#/definitions/Time'
      event_count:
        $ref: '#/definitions/long'
      initial_anomaly_score:
        $ref: '#/definitions/double'
      is_interim:
        type: boolean
      job_id:
        type: string
      partition_scores:
        type: array
        items:
          $ref: '#/definitions/PartitionScore'
      processing_time_milliseconds:
        $ref: '#/definitions/double'
      result_type:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
  BucketInfluencer:
    type: object
    properties:
      bucket_span:
        $ref: '#/definitions/long'
      influencer_field_name:
        type: string
      influencer_field_value:
        type: string
      influencer_score:
        $ref: '#/definitions/double'
      initial_influencer_score:
        $ref: '#/definitions/double'
      is_interim:
        type: boolean
      job_id:
        type: string
      probability:
        $ref: '#/definitions/double'
      result_type:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
  CategoryDefinition:
    type: object
    properties:
      category_id:
        $ref: '#/definitions/long'
      examples:
        type: array
        items:
          type: string
      job_id:
        type: string
      max_matching_length:
        $ref: '#/definitions/long'
      regex:
        type: string
      terms:
        type: string
  Influence:
    type: object
    properties:
      influencer_field_name:
        type: string
      influencer_field_values:
        type: array
        items:
          type: string
  OverallBucket:
    type: object
    properties:
      bucket_span:
        $ref: '#/definitions/long'
      is_interim:
        type: boolean
      jobs:
        type: array
        items:
          $ref: '#/definitions/OverallBucketJobInfo'
      overall_score:
        $ref: '#/definitions/double'
      result_type:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
  OverallBucketJobInfo:
    type: object
    properties:
      job_id:
        type: string
      max_anomaly_score:
        $ref: '#/definitions/double'
  PartitionScore:
    type: object
    properties:
      initial_record_score:
        $ref: '#/definitions/double'
      partition_field_name:
        type: string
      partition_field_value:
        type: string
      probability:
        $ref: '#/definitions/double'
      record_score:
        $ref: '#/definitions/double'
  AnomalyDetectors:
    type: object
    properties:
      model_memory_limit:
        type: string
      categorization_examples_limit:
        $ref: '#/definitions/integer'
      model_snapshot_retention_days:
        $ref: '#/definitions/integer'
  Datafeeds:
    type: object
    properties:
      scroll_size:
        $ref: '#/definitions/integer'
  Defaults:
    type: object
    properties:
      anomaly_detectors:
        $ref: '#/definitions/AnomalyDetectors'
      datafeeds:
        $ref: '#/definitions/Datafeeds'
  Limits:
    type: object
    properties:
      max_model_memory_limit:
        type: string
  MachineLearningInfoRequest:
    type: object
    properties: {}
  MachineLearningInfoResponse:
    type: object
    properties:
      defaults:
        $ref: '#/definitions/Defaults'
      limits:
        $ref: '#/definitions/Limits'
      upgrade_mode:
        type: boolean
  OpenJobRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
  OpenJobResponse:
    type: object
    properties:
      opened:
        type: boolean
  PostCalendarEventsRequest:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/ScheduledEvent'
  PostCalendarEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/ScheduledEvent'
  ScheduledEvent:
    type: object
    properties:
      calendar_id:
        $ref: '#/definitions/Id'
      description:
        type: string
      start_time:
        $ref: '#/definitions/Date'
      end_time:
        $ref: '#/definitions/Date'
      event_id:
        $ref: '#/definitions/Id'
  PostJobDataRequest:
    type: object
    properties:
      reset_end:
        $ref: '#/definitions/Date'
      reset_start:
        $ref: '#/definitions/Date'
      data:
        type: array
        items:
          $ref: '#/definitions/object'
  PostJobDataResponse:
    type: object
    properties:
      bucket_count:
        $ref: '#/definitions/long'
      earliest_record_timestamp:
        $ref: '#/definitions/Date'
      empty_bucket_count:
        $ref: '#/definitions/long'
      input_bytes:
        $ref: '#/definitions/long'
      input_field_count:
        $ref: '#/definitions/long'
      input_record_count:
        $ref: '#/definitions/long'
      invalid_date_count:
        $ref: '#/definitions/long'
      job_id:
        type: string
      last_data_time:
        $ref: '#/definitions/Date'
      latest_record_timestamp:
        $ref: '#/definitions/Date'
      missing_field_count:
        $ref: '#/definitions/long'
      out_of_order_timestamp_count:
        $ref: '#/definitions/long'
      processed_field_count:
        $ref: '#/definitions/long'
      processed_record_count:
        $ref: '#/definitions/long'
      sparse_bucket_count:
        $ref: '#/definitions/long'
  PreviewDatafeedRequest:
    type: object
    properties: {}
  PreviewDatafeedResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TDocument'
  PutCalendarRequest:
    type: object
    properties:
      description:
        type: string
  PutCalendarResponse:
    type: object
    properties:
      calendar_id:
        type: string
      description:
        type: string
      job_ids:
        type: array
        items:
          type: string
  PutCalendarJobRequest:
    type: object
    properties: {}
  PutCalendarJobResponse:
    type: object
    properties:
      calendar_id:
        type: string
      description:
        type: string
      job_ids:
        type: array
        items:
          type: string
  PutDatafeedRequest:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        $ref: '#/definitions/Id'
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
  PutDatafeedResponse:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      datafeed_id:
        type: string
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        type: string
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
  PutFilterRequest:
    type: object
    properties:
      description:
        type: string
      items:
        type: array
        items:
          type: string
  PutFilterResponse:
    type: object
    properties:
      description:
        type: string
      filter_id:
        type: string
      items:
        type: array
        items:
          type: string
  PutJobRequest:
    type: object
    properties:
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      data_description:
        $ref: '#/definitions/DataDescription'
      description:
        type: string
      model_plot_config:
        $ref: '#/definitions/ModelPlotConfig'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      results_index_name:
        $ref: '#/definitions/IndexName'
  PutJobResponse:
    type: object
    properties:
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      background_persist_interval:
        $ref: '#/definitions/Time'
      create_time:
        $ref: '#/definitions/Date'
      data_description:
        $ref: '#/definitions/DataDescription'
      description:
        type: string
      job_id:
        type: string
      job_type:
        type: string
      model_plot_config:
        $ref: '#/definitions/ModelPlotConfig'
      model_snapshot_id:
        type: string
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      renormalization_window_days:
        $ref: '#/definitions/long'
      results_index_name:
        type: string
      results_retention_days:
        $ref: '#/definitions/long'
  RevertModelSnapshotRequest:
    type: object
    properties:
      delete_intervening_results:
        type: boolean
  RevertModelSnapshotResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/ModelSnapshot'
  StartDatafeedRequest:
    type: object
    properties:
      end:
        $ref: '#/definitions/Date'
      start:
        $ref: '#/definitions/Date'
      timeout:
        $ref: '#/definitions/Time'
  StartDatafeedResponse:
    type: object
    properties:
      started:
        type: boolean
  StopDatafeedRequest:
    type: object
    properties:
      allow_no_datafeeds:
        type: boolean
      force:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  StopDatafeedResponse:
    type: object
    properties:
      stopped:
        type: boolean
  UpdateDatafeedRequest:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        $ref: '#/definitions/Id'
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
  UpdateDatafeedResponse:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      datafeed_id:
        type: string
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        type: string
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
  UpdateFilterRequest:
    type: object
    properties:
      add_items:
        type: array
        items:
          type: string
      description:
        type: string
      remove_items:
        type: array
        items:
          type: string
  UpdateFilterResponse:
    type: object
    properties:
      description:
        type: string
      filter_id:
        type: string
      items:
        type: array
        items:
          type: string
  UpdateJobRequest:
    type: object
    properties:
      analysis_limits:
        $ref: '#/definitions/AnalysisMemoryLimit'
      background_persist_interval:
        $ref: '#/definitions/Time'
      custom_settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      description:
        type: string
      model_plot_config:
        $ref: '#/definitions/ModelPlotConfigEnabled'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      renormalization_window_days:
        $ref: '#/definitions/long'
      results_retention_days:
        $ref: '#/definitions/long'
  UpdateJobResponse:
    type: object
    properties: {}
  UpdateModelSnapshotRequest:
    type: object
    properties:
      description:
        type: string
      retain:
        type: boolean
  UpdateModelSnapshotResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/ModelSnapshot'
  ValidateDetectorRequest:
    type: object
    properties:
      detector:
        $ref: '#/definitions/Detector'
  ValidateDetectorResponse:
    type: object
    properties: {}
  ValidateJobRequest:
    type: object
    properties:
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      data_description:
        $ref: '#/definitions/DataDescription'
      description:
        type: string
      model_plot_config:
        $ref: '#/definitions/ModelPlotConfig'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      results_index_name:
        $ref: '#/definitions/IndexName'
  ValidateJobResponse:
    type: object
    properties: {}
  DeprecationInfo:
    type: object
    properties:
      details:
        type: string
      level:
        $ref: '#/definitions/DeprecationWarningLevel'
      message:
        type: string
      url:
        type: string
  DeprecationInfoRequest:
    type: object
    properties: {}
  DeprecationInfoResponse:
    type: object
    properties:
      cluster_settings:
        type: array
        items:
          $ref: '#/definitions/DeprecationInfo'
      index_settings:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/DeprecationInfo'
      node_settings:
        type: array
        items:
          $ref: '#/definitions/DeprecationInfo'
  CreateRollupJobRequest:
    type: object
    properties:
      cron:
        type: string
      groups:
        $ref: '#/definitions/RollupGroupings'
      index_pattern:
        type: string
      metrics:
        type: array
        items:
          $ref: '#/definitions/RollupFieldMetric'
      page_size:
        $ref: '#/definitions/long'
      rollup_index:
        $ref: '#/definitions/IndexName'
  CreateRollupJobResponse:
    type: object
    properties: {}
  DeleteRollupJobRequest:
    type: object
    properties: {}
  DeleteRollupJobResponse:
    type: object
    properties: {}
  GetRollupCapabilitiesRequest:
    type: object
    properties: {}
  GetRollupCapabilitiesResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/RollupCapabilities'
  RollupCapabilities:
    type: object
    properties:
      rollup_jobs:
        type: array
        items:
          $ref: '#/definitions/RollupCapabilitiesJob'
  RollupCapabilitiesJob:
    type: object
    properties:
      fields:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/object'
      index_pattern:
        type: string
      job_id:
        type: string
      rollup_index:
        type: string
  GetRollupIndexCapabilitiesRequest:
    type: object
    properties: {}
  GetRollupIndexCapabilitiesResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/RollupIndexCapabilities'
  RollupIndexCapabilities:
    type: object
    properties:
      rollup_jobs:
        type: array
        items:
          $ref: '#/definitions/RollupIndexCapabilitiesJob'
  RollupIndexCapabilitiesJob:
    type: object
    properties:
      fields:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: string
      index_pattern:
        type: string
      job_id:
        type: string
      rollup_index:
        type: string
  GetRollupJobRequest:
    type: object
    properties: {}
  GetRollupJobResponse:
    type: object
    properties:
      jobs:
        type: array
        items:
          $ref: '#/definitions/RollupJobInformation'
  RollupJobConfiguration:
    type: object
    properties:
      cron:
        type: string
      groups:
        $ref: '#/definitions/RollupGroupings'
      id:
        type: string
      index_pattern:
        type: string
      metrics:
        type: array
        items:
          $ref: '#/definitions/RollupFieldMetric'
      page_size:
        $ref: '#/definitions/long'
      rollup_index:
        $ref: '#/definitions/IndexName'
      timeout:
        $ref: '#/definitions/Time'
  RollupJobInformation:
    type: object
    properties:
      config:
        $ref: '#/definitions/RollupJobConfiguration'
      stats:
        $ref: '#/definitions/RollupJobStats'
      status:
        $ref: '#/definitions/RollupJobStatus'
  RollupJobStats:
    type: object
    properties:
      documents_processed:
        $ref: '#/definitions/long'
      pages_processed:
        $ref: '#/definitions/long'
      rollups_indexed:
        $ref: '#/definitions/long'
      trigger_count:
        $ref: '#/definitions/long'
      search_failures:
        $ref: '#/definitions/long'
      index_failures:
        $ref: '#/definitions/long'
      index_time_in_milliseconds:
        $ref: '#/definitions/long'
      index_total:
        $ref: '#/definitions/long'
      search_time_in_milliseconds:
        $ref: '#/definitions/long'
      search_total:
        $ref: '#/definitions/long'
  RollupJobStatus:
    type: object
    properties:
      current_position:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      job_state:
        $ref: '#/definitions/IndexingJobState'
      upgraded_doc_id:
        type: boolean
  DateHistogramRollupGrouping:
    type: object
    properties:
      delay:
        $ref: '#/definitions/Time'
      field:
        $ref: '#/definitions/Field'
      format:
        type: string
      interval:
        $ref: '#/definitions/Time'
      time_zone:
        type: string
  HistogramRollupGrouping:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      interval:
        $ref: '#/definitions/long'
  RollupFieldMetric:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      metrics:
        type: array
        items:
          $ref: '#/definitions/RollupMetric'
  RollupGroupings:
    type: object
    properties:
      date_histogram:
        $ref: '#/definitions/DateHistogramRollupGrouping'
      histogram:
        $ref: '#/definitions/HistogramRollupGrouping'
      terms:
        $ref: '#/definitions/TermsRollupGrouping'
  TermsRollupGrouping:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
  RollupSearchRequest:
    type: object
    properties:
      total_hits_as_integer:
        type: boolean
      typed_keys:
        type: boolean
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      query:
        $ref: '#/definitions/QueryContainer'
      size:
        $ref: '#/definitions/integer'
  RollupSearchResponse:
    type: object
    properties: {}
  StartRollupJobRequest:
    type: object
    properties: {}
  StartRollupJobResponse:
    type: object
    properties:
      started:
        type: boolean
  StopRollupJobRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      wait_for_completion:
        type: boolean
  StopRollupJobResponse:
    type: object
    properties:
      stopped:
        type: boolean
  SecurityNode:
    type: object
    properties:
      name:
        type: string
  ApiKeyPrivileges:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
      privileges:
        type: array
        items:
          type: string
  ApiKeyRole:
    type: object
    properties:
      cluster:
        type: array
        items:
          type: string
      index:
        type: array
        items:
          $ref: '#/definitions/ApiKeyPrivileges'
  CreateApiKeyRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
      expiration:
        $ref: '#/definitions/Time'
      name:
        type: string
      roles:
        type: object
        additionalProperties:
          $ref: '#/definitions/ApiKeyRole'
  CreateApiKeyResponse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      expiration:
        $ref: '#/definitions/Date'
      api_key:
        type: string
  ApiKeys:
    type: object
    properties:
      creation:
        $ref: '#/definitions/Date'
      expiration:
        $ref: '#/definitions/Date'
      id:
        type: string
      invalidated:
        type: boolean
      name:
        type: string
      realm:
        type: string
      username:
        type: string
  GetApiKeyRequest:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      realm_name:
        type: string
      username:
        type: string
  GetApiKeyResponse:
    type: object
    properties:
      api_keys:
        type: array
        items:
          $ref: '#/definitions/ApiKeys'
  InvalidateApiKeyRequest:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      realm_name:
        type: string
      username:
        type: string
  InvalidateApiKeyResponse:
    type: object
    properties:
      error_count:
        $ref: '#/definitions/integer'
      error_details:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
      invalidated_api_keys:
        type: array
        items:
          type: string
      previously_invalidated_api_keys:
        type: array
        items:
          type: string
  AuthenticateRequest:
    type: object
    properties: {}
  AuthenticateResponse:
    type: object
    properties:
      email:
        type: string
      full_name:
        type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      roles:
        type: array
        items:
          type: string
      username:
        type: string
      authentication_realm:
        $ref: '#/definitions/RealmInfo'
      lookup_realm:
        $ref: '#/definitions/RealmInfo'
  RealmInfo:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
  ClearCachedRealmsRequest:
    type: object
    properties:
      usernames:
        type: array
        items:
          type: string
  ClearCachedRealmsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/SecurityNode'
  DeletePrivilegesRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DeletePrivilegesResponse:
    type: object
    properties:
      applications:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/FoundUserPrivilege'
  FoundUserPrivilege:
    type: object
    properties:
      found:
        type: boolean
  GetPrivilegesRequest:
    type: object
    properties: {}
  GetPrivilegesResponse:
    type: object
    properties:
      applications:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/PrivilegesActions'
  ApplicationGlobalUserPrivileges:
    type: object
    properties:
      manage:
        $ref: '#/definitions/ManageUserPrivileges'
  ApplicationResourcePrivileges:
    type: object
    properties:
      application:
        type: string
      privileges:
        type: array
        items:
          type: string
      resources:
        type: array
        items:
          type: string
  FieldSecuritySettings:
    type: object
    properties:
      except:
        type: array
        items:
          type: string
      grant:
        type: array
        items:
          type: string
  GetUserPrivilegesRequest:
    type: object
    properties: {}
  GetUserPrivilegesResponse:
    type: object
    properties:
      applications:
        type: array
        items:
          $ref: '#/definitions/ApplicationResourcePrivileges'
      cluster:
        type: array
        items:
          type: string
      global:
        type: array
        items:
          $ref: '#/definitions/GlobalPrivileges'
      indices:
        type: array
        items:
          $ref: '#/definitions/UserIndicesPrivileges'
      run_as:
        type: array
        items:
          type: string
  GlobalPrivileges:
    type: object
    properties:
      application:
        $ref: '#/definitions/ApplicationGlobalUserPrivileges'
  ManageUserPrivileges:
    type: object
    properties:
      applications:
        type: array
        items:
          type: string
  QueryUserPrivileges:
    type: object
    properties:
      term:
        $ref: '#/definitions/TermUserPrivileges'
  TermUserPrivileges:
    type: object
    properties:
      apps:
        type: boolean
  UserIndicesPrivileges:
    type: object
    properties:
      field_security:
        $ref: '#/definitions/FieldSecuritySettings'
      names:
        type: array
        items:
          type: string
      privileges:
        type: array
        items:
          type: string
      query:
        $ref: '#/definitions/QueryUserPrivileges'
  ApplicationPrivilegesCheck:
    type: object
    properties:
      name:
        type: string
      privileges:
        type: array
        items:
          type: string
      resources:
        type: array
        items:
          type: string
  HasPrivilegesRequest:
    type: object
    properties:
      application:
        type: array
        items:
          $ref: '#/definitions/ApplicationPrivilegesCheck'
      cluster:
        type: array
        items:
          type: string
      index:
        type: array
        items:
          $ref: '#/definitions/IndexPrivilegesCheck'
  HasPrivilegesResponse:
    type: object
    properties:
      applications:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/ResourcePrivileges'
      clusters:
        type: object
        additionalProperties:
          type: boolean
      has_all_requested:
        type: boolean
      indices:
        type: array
        items:
          $ref: '#/definitions/ResourcePrivileges'
      username:
        type: string
  IndexPrivilegesCheck:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
      privileges:
        type: array
        items:
          type: string
  ResourcePrivileges:
    type: object
    properties:
      privileges:
        type: object
        additionalProperties:
          type: boolean
      resource:
        type: string
  PrivilegesActions:
    type: object
    properties:
      actions:
        type: array
        items:
          type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  PutPrivilegesRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
      applications:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/PrivilegesActions'
  PutPrivilegesResponse:
    type: object
    properties:
      applications:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/PutPrivilegesStatus'
  PutPrivilegesStatus:
    type: object
    properties:
      created:
        type: boolean
  FieldSecurity:
    type: object
    properties:
      except:
        type: array
        items:
          $ref: '#/definitions/Field'
      grant:
        type: array
        items:
          $ref: '#/definitions/Field'
  ClearCachedRolesRequest:
    type: object
    properties: {}
  ClearCachedRolesResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/SecurityNode'
  DeleteRoleRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DeleteRoleResponse:
    type: object
    properties:
      found:
        type: boolean
  GetRoleRequest:
    type: object
    properties: {}
  GetRoleResponse:
    type: object
    properties:
      roles:
        type: object
        additionalProperties:
          $ref: '#/definitions/XPackRole'
  XPackRole:
    type: object
    properties:
      cluster:
        type: array
        items:
          type: string
      indices:
        type: array
        items:
          $ref: '#/definitions/IndicesPrivileges'
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      run_as:
        type: array
        items:
          type: string
  ApplicationPrivileges:
    type: object
    properties:
      application:
        type: string
      privileges:
        type: array
        items:
          type: string
      resources:
        type: array
        items:
          type: string
  IndicesPrivileges:
    type: object
    properties:
      field_security:
        $ref: '#/definitions/FieldSecurity'
      names:
        $ref: '#/definitions/Indices'
      privileges:
        type: array
        items:
          type: string
      query:
        $ref: '#/definitions/QueryContainer'
  PutRoleRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
      applications:
        type: array
        items:
          $ref: '#/definitions/ApplicationPrivileges'
      cluster:
        type: array
        items:
          type: string
      global:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      indices:
        type: array
        items:
          $ref: '#/definitions/IndicesPrivileges'
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      run_as:
        type: array
        items:
          type: string
  PutRoleResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/PutRoleStatus'
  PutRoleStatus:
    type: object
    properties:
      created:
        type: boolean
  DeleteRoleMappingRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DeleteRoleMappingResponse:
    type: object
    properties:
      found:
        type: boolean
  GetRoleMappingRequest:
    type: object
    properties: {}
  GetRoleMappingResponse:
    type: object
    properties:
      role_mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/XPackRoleMapping'
  XPackRoleMapping:
    type: object
    properties:
      enabled:
        type: boolean
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      roles:
        type: array
        items:
          type: string
      rules:
        $ref: '#/definitions/RoleMappingRuleBase'
  PutRoleMappingRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
      enabled:
        type: boolean
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      roles:
        type: array
        items:
          type: string
      rules:
        $ref: '#/definitions/RoleMappingRuleBase'
      run_as:
        type: array
        items:
          type: string
  PutRoleMappingResponse:
    type: object
    properties:
      created:
        type: boolean
      role_mapping:
        $ref: '#/definitions/PutRoleMappingStatus'
  PutRoleMappingStatus:
    type: object
    properties:
      created:
        type: boolean
  RoleMappingRuleBase:
    type: object
    properties: {}
  ChangePasswordRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
      password:
        type: string
  ChangePasswordResponse:
    type: object
    properties: {}
  DeleteUserRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DeleteUserResponse:
    type: object
    properties:
      found:
        type: boolean
  DisableUserRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DisableUserResponse:
    type: object
    properties: {}
  EnableUserRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  EnableUserResponse:
    type: object
    properties: {}
  GetUserRequest:
    type: object
    properties: {}
  GetUserResponse:
    type: object
    properties:
      users:
        type: object
        additionalProperties:
          $ref: '#/definitions/XPackUser'
  XPackUser:
    type: object
    properties:
      email:
        type: string
      full_name:
        type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      roles:
        type: array
        items:
          type: string
      username:
        type: string
  GetUserAccessTokenRequest:
    type: object
    properties:
      grant_type:
        $ref: '#/definitions/AccessTokenGrantType'
      scope:
        type: string
  GetUserAccessTokenResponse:
    type: object
    properties:
      access_token:
        type: string
      expires_in:
        $ref: '#/definitions/long'
      scope:
        type: string
      type:
        type: string
  InvalidateUserAccessTokenRequest:
    type: object
    properties: {}
  InvalidateUserAccessTokenResponse:
    type: object
    properties:
      invalidated_tokens:
        $ref: '#/definitions/long'
      previously_invalidated_tokens:
        $ref: '#/definitions/long'
      error_count:
        $ref: '#/definitions/long'
      error_details:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
  PutUserRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
      email:
        type: string
      full_name:
        type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      password:
        type: string
      password_hash:
        type: string
      roles:
        type: array
        items:
          type: string
  PutUserResponse:
    type: object
    properties:
      created:
        type: boolean
  SnapshotLifecycleConfig:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      include_global_state:
        type: boolean
      indices:
        $ref: '#/definitions/Indices'
  SnapshotLifecycleInvocationRecord:
    type: object
    properties:
      snapshot_name:
        type: string
      time:
        $ref: '#/definitions/Date'
  SnapshotLifecyclePolicy:
    type: object
    properties:
      config:
        $ref: '#/definitions/SnapshotLifecycleConfig'
      name:
        type: string
      repository:
        type: string
      schedule:
        $ref: '#/definitions/CronExpression'
  SnapshotLifecyclePolicyMetadata:
    type: object
    properties:
      modified_date:
        $ref: '#/definitions/Date'
      next_execution:
        $ref: '#/definitions/Date'
      policy:
        $ref: '#/definitions/SnapshotLifecyclePolicy'
      version:
        $ref: '#/definitions/integer'
      in_progress:
        $ref: '#/definitions/SnapshotLifecycleInProgress'
      last_success:
        $ref: '#/definitions/SnapshotLifecycleInvocationRecord'
      last_failure:
        $ref: '#/definitions/SnapshotLifecycleInvocationRecord'
  DeleteSnapshotLifecycleRequest:
    type: object
    properties: {}
  DeleteSnapshotLifecycleResponse:
    type: object
    properties: {}
  ExecuteSnapshotLifecycleRequest:
    type: object
    properties: {}
  ExecuteSnapshotLifecycleResponse:
    type: object
    properties:
      snapshot_name:
        type: string
  GetSnapshotLifecycleRequest:
    type: object
    properties: {}
  GetSnapshotLifecycleResponse:
    type: object
    properties:
      policies:
        type: object
        additionalProperties:
          $ref: '#/definitions/SnapshotLifecyclePolicyMetadata'
  PutSnapshotLifecycleRequest:
    type: object
    properties:
      config:
        $ref: '#/definitions/SnapshotLifecycleConfig'
      name:
        type: string
      repository:
        type: string
      schedule:
        $ref: '#/definitions/CronExpression'
  PutSnapshotLifecycleResponse:
    type: object
    properties: {}
  SqlRequest:
    type: object
    properties:
      fetch_size:
        $ref: '#/definitions/integer'
      filter:
        $ref: '#/definitions/QueryContainer'
      query:
        type: string
      time_zone:
        type: string
  ClearSqlCursorRequest:
    type: object
    properties:
      cursor:
        type: string
  ClearSqlCursorResponse:
    type: object
    properties:
      succeeded:
        type: boolean
  QuerySqlRequest:
    type: object
    properties:
      format:
        type: string
      cursor:
        type: string
      columnar:
        type: boolean
      fetch_size:
        $ref: '#/definitions/integer'
      filter:
        $ref: '#/definitions/QueryContainer'
      query:
        type: string
      time_zone:
        type: string
  QuerySqlResponse:
    type: object
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/SqlColumn'
      cursor:
        type: string
      rows:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/SqlValue'
      values:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/SqlValue'
  SqlColumn:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
  SqlValue:
    type: object
    properties: {}
  TranslateSqlRequest:
    type: object
    properties:
      fetch_size:
        $ref: '#/definitions/integer'
      filter:
        $ref: '#/definitions/QueryContainer'
      query:
        type: string
      time_zone:
        type: string
  TranslateSqlResponse:
    type: object
    properties:
      result:
        $ref: '#/definitions/SearchRequest'
  ClusterCertificateInformation:
    type: object
    properties:
      path:
        type: string
      alias:
        type: string
      format:
        type: string
      subject_domain_name:
        type: string
      serial_number:
        type: string
      has_private_key:
        type: boolean
      expiry:
        $ref: '#/definitions/Date'
  GetCertificatesRequest:
    type: object
    properties: {}
  GetCertificatesResponse:
    type: object
    properties:
      certificates:
        type: array
        items:
          $ref: '#/definitions/ClusterCertificateInformation'
  Watch:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/Action'
      condition:
        $ref: '#/definitions/ConditionContainer'
      input:
        $ref: '#/definitions/InputContainer'
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      status:
        $ref: '#/definitions/WatchStatus'
      throttle_period:
        type: string
      transform:
        $ref: '#/definitions/TransformContainer'
      trigger:
        $ref: '#/definitions/TriggerContainer'
  AcknowledgeState:
    type: object
    properties:
      state:
        $ref: '#/definitions/AcknowledgementState'
      timestamp:
        $ref: '#/definitions/Date'
  AcknowledgeWatchRequest:
    type: object
    properties: {}
  AcknowledgeWatchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/WatchStatus'
  ActionStatus:
    type: object
    properties:
      acknowledgement:
        $ref: '#/definitions/AcknowledgeState'
      last_execution:
        $ref: '#/definitions/ExecutionState'
      last_successful_execution:
        $ref: '#/definitions/ExecutionState'
      last_throttle:
        $ref: '#/definitions/ThrottleState'
  ActivationState:
    type: object
    properties:
      active:
        type: boolean
      timestamp:
        $ref: '#/definitions/Date'
  ExecutionState:
    type: object
    properties:
      successful:
        type: boolean
      timestamp:
        $ref: '#/definitions/Date'
  ThrottleState:
    type: object
    properties:
      reason:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
  WatchStatus:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/ActionStatus'
      last_checked:
        $ref: '#/definitions/Date'
      last_met_condition:
        $ref: '#/definitions/Date'
      state:
        $ref: '#/definitions/ActivationState'
      version:
        $ref: '#/definitions/integer'
  Action:
    type: object
    properties:
      action_type:
        $ref: '#/definitions/ActionType'
      name:
        type: string
      throttle_period:
        $ref: '#/definitions/Time'
      foreach:
        type: string
      max_iterations:
        $ref: '#/definitions/integer'
      transform:
        $ref: '#/definitions/TransformContainer'
      condition:
        $ref: '#/definitions/ConditionContainer'
  EmailBody:
    type: object
    properties:
      html:
        type: string
      text:
        type: string
  PagerDutyContext:
    type: object
    properties:
      href:
        type: string
      src:
        type: string
      type:
        $ref: '#/definitions/PagerDutyContextType'
  PagerDutyEvent:
    type: object
    properties:
      account:
        type: string
      attach_payload:
        type: boolean
      client:
        type: string
      client_url:
        type: string
      context:
        type: array
        items:
          $ref: '#/definitions/PagerDutyContext'
      description:
        type: string
      event_type:
        $ref: '#/definitions/PagerDutyEventType'
      incident_key:
        type: string
  SlackAttachment:
    type: object
    properties:
      author_icon:
        type: string
      author_link:
        type: string
      author_name:
        type: string
      color:
        type: string
      fallback:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/SlackAttachmentField'
      footer:
        type: string
      footer_icon:
        type: string
      image_url:
        type: string
      pretext:
        type: string
      text:
        type: string
      thumb_url:
        type: string
      title:
        type: string
      title_link:
        type: string
      ts:
        $ref: '#/definitions/Date'
  SlackAttachmentField:
    type: object
    properties:
      short:
        type: boolean
      title:
        type: string
      value:
        type: string
  SlackDynamicAttachment:
    type: object
    properties:
      attachment_template:
        $ref: '#/definitions/SlackAttachment'
      list_path:
        type: string
  SlackMessage:
    type: object
    properties:
      attachments:
        type: array
        items:
          $ref: '#/definitions/SlackAttachment'
      dynamic_attachments:
        $ref: '#/definitions/SlackDynamicAttachment'
      from:
        type: string
      icon:
        type: string
      text:
        type: string
      to:
        type: array
        items:
          type: string
  ActivateWatchRequest:
    type: object
    properties: {}
  ActivateWatchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/ActivationStatus'
  ActivationStatus:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/ActionStatus'
      state:
        $ref: '#/definitions/ActivationState'
  AlwaysCondition:
    type: object
    properties: {}
  ArrayCompareCondition:
    type: object
    properties:
      array_path:
        type: string
      comparison:
        type: string
      path:
        type: string
      quantifier:
        $ref: '#/definitions/Quantifier'
      value:
        $ref: '#/definitions/object'
  CompareCondition:
    type: object
    properties:
      comparison:
        type: string
      path:
        type: string
      value:
        $ref: '#/definitions/object'
  Condition:
    type: object
    properties: {}
  ConditionContainer:
    type: object
    properties:
      always:
        $ref: '#/definitions/AlwaysCondition'
      array_compare:
        $ref: '#/definitions/ArrayCompareCondition'
      compare:
        $ref: '#/definitions/CompareCondition'
      never:
        $ref: '#/definitions/NeverCondition'
      script:
        $ref: '#/definitions/ScriptCondition'
  NeverCondition:
    type: object
    properties: {}
  ScriptCondition:
    type: object
    properties:
      lang:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  DeactivateWatchRequest:
    type: object
    properties: {}
  DeactivateWatchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/ActivationStatus'
  DeleteWatchRequest:
    type: object
    properties: {}
  DeleteWatchResponse:
    type: object
    properties:
      found:
        type: boolean
      id:
        type: string
      version:
        $ref: '#/definitions/integer'
  ExecuteWatchRequest:
    type: object
    properties:
      debug:
        type: boolean
      action_modes:
        type: object
        additionalProperties:
          $ref: '#/definitions/ActionExecutionMode'
      alternative_input:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      ignore_condition:
        type: boolean
      record_execution:
        type: boolean
      simulated_actions:
        $ref: '#/definitions/SimulatedActions'
      trigger_data:
        $ref: '#/definitions/ScheduleTriggerEvent'
      watch:
        $ref: '#/definitions/Watch'
  ExecuteWatchResponse:
    type: object
    properties:
      id:
        type: string
      watch_record:
        $ref: '#/definitions/WatchRecord'
  ExecutionResult:
    type: object
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/ExecutionResultAction'
      condition:
        $ref: '#/definitions/ExecutionResultCondition'
      execution_duration:
        $ref: '#/definitions/integer'
      execution_time:
        $ref: '#/definitions/Date'
      input:
        $ref: '#/definitions/ExecutionResultInput'
  ExecutionResultAction:
    type: object
    properties:
      email:
        $ref: '#/definitions/EmailActionResult'
      id:
        type: string
      index:
        $ref: '#/definitions/IndexActionResult'
      logging:
        $ref: '#/definitions/LoggingActionResult'
      pager_duty:
        $ref: '#/definitions/PagerDutyActionResult'
      reason:
        type: string
      slack:
        $ref: '#/definitions/SlackActionResult'
      status:
        $ref: '#/definitions/Status'
      type:
        $ref: '#/definitions/ActionType'
      webhook:
        $ref: '#/definitions/WebhookActionResult'
  ExecutionResultCondition:
    type: object
    properties:
      met:
        type: boolean
      status:
        $ref: '#/definitions/Status'
      type:
        $ref: '#/definitions/ConditionType'
  ExecutionResultInput:
    type: object
    properties:
      payload:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      status:
        $ref: '#/definitions/Status'
      type:
        $ref: '#/definitions/InputType'
  TriggerEventResult:
    type: object
    properties:
      manual:
        $ref: '#/definitions/TriggerEventContainer'
      triggered_time:
        $ref: '#/definitions/Date'
      type:
        type: string
  WatchRecord:
    type: object
    properties:
      condition:
        $ref: '#/definitions/ConditionContainer'
      input:
        $ref: '#/definitions/InputContainer'
      messages:
        type: array
        items:
          type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      result:
        $ref: '#/definitions/ExecutionResult'
      state:
        $ref: '#/definitions/ActionExecutionState'
      trigger_event:
        $ref: '#/definitions/TriggerEventResult'
      user:
        type: string
      node:
        type: string
      watch_id:
        type: string
  HttpInputRequestResult:
    type: object
    properties: {}
  HttpInputResponseResult:
    type: object
    properties:
      body:
        type: string
      headers:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
      status_code:
        $ref: '#/definitions/integer'
  SimulatedActions:
    type: object
    properties:
      actions:
        type: array
        items:
          type: string
      all:
        $ref: '#/definitions/SimulatedActions'
      use_all:
        type: boolean
  EmailActionResult:
    type: object
    properties:
      account:
        type: string
      message:
        $ref: '#/definitions/EmailResult'
      reason:
        type: string
  EmailResult:
    type: object
    properties:
      bcc:
        type: array
        items:
          type: string
      body:
        $ref: '#/definitions/EmailBody'
      cc:
        type: array
        items:
          type: string
      from:
        type: string
      id:
        type: string
      priority:
        $ref: '#/definitions/EmailPriority'
      reply_to:
        type: array
        items:
          type: string
      sent_date:
        $ref: '#/definitions/Date'
      subject:
        type: string
      to:
        type: array
        items:
          type: string
  IndexActionResult:
    type: object
    properties:
      id:
        type: string
      response:
        $ref: '#/definitions/IndexActionResultIndexResponse'
  IndexActionResultIndexResponse:
    type: object
    properties:
      created:
        type: boolean
      id:
        type: string
      index:
        $ref: '#/definitions/IndexName'
      result:
        $ref: '#/definitions/Result'
      version:
        $ref: '#/definitions/integer'
  LoggingActionResult:
    type: object
    properties:
      logged_text:
        type: string
  PagerDutyActionEventResult:
    type: object
    properties:
      event:
        $ref: '#/definitions/PagerDutyEvent'
      reason:
        type: string
      request:
        $ref: '#/definitions/HttpInputRequestResult'
      response:
        $ref: '#/definitions/HttpInputResponseResult'
  PagerDutyActionResult:
    type: object
    properties:
      sent_event:
        $ref: '#/definitions/PagerDutyActionEventResult'
  SlackActionMessageResult:
    type: object
    properties:
      message:
        $ref: '#/definitions/SlackMessage'
      reason:
        type: string
      request:
        $ref: '#/definitions/HttpInputRequestResult'
      response:
        $ref: '#/definitions/HttpInputResponseResult'
      status:
        $ref: '#/definitions/Status'
      to:
        type: string
  SlackActionResult:
    type: object
    properties:
      account:
        type: string
      sent_messages:
        type: array
        items:
          $ref: '#/definitions/SlackActionMessageResult'
  WebhookActionResult:
    type: object
    properties:
      request:
        $ref: '#/definitions/HttpInputRequestResult'
      response:
        $ref: '#/definitions/HttpInputResponseResult'
  GetWatchRequest:
    type: object
    properties: {}
  GetWatchResponse:
    type: object
    properties:
      found:
        type: boolean
      id:
        type: string
      status:
        $ref: '#/definitions/WatchStatus'
      watch:
        $ref: '#/definitions/Watch'
  ChainInput:
    type: object
    properties:
      inputs:
        type: object
        additionalProperties:
          $ref: '#/definitions/InputContainer'
  HttpInput:
    type: object
    properties:
      extract:
        type: array
        items:
          type: string
      request:
        $ref: '#/definitions/HttpInputRequest'
      response_content_type:
        $ref: '#/definitions/ResponseContentType'
  HttpInputAuthentication:
    type: object
    properties:
      basic:
        $ref: '#/definitions/HttpInputBasicAuthentication'
  HttpInputBasicAuthentication:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
  HttpInputProxy:
    type: object
    properties:
      host:
        type: string
      port:
        $ref: '#/definitions/integer'
  HttpInputRequest:
    type: object
    properties:
      authentication:
        $ref: '#/definitions/HttpInputAuthentication'
      body:
        type: string
      connection_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: object
        additionalProperties:
          type: string
      host:
        type: string
      method:
        $ref: '#/definitions/HttpInputMethod'
      params:
        type: object
        additionalProperties:
          type: string
      path:
        type: string
      port:
        $ref: '#/definitions/integer'
      proxy:
        $ref: '#/definitions/HttpInputProxy'
      read_timeout:
        $ref: '#/definitions/Time'
      scheme:
        $ref: '#/definitions/ConnectionScheme'
      url:
        type: string
  IndicesOptions:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
  Input:
    type: object
    properties: {}
  InputContainer:
    type: object
    properties:
      chain:
        $ref: '#/definitions/ChainInput'
      http:
        $ref: '#/definitions/HttpInput'
      search:
        $ref: '#/definitions/SearchInput'
      simple:
        $ref: '#/definitions/SimpleInput'
  SearchInput:
    type: object
    properties:
      extract:
        type: array
        items:
          type: string
      request:
        $ref: '#/definitions/SearchInputRequest'
      timeout:
        $ref: '#/definitions/Time'
  SearchInputRequest:
    type: object
    properties:
      body:
        $ref: '#/definitions/SearchRequest'
      indices:
        type: array
        items:
          $ref: '#/definitions/IndexName'
      indices_options:
        $ref: '#/definitions/IndicesOptions'
      search_type:
        $ref: '#/definitions/SearchType'
      template:
        $ref: '#/definitions/SearchTemplateRequest'
  SimpleInput:
    type: object
    properties:
      payload:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  PutWatchRequest:
    type: object
    properties:
      active:
        type: boolean
      if_primary_term:
        $ref: '#/definitions/long'
      if_sequence_number:
        $ref: '#/definitions/long'
      version:
        $ref: '#/definitions/long'
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/Action'
      condition:
        $ref: '#/definitions/ConditionContainer'
      input:
        $ref: '#/definitions/InputContainer'
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      throttle_period:
        type: string
      transform:
        $ref: '#/definitions/TransformContainer'
      trigger:
        $ref: '#/definitions/TriggerContainer'
  PutWatchResponse:
    type: object
    properties:
      created:
        type: boolean
      id:
        type: string
      version:
        $ref: '#/definitions/integer'
      sequence_number:
        $ref: '#/definitions/long'
      primary_term:
        $ref: '#/definitions/long'
  RestartWatcherResponse:
    type: object
    properties: {}
  CronExpression:
    type: object
    properties: {}
  DailySchedule:
    type: object
    properties:
      at:
        description: 'Not an array but: union<string[], TimeOfDay>'
        type: array
        items:
          - type: array
            items:
              type: string
          - $ref: '#/definitions/TimeOfDay'
  HourlySchedule:
    type: object
    properties:
      minute:
        type: array
        items:
          $ref: '#/definitions/integer'
  Interval:
    type: object
    properties:
      factor:
        $ref: '#/definitions/long'
      unit:
        $ref: '#/definitions/IntervalUnit'
  Schedule:
    type: object
    properties: {}
  ScheduleBase:
    type: object
    properties: {}
  ScheduleContainer:
    type: object
    properties:
      cron:
        $ref: '#/definitions/CronExpression'
      daily:
        $ref: '#/definitions/DailySchedule'
      hourly:
        $ref: '#/definitions/HourlySchedule'
      interval:
        $ref: '#/definitions/Interval'
      monthly:
        type: array
        items:
          $ref: '#/definitions/TimeOfMonth'
      weekly:
        type: array
        items:
          $ref: '#/definitions/TimeOfWeek'
      yearly:
        type: array
        items:
          $ref: '#/definitions/TimeOfYear'
  ScheduleTriggerEvent:
    type: object
    properties:
      scheduled_time:
        description: 'Not an array but: union<Date, string>'
        type: array
        items:
          - $ref: '#/definitions/Date'
          - type: string
      triggered_time:
        description: 'Not an array but: union<Date, string>'
        type: array
        items:
          - $ref: '#/definitions/Date'
          - type: string
  TimeOfDay:
    type: object
    properties:
      hour:
        type: array
        items:
          $ref: '#/definitions/integer'
      minute:
        type: array
        items:
          $ref: '#/definitions/integer'
  TimeOfMonth:
    type: object
    properties:
      at:
        type: array
        items:
          type: string
      'on':
        type: array
        items:
          $ref: '#/definitions/integer'
  TimeOfWeek:
    type: object
    properties:
      at:
        type: array
        items:
          type: string
      'on':
        type: array
        items:
          $ref: '#/definitions/Day'
  TimeOfYear:
    type: object
    properties:
      at:
        type: array
        items:
          type: string
      in:
        type: array
        items:
          $ref: '#/definitions/Month'
      'on':
        type: array
        items:
          $ref: '#/definitions/integer'
  StartWatcherRequest:
    type: object
    properties: {}
  StartWatcherResponse:
    type: object
    properties: {}
  StopWatcherRequest:
    type: object
    properties: {}
  StopWatcherResponse:
    type: object
    properties: {}
  ChainTransform:
    type: object
    properties:
      transforms:
        type: array
        items:
          $ref: '#/definitions/TransformContainer'
  ScriptTransform:
    type: object
    properties:
      lang:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  SearchTransform:
    type: object
    properties:
      request:
        $ref: '#/definitions/SearchInputRequest'
      timeout:
        $ref: '#/definitions/Time'
  Transform:
    type: object
    properties: {}
  TransformContainer:
    type: object
    properties:
      chain:
        $ref: '#/definitions/ChainTransform'
      script:
        $ref: '#/definitions/ScriptTransform'
      search:
        $ref: '#/definitions/SearchTransform'
  TriggerContainer:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/ScheduleContainer'
  TriggerEvent:
    type: object
    properties: {}
  TriggerEventContainer:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/ScheduleTriggerEvent'
  ExecutionThreadPool:
    type: object
    properties:
      max_size:
        $ref: '#/definitions/long'
      queue_size:
        $ref: '#/definitions/long'
  WatchRecordQueuedStats:
    type: object
    properties:
      execution_time:
        $ref: '#/definitions/Date'
      triggered_time:
        $ref: '#/definitions/Date'
      watch_id:
        type: string
      watch_record_id:
        type: string
  WatchRecordStats:
    type: object
    properties:
      execution_phase:
        $ref: '#/definitions/ExecutionPhase'
  WatcherNodeStats:
    type: object
    properties:
      current_watches:
        type: array
        items:
          $ref: '#/definitions/WatchRecordStats'
      execution_thread_pool:
        $ref: '#/definitions/ExecutionThreadPool'
      queued_watches:
        type: array
        items:
          $ref: '#/definitions/WatchRecordQueuedStats'
      watch_count:
        $ref: '#/definitions/long'
      watcher_state:
        $ref: '#/definitions/WatcherState'
  WatcherStatsRequest:
    type: object
    properties:
      emit_stacktraces:
        type: boolean
  WatcherStatsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      manually_stopped:
        type: boolean
      stats:
        type: array
        items:
          $ref: '#/definitions/WatcherNodeStats'
  MinimumInterval:
    type: string
    description: null
    enum:
      - second
      - minute
      - hour
      - day
      - month
      - year
  DateInterval:
    type: string
    description: null
    enum:
      - second
      - minute
      - hour
      - day
      - week
      - month
      - quarter
      - year
  GeoHashPrecision:
    type: string
    description: null
    enum:
      - Precision1
      - Precision2
      - Precision3
      - Precision4
      - Precision5
      - Precision6
      - Precision7
      - Precision8
      - Precision9
      - Precision10
      - Precision11
      - Precision12
  GeoTilePrecision:
    type: string
    description: null
    enum:
      - Precision0
      - Precision1
      - Precision2
      - Precision3
      - Precision4
      - Precision5
      - Precision6
      - Precision7
      - Precision8
      - Precision9
      - Precision10
      - Precision11
      - Precision12
      - Precision13
      - Precision14
      - Precision15
      - Precision16
      - Precision17
      - Precision18
      - Precision19
      - Precision20
      - Precision21
      - Precision22
      - Precision23
      - Precision24
      - Precision25
      - Precision26
      - Precision27
      - Precision28
      - Precision29
  SamplerAggregationExecutionHint:
    type: string
    description: null
    enum:
      - map
      - global_ordinals
      - bytes_hash
  TermsAggregationCollectMode:
    type: string
    description: null
    enum:
      - depth_first
      - breadth_first
  TermsAggregationExecutionHint:
    type: string
    description: null
    enum:
      - map
      - global_ordinals
      - global_ordinals_hash
      - global_ordinals_low_cardinality
  MatrixStatsMode:
    type: string
    description: null
    enum:
      - avg
      - min
      - max
      - sum
      - median
  ValueType:
    type: string
    description: null
    enum:
      - string
      - long
      - double
      - number
      - date
      - date_nanos
      - ip
      - numeric
      - geo_point
      - boolean
  GapPolicy:
    type: string
    description: null
    enum:
      - skip
      - insert_zeros
  HoltWintersType:
    type: string
    description: null
    enum:
      - add
      - mult
  AggregationVisitorScope:
    type: string
    description: null
    enum:
      - Unknown
      - Aggregation
      - Bucket
  Language:
    type: string
    description: null
    enum:
      - Arabic
      - Armenian
      - Basque
      - Brazilian
      - Bulgarian
      - Catalan
      - Chinese
      - Cjk
      - Czech
      - Danish
      - Dutch
      - English
      - Finnish
      - French
      - Galician
      - German
      - Greek
      - Hindi
      - Hungarian
      - Indonesian
      - Irish
      - Italian
      - Latvian
      - Norwegian
      - Persian
      - Portuguese
      - Romanian
      - Russian
      - Sorani
      - Spanish
      - Swedish
      - Turkish
      - Thai
  SnowballLanguage:
    type: string
    description: null
    enum:
      - Armenian
      - Basque
      - Catalan
      - Danish
      - Dutch
      - English
      - Finnish
      - French
      - German
      - German2
      - Hungarian
      - Italian
      - Kp
      - Lovins
      - Norwegian
      - Porter
      - Portuguese
      - Romanian
      - Russian
      - Spanish
      - Swedish
      - Turkish
  IcuCollationAlternate:
    type: string
    description: null
    enum:
      - shifted
      - non-ignorable
  IcuCollationCaseFirst:
    type: string
    description: null
    enum:
      - lower
      - upper
  IcuCollationDecomposition:
    type: string
    description: null
    enum:
      - 'no'
      - identical
  IcuCollationStrength:
    type: string
    description: null
    enum:
      - primary
      - secondary
      - tertiary
      - quaternary
      - identical
  IcuNormalizationMode:
    type: string
    description: null
    enum:
      - decompose
      - compose
  IcuNormalizationType:
    type: string
    description: null
    enum:
      - nfc
      - nfkc
      - nfkc_cf
  IcuTransformDirection:
    type: string
    description: null
    enum:
      - forward
      - reverse
  KuromojiTokenizationMode:
    type: string
    description: null
    enum:
      - normal
      - search
      - extended
  PhoneticEncoder:
    type: string
    description: null
    enum:
      - metaphone
      - double_metaphone
      - soundex
      - refined_soundex
      - caverphone1
      - caverphone2
      - cologne
      - nysiis
      - koelnerphonetik
      - haasephonetik
      - beider_morse
      - daitch_mokotoff
  PhoneticLanguage:
    type: string
    description: null
    enum:
      - any
      - comomon
      - cyrillic
      - english
      - french
      - german
      - hebrew
      - hungarian
      - polish
      - romanian
      - russian
      - spanish
  PhoneticNameType:
    type: string
    description: null
    enum:
      - generic
      - ashkenazi
      - sephardic
  PhoneticRuleType:
    type: string
    description: null
    enum:
      - approx
      - exact
  KeepTypesMode:
    type: string
    description: null
    enum:
      - include
      - exclude
  DelimitedPayloadEncoding:
    type: string
    description: null
    enum:
      - int
      - float
      - identity
  EdgeNGramSide:
    type: string
    description: null
    enum:
      - front
      - back
  SynonymFormat:
    type: string
    description: null
    enum:
      - solr
      - wordnet
  NoriDecompoundMode:
    type: string
    description: null
    enum:
      - discard
      - none
      - mixed
  TokenChar:
    type: string
    description: null
    enum:
      - letter
      - digit
      - whitespace
      - punctuation
      - symbol
  ClusterStatus:
    type: string
    description: null
    enum:
      - green
      - yellow
      - red
  AllocationExplainDecision:
    type: string
    description: null
    enum:
      - 'NO'
      - 'YES'
      - THROTTLE
      - ALWAYS
  Decision:
    type: string
    description: null
    enum:
      - 'yes'
      - 'no'
      - worse_balance
      - throttled
      - awaiting_info
      - allocation_delayed
      - no_valid_shard_copy
      - no_attempt
  StoreCopy:
    type: string
    description: null
    enum:
      - NONE
      - AVAILABLE
      - CORRUPT
      - IO_ERROR
      - STALE
      - UNKNOWN
  UnassignedInformationReason:
    type: string
    description: null
    enum:
      - INDEX_CREATED
      - CLUSTER_RECOVERED
      - INDEX_REOPENED
      - DANGLING_INDEX_IMPORTED
      - NEW_INDEX_RESTORED
      - EXISTING_INDEX_RESTORED
      - REPLICA_ADDED
      - ALLOCATION_FAILED
      - NODE_LEFT
      - REROUTE_CANCELLED
      - REINITIALIZED
      - REALLOCATED_REPLICA
      - PRIMARY_FAILED
      - FORCED_EMPTY_PRIMARY
      - MANUAL_ALLOCATION
  NodeRole:
    type: string
    description: null
    enum:
      - master
      - data
      - client
      - ingest
      - ml
  Bytes:
    type: string
    description: null
    enum:
      - b
      - k
      - kb
      - m
      - mb
      - g
      - gb
      - t
      - tb
      - p
      - pb
  Conflicts:
    type: string
    description: null
    enum:
      - abort
      - proceed
  DefaultOperator:
    type: string
    description: null
    enum:
      - AND
      - OR
  ExpandWildcards:
    type: string
    description: null
    enum:
      - open
      - closed
      - none
      - all
  GroupBy:
    type: string
    description: null
    enum:
      - nodes
      - parents
      - none
  Health:
    type: string
    description: null
    enum:
      - green
      - yellow
      - red
  HttpMethod:
    type: string
    description: null
    enum:
      - GET
      - POST
      - PUT
      - DELETE
      - HEAD
  Level:
    type: string
    description: null
    enum:
      - cluster
      - indices
      - shards
  OpType:
    type: string
    description: null
    enum:
      - index
      - create
  PipelineFailure:
    type: string
    description: null
    enum:
      - BadAuthentication
      - BadResponse
      - PingFailure
      - SniffFailure
      - CouldNotStartSniffOnStartup
      - MaxTimeoutReached
      - MaxRetriesReached
      - Unexpected
      - BadRequest
      - NoNodesAttempted
  PostType:
    type: string
    description: null
    enum:
      - ByteArray
      - LiteralString
      - EnumerableOfString
      - EnumerableOfObject
      - Serializable
  Refresh:
    type: string
    description: null
    enum:
      - 'true'
      - 'false'
      - wait_for
  SearchType:
    type: string
    description: null
    enum:
      - query_then_fetch
      - dfs_query_then_fetch
  Size:
    type: string
    description: null
    enum:
      - Raw
      - k
      - m
      - g
      - t
      - p
  SuggestMode:
    type: string
    description: null
    enum:
      - missing
      - popular
      - always
  ThreadType:
    type: string
    description: null
    enum:
      - cpu
      - wait
      - block
  VersionType:
    type: string
    description: null
    enum:
      - internal
      - external
      - external_gte
      - force
  WaitForEvents:
    type: string
    description: null
    enum:
      - immediate
      - urgent
      - high
      - normal
      - low
      - languid
  WaitForStatus:
    type: string
    description: null
    enum:
      - green
      - yellow
      - red
  DateMathOperation:
    type: string
    description: null
    enum:
      - +
      - '-'
  DateMathTimeUnit:
    type: string
    description: null
    enum:
      - s
      - m
      - h
      - d
      - w
      - M
      - 'y'
  DistanceUnit:
    type: string
    description: null
    enum:
      - in
      - ft
      - yd
      - mi
      - nmi
      - km
      - m
      - cm
      - mm
  GeoDistanceType:
    type: string
    description: null
    enum:
      - arc
      - plane
  GeoShapeRelation:
    type: string
    description: null
    enum:
      - intersects
      - disjoint
      - within
      - contains
  ShapeRelation:
    type: string
    description: null
    enum:
      - intersects
      - disjoint
      - within
  TimeUnit:
    type: string
    description: null
    enum:
      - nanos
      - micros
      - ms
      - s
      - m
      - h
      - d
  Result:
    type: string
    description: null
    enum:
      - Error
      - created
      - updated
      - deleted
      - not_found
      - noop
  RecoveryInitialShards:
    type: string
    description: null
    enum:
      - quorem
      - quorem-1
      - full
      - full-1
  LogLevel:
    type: string
    description: null
    enum:
      - error
      - warn
      - info
      - debug
      - trace
  IndexSortMissing:
    type: string
    description: null
    enum:
      - _first
      - _last
  IndexSortMode:
    type: string
    description: null
    enum:
      - min
      - max
  IndexSortOrder:
    type: string
    description: null
    enum:
      - asc
      - desc
  FileSystemStorageImplementation:
    type: string
    description: null
    enum:
      - simplefs
      - niofs
      - mmapfs
      - default_fs
  TranslogDurability:
    type: string
    description: null
    enum:
      - request
      - async
  Normalization:
    type: string
    description: null
    enum:
      - 'no'
      - h1
      - h2
      - h3
      - z
  DFIIndependenceMeasure:
    type: string
    description: null
    enum:
      - standardized
      - saturated
      - chisquared
  DFRAfterEffect:
    type: string
    description: null
    enum:
      - 'no'
      - b
      - l
  DFRBasicModel:
    type: string
    description: null
    enum:
      - be
      - d
      - g
      - if
      - in
      - ine
      - p
  IBDistribution:
    type: string
    description: null
    enum:
      - ll
      - spl
  IBLambda:
    type: string
    description: null
    enum:
      - df
      - ttf
  ShardStoreAllocation:
    type: string
    description: null
    enum:
      - primary
      - replica
      - unused
  ShardRoutingState:
    type: string
    description: null
    enum:
      - UNASSIGNED
      - INITIALIZING
      - STARTED
      - RELOCATING
  ConvertProcessorType:
    type: string
    description: null
    enum:
      - integer
      - long
      - float
      - double
      - string
      - boolean
      - auto
  DateRounding:
    type: string
    description: null
    enum:
      - s
      - m
      - h
      - d
      - w
      - M
      - 'y'
  ShapeType:
    type: string
    description: null
    enum:
      - geo_shape
      - shape
  UserAgentProperty:
    type: string
    description: null
    enum:
      - NAME
      - MAJOR
      - MINOR
      - PATCH
      - OS
      - OS_NAME
      - OS_MAJOR
      - OS_MINOR
      - DEVICE
      - BUILD
  DynamicMapping:
    type: string
    description: null
    enum:
      - strict
  TermVectorOption:
    type: string
    description: null
    enum:
      - 'no'
      - 'yes'
      - with_offsets
      - with_positions
      - with_positions_offsets
      - with_positions_offsets_payloads
  MatchType:
    type: string
    description: null
    enum:
      - simple
      - regex
  FieldType:
    type: string
    description: null
    enum:
      - none
      - geo_point
      - geo_shape
      - ip
      - binary
      - keyword
      - text
      - search_as_you_type
      - date
      - date_nanos
      - boolean
      - completion
      - nested
      - object
      - murmur3
      - token_count
      - percolator
      - integer
      - long
      - short
      - byte
      - float
      - half_float
      - scaled_float
      - double
      - integer_range
      - float_range
      - long_range
      - double_range
      - date_range
      - ip_range
      - alias
      - join
      - rank_feature
      - rank_features
      - flattened
      - shape
  NumberType:
    type: string
    description: null
    enum:
      - float
      - half_float
      - scaled_float
      - double
      - integer
      - long
      - short
      - byte
  RangeType:
    type: string
    description: null
    enum:
      - integer_range
      - float_range
      - long_range
      - double_range
      - date_range
      - ip_range
  IndexOptions:
    type: string
    description: null
    enum:
      - docs
      - freqs
      - positions
      - offsets
  GeoOrientation:
    type: string
    description: null
    enum:
      - ClockWise
      - CounterClockWise
  GeoStrategy:
    type: string
    description: null
    enum:
      - recursive
      - term
  GeoTree:
    type: string
    description: null
    enum:
      - geohash
      - quadtree
  ShapeOrientation:
    type: string
    description: null
    enum:
      - ClockWise
      - CounterClockWise
  AllocationEnable:
    type: string
    description: null
    enum:
      - all
      - primaries
      - new_primaries
      - none
  AllowRebalance:
    type: string
    description: null
    enum:
      - always
      - indices_primaries_active
      - indices_all_active
  RebalanceEnable:
    type: string
    description: null
    enum:
      - all
      - primaries
      - replicas
      - none
  FielddataLoading:
    type: string
    description: null
    enum:
      - eager
      - eager_global_ordinals
  GeoPointFielddataFormat:
    type: string
    description: null
    enum:
      - array
      - doc_values
      - compressed
      - disabled
  NumericFielddataFormat:
    type: string
    description: null
    enum:
      - array
      - disabled
  StringFielddataFormat:
    type: string
    description: null
    enum:
      - paged_bytes
      - disabled
  ScriptLang:
    type: string
    description: null
    enum:
      - painless
      - expression
      - mustache
  Operator:
    type: string
    description: null
    enum:
      - and
      - or
  FunctionBoostMode:
    type: string
    description: null
    enum:
      - multiply
      - replace
      - sum
      - avg
      - max
      - min
  FunctionScoreMode:
    type: string
    description: null
    enum:
      - multiply
      - sum
      - avg
      - first
      - max
      - min
  MultiValueMode:
    type: string
    description: null
    enum:
      - min
      - max
      - avg
      - sum
  FieldValueFactorModifier:
    type: string
    description: null
    enum:
      - none
      - log
      - log1p
      - log2p
      - ln
      - ln1p
      - ln2p
      - square
      - sqrt
      - reciprocal
  TextQueryType:
    type: string
    description: null
    enum:
      - best_fields
      - most_fields
      - cross_fields
      - phrase
      - phrase_prefix
      - bool_prefix
  ZeroTermsQuery:
    type: string
    description: null
    enum:
      - all
      - none
  SimpleQueryStringFlags:
    type: string
    description: null
    enum:
      - NONE
      - AND
      - OR
      - NOT
      - PREFIX
      - PHRASE
      - PRECEDENCE
      - ESCAPE
      - WHITESPACE
      - FUZZY
      - NEAR
      - SLOP
      - ALL
  GeoValidationMethod:
    type: string
    description: null
    enum:
      - coerce
      - ignore_malformed
      - strict
  GeoExecution:
    type: string
    description: null
    enum:
      - memory
      - indexed
  GeoShapeFormat:
    type: string
    description: null
    enum:
      - GeoJson
      - WellKnownText
  CharacterType:
    type: string
    description: null
    enum:
      - Whitespace
      - Alpha
      - Comment
  TokenType:
    type: string
    description: null
    enum:
      - None
      - Word
      - LParen
      - RParen
      - Comma
  ChildScoreMode:
    type: string
    description: null
    enum:
      - none
      - avg
      - sum
      - max
      - min
  NestedScoreMode:
    type: string
    description: null
    enum:
      - avg
      - sum
      - min
      - max
      - none
  RewriteMultiTerm:
    type: string
    description: null
    enum:
      - constant_score
      - scoring_boolean
      - constant_score_boolean
      - top_terms_N
      - top_terms_boost_N
      - top_terms_blended_freqs_N
  RangeRelation:
    type: string
    description: null
    enum:
      - within
      - contains
      - intersects
  VisitorScope:
    type: string
    description: null
    enum:
      - Unknown
      - Query
      - Filter
      - Must
      - MustNot
      - Should
      - PositiveQuery
      - NegativeQuery
      - Span
  BoundaryScanner:
    type: string
    description: null
    enum:
      - chars
      - sentence
      - word
  HighlighterEncoder:
    type: string
    description: null
    enum:
      - default
      - html
  HighlighterFragmenter:
    type: string
    description: null
    enum:
      - simple
      - span
  HighlighterOrder:
    type: string
    description: null
    enum:
      - score
  HighlighterTagsSchema:
    type: string
    description: null
    enum:
      - styled
  HighlighterType:
    type: string
    description: null
    enum:
      - plain
      - fvh
      - unified
  TotalHitsRelation:
    type: string
    description: null
    enum:
      - eq
      - gte
  ScoreMode:
    type: string
    description: null
    enum:
      - avg
      - max
      - min
      - multiply
      - total
  NumericType:
    type: string
    description: null
    enum:
      - long
      - double
      - date
      - date_nanos
  SortMode:
    type: string
    description: null
    enum:
      - min
      - max
      - sum
      - avg
      - median
  SortOrder:
    type: string
    description: null
    enum:
      - asc
      - desc
  SortSpecialField:
    type: string
    description: null
    enum:
      - _score
      - _doc
  StringDistance:
    type: string
    description: null
    enum:
      - internal
      - damerau_levenshtein
      - levenshtein
      - jaro_winkler
      - ngram
  SuggestSort:
    type: string
    description: null
    enum:
      - score
      - frequency
  FollowerIndexStatus:
    type: string
    description: null
    enum:
      - active
      - paused
  LifecycleOperationMode:
    type: string
    description: null
    enum:
      - RUNNING
      - STOPPING
      - STOPPED
  LicenseStatus:
    type: string
    description: null
    enum:
      - active
      - valid
      - invalid
      - expired
  LicenseType:
    type: string
    description: null
    enum:
      - missing
      - trial
      - basic
      - standard
      - dev
      - silver
      - gold
      - platinum
  ChunkingMode:
    type: string
    description: null
    enum:
      - auto
      - manual
      - 'off'
  DatafeedState:
    type: string
    description: null
    enum:
      - started
      - stopped
      - starting
      - stopping
  JobState:
    type: string
    description: null
    enum:
      - closing
      - closed
      - opened
      - failed
      - opening
  MemoryStatus:
    type: string
    description: null
    enum:
      - ok
      - soft_limit
      - hard_limit
  AppliesTo:
    type: string
    description: null
    enum:
      - actual
      - typical
      - diff_from_typical
      - time
  ConditionOperator:
    type: string
    description: null
    enum:
      - gt
      - gte
      - lt
      - lte
  CountFunction:
    type: string
    description: null
    enum:
      - Count
      - HighCount
      - LowCount
  DistinctCountFunction:
    type: string
    description: null
    enum:
      - DistinctCount
      - LowDistinctCount
      - HighDistinctCount
  GeographicFunction:
    type: string
    description: null
    enum:
      - LatLong
  InfoContentFunction:
    type: string
    description: null
    enum:
      - InfoContent
      - HighInfoContent
      - LowInfoContent
  MetricFunction:
    type: string
    description: null
    enum:
      - Min
      - Max
      - Median
      - HighMedian
      - LowMedian
      - Mean
      - HighMean
      - LowMean
      - Metric
      - Varp
      - HighVarp
      - LowVarp
  NonNullSumFunction:
    type: string
    description: null
    enum:
      - NonNullSum
      - HighNonNullSum
      - LowNonNullSum
  NonZeroCountFunction:
    type: string
    description: null
    enum:
      - NonZeroCount
      - LowNonZeroCount
      - HighNonZeroCount
  RareFunction:
    type: string
    description: null
    enum:
      - Rare
      - FreqRare
  RuleAction:
    type: string
    description: null
    enum:
      - skip_result
      - skip_model_update
  RuleFilterType:
    type: string
    description: null
    enum:
      - include
      - exclude
  SumFunction:
    type: string
    description: null
    enum:
      - Sum
      - HighSum
      - LowSum
  TimeFunction:
    type: string
    description: null
    enum:
      - TimeOfDay
      - TimeOfWeek
  ExcludeFrequent:
    type: string
    description: null
    enum:
      - all
      - none
      - by
      - over
  DeprecationWarningLevel:
    type: string
    description: null
    enum:
      - none
      - info
      - warning
      - critical
  IndexingJobState:
    type: string
    description: null
    enum:
      - started
      - indexing
      - stopping
      - stopped
      - aborting
  RollupMetric:
    type: string
    description: null
    enum:
      - min
      - max
      - sum
      - avg
      - value_count
  AccessTokenGrantType:
    type: string
    description: null
    enum:
      - password
  AcknowledgementState:
    type: string
    description: null
    enum:
      - awaits_successful_execution
      - ackable
      - acked
  ActionType:
    type: string
    description: null
    enum:
      - email
      - webhook
      - index
      - logging
      - slack
      - pagerduty
  DataAttachmentFormat:
    type: string
    description: null
    enum:
      - json
      - yaml
  EmailPriority:
    type: string
    description: null
    enum:
      - lowest
      - low
      - normal
      - high
      - highest
  PagerDutyContextType:
    type: string
    description: null
    enum:
      - link
      - image
  PagerDutyEventType:
    type: string
    description: null
    enum:
      - trigger
      - resolve
      - acknowledge
  ConditionType:
    type: string
    description: null
    enum:
      - always
      - never
      - script
      - compare
      - array_compare
  Quantifier:
    type: string
    description: null
    enum:
      - some
      - all
  ActionExecutionState:
    type: string
    description: null
    enum:
      - awaits_execution
      - checking
      - execution_not_needed
      - throttled
      - executed
      - failed
      - deleted_while_queued
      - not_executed_already_queued
  ActionExecutionMode:
    type: string
    description: null
    enum:
      - simulate
      - force_simulate
      - execute
      - force_execute
      - skip
  Status:
    type: string
    description: null
    enum:
      - success
      - failure
      - simulated
      - throttled
  ConnectionScheme:
    type: string
    description: null
    enum:
      - http
      - https
  HttpInputMethod:
    type: string
    description: null
    enum:
      - head
      - get
      - post
      - put
      - delete
  InputType:
    type: string
    description: null
    enum:
      - http
      - search
      - simple
  ResponseContentType:
    type: string
    description: null
    enum:
      - json
      - yaml
      - text
  Day:
    type: string
    description: null
    enum:
      - sunday
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
  IntervalUnit:
    type: string
    description: null
    enum:
      - s
      - m
      - h
      - d
      - w
  Month:
    type: string
    description: null
    enum:
      - january
      - february
      - march
      - april
      - may
      - june
      - july
      - august
      - september
      - october
      - november
      - december
  ExecutionPhase:
    type: string
    description: null
    enum:
      - awaits_execution
      - started
      - input
      - condition
      - actions
      - watch_transform
      - aborted
      - finished
  WatcherState:
    type: string
    description: null
    enum:
      - stopped
      - starting
      - started
      - stopping
