{"version":3,"sources":["pages/indices/jdbc/index.js","utils.js","redux/actions/jdbcActions.js"],"names":["drivers","JdbcDrivers","JdbcDriversURL","Card","styled","MuiCard","spacing","Divider","MuiDivider","TextField","MuiTextField","fields","id","label","sorting","JdbcTable","dispatch","authUser","JdbcList","handleAccessFlag","useState","jdbcSourceEditDialogOpen","setJdbcSourceEditDialogOpenAction","jdbcListIndex","setJdbcListIndex","processConnTest","setProcessConnTest","orderBy","setOrderBy","order","setOrder","editId","useRef","editName","editDriver","editUser","editPassword","editURL","handleEditDialogClose","event","viewJdbcList","sort","a","b","map","v","i","no","Fragment","width","field","align","key","active","direction","onClick","isAsc","role","index","length","x","y","item","password","sourceAsMap","star","substring","style","whiteSpace","wordBreak","name","driver","url","user","variant","color","disabled","jdbcSourceObj","setJDBCAccessTest","setTimeout","accessTestFromTable","colSpan","open","onClose","JdbcSourceEdit","JdbcListIndex","backgroundColor","JdbcSource","hits","deleteJdbcSource","flex","editJdbcSource","current","value","updateJdbcSource","p","display","m","alignItems","justifyContent","placeholder","fullWidth","defaultValue","inputRef","type","errorHandleJdbcSource","jdbcId","jdbcName","jdbcDriver","jdbcAddr","jdbcPort","jdbcDB","jdbcUser","jdbcPassword","jdbcParams","jdbcURL","setProvider","handleJdbcURL","error","size","onChange","address","port","db_name","params","JdbcCard","JdbcAccessTest","changedJdbcList","jdbcSourceDialogOpen","setjdbcSourceDialogOpenAction","jdbcProvider","setJdbcProvider","accessFlag","setAccessFlag","setErrorHandleJdbcSource","utils","sleep","then","setJDBCList","setJdbcURL","flag","handleSourceDialogClose","cursor","mb","target","change","jdbcdSourceObj","addJdbcSource","provider","addJdbcIndex","autoHideDuration","message","elevation","severity","connect","store","dsearchReducers","jdbcReducers","useEffect","title","gutterBottom","my","container","xs","ms","Promise","resolve","client","Client","call","uri","method","response","SET_JDBC_LIST","payload","data","SET_JDBC_ACCESS_TEST","console","log","SET_JDBC_ADD_RESULT","SET_JDBC_DELETE_RESULT","SET_JDBC_UPDATE_RESULT"],"mappings":"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","file":"static/js/56.10051b81.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport Helmet from 'react-helmet';\r\nimport utils from \"../../../utils\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider as MuiDivider,\r\n    Grid,\r\n    Link,\r\n    MenuItem,\r\n    Select,\r\n    Snackbar,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField as MuiTextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {addJdbcIndex, deleteJdbcSource, setJDBCAccessTest, setJDBCList, updateJdbcSource} from '@actions/jdbcActions'\r\n\r\nconst drivers = [\"Altibase\", \"Oracle\", \"Mysql\"];\r\nconst JdbcDrivers = {\r\n    \"Altibase\": \"Altibase.jdbc.driver.AltibaseDriver\",\r\n    \"Oracle\": \"oracle.jdbc.driver.OracleDriver\",\r\n    \"Mysql\":\"com.mysql.cj.jdbc.Driver\"\r\n}\r\nconst JdbcDriversURL = {\r\n    \"Altibase\": \"jdbc:Altibase://\",\r\n    \"Oracle\": \"jdbc:oracle:thin:@\",\r\n    \"Mysql\":\"jdbc:mysql://\"\r\n}\r\n\r\n\r\n// const NavLink = React.forwardRef((props, ref) => (\r\n//     <RouterNavLink innerRef={ref} {...props} />\r\n// ));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\n\r\nconst fields = [\r\n    { id: \"no\", label: \"#\", sorting: false},\r\n    { id: \"id\", label: \"아이디\", sorting: true},\r\n    { id: \"name\", label: \"이름\", sorting: true},\r\n    { id: \"driver\", label: \"드라이버\", sorting: true},\r\n    { id: \"url\", label: \"URL\", sorting: false},\r\n    { id: \"user\", label: \"사용자\", sorting: false},\r\n    { id: \"password\", label: \"비밀번호\", sorting: false},\r\n    { id: \"test\", label: \"테스트\", sorting: false},\r\n]\r\n\r\nfunction JdbcTable({dispatch, authUser, JdbcList, handleAccessFlag}){\r\n    const [jdbcSourceEditDialogOpen, setJdbcSourceEditDialogOpenAction] = useState(false)\r\n    const [jdbcListIndex, setJdbcListIndex] = useState(-1)\r\n    const [processConnTest, setProcessConnTest] = useState(false)\r\n    const [orderBy, setOrderBy] = useState(\"\")\r\n    const [order, setOrder] = useState(\"asc\")\r\n\r\n    let editId = useRef(\"\");\r\n    let editName = useRef(\"\");\r\n    let editDriver = useRef(\"\");\r\n    let editUser = useRef(\"\");\r\n    let editPassword = useRef(\"\");\r\n    let editURL = useRef(\"\");\r\n\r\n    const handleEditJdbcSource = (event) => {\r\n        let JdbcSource = JdbcList.hits.hits[jdbcListIndex];\r\n        let editJdbcSource = {};\r\n\r\n        editJdbcSource.id = editId.current.value;\r\n        editJdbcSource.name = editName.current.value;\r\n        editJdbcSource.driver = editDriver.current.value;\r\n        editJdbcSource.user = editUser.current.value;\r\n        if(editPassword.current.value.length !== 0 ) editJdbcSource.password = editPassword.current.value;\r\n        editJdbcSource.url = editURL.current.value;\r\n        let doc = {}\r\n        doc.doc = editJdbcSource;\r\n        dispatch(updateJdbcSource(JdbcSource.id, editJdbcSource));\r\n        setJdbcSourceEditDialogOpenAction(false)\r\n    }\r\n\r\n    const handleDeleteJdbcSource = (event) => {\r\n        let JdbcSource = JdbcList.hits.hits[jdbcListIndex];\r\n        dispatch(deleteJdbcSource(JdbcSource.id))\r\n        setJdbcSourceEditDialogOpenAction(false);\r\n    };\r\n\r\n    const handleEditDialogClose = (event) => {\r\n        setJdbcSourceEditDialogOpenAction(false)\r\n    };\r\n\r\n    const handleEditDialogOpen = (id) => {\r\n        setJdbcListIndex(id);\r\n        setJdbcSourceEditDialogOpenAction(true)\r\n    };\r\n\r\n    function accessTestFromTable(item){\r\n        setProcessConnTest(true)\r\n\r\n        let jdbcSourceObj = {};\r\n        jdbcSourceObj.driver = item.sourceAsMap.driver;\r\n        jdbcSourceObj.user = item.sourceAsMap.user;\r\n        jdbcSourceObj.password = item.sourceAsMap.password;\r\n        jdbcSourceObj.url = item.sourceAsMap.url;\r\n        dispatch(setJDBCAccessTest(jdbcSourceObj))\r\n        setTimeout(() => {\r\n            setProcessConnTest(false)\r\n            handleAccessFlag(true);\r\n        }, 500)\r\n    }\r\n\r\n    // let sortedIndices = indices\r\n    //     .filter(index => checked ? true : index['index'].startsWith(\".\") === false )\r\n    //     .map((index, no) => { return index; })\r\n    //     .sort((a, b) => {\r\n    //         if(a['index'] > b['index']){\r\n    //             return 1;\r\n    //         }else if(a['index'] < b['index']){\r\n    //             return -1;\r\n    //         }else{\r\n    //             return 0;\r\n    //         }\r\n    //     })\r\n    //     .map((c, i) => ({...c, no: i }))\r\n\r\n    const viewJdbcList = ((JdbcList['hits']||{})['hits']||[]).sort((a, b) => {\r\n        if(((a['sourceAsMap']||{})['id']||'') > ((b['sourceAsMap']||{})['id']||'')){\r\n            return 1;\r\n        }else if(((a['sourceAsMap']||{})['id']||'') < ((b['sourceAsMap']||{})['id']||'')){\r\n            return -1;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }).map((v, i) => ({...v, no: i }))\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table>\r\n                <colgroup>\r\n                    <col width=\"1%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"13%\" />\r\n                    <col width=\"20%\" />\r\n                    <col width=\"30%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"5%\" />\r\n                </colgroup>\r\n                <TableHead>\r\n                    <TableRow>\r\n\r\n                        {\r\n                            fields.map(field =>\r\n                                <TableCell align=\"center\" key={field['id']}>\r\n                                    {\r\n                                        field[\"sorting\"] ?\r\n                                            <TableSortLabel\r\n                                                active={orderBy === field['id']}\r\n                                                direction={orderBy === field['id'] ? order : 'asc'}\r\n                                                onClick={event => {\r\n                                                    setOrderBy(field['id'])\r\n                                                    const isAsc = orderBy === field['id'] && order === 'asc';\r\n                                                    setOrder(isAsc ? 'desc' : 'asc');\r\n                                                }}\r\n                                            >\r\n                                                {field['label']}\r\n                                            </TableSortLabel>\r\n                                            :\r\n                                            field['label']\r\n                                    }\r\n                                </TableCell>)\r\n                        }\r\n                        {/*<TableCell>#</TableCell>*/}\r\n                        {/*<TableCell>아이디</TableCell>*/}\r\n                        {/*<TableCell>이름</TableCell>*/}\r\n                        {/*<TableCell>드라이버</TableCell>*/}\r\n                        {/*<TableCell>URL</TableCell>*/}\r\n                        {/*<TableCell>사용자</TableCell>*/}\r\n                        {/*<TableCell>비밀번호</TableCell>*/}\r\n                        {/*<TableCell align={\"center\"}>테스트</TableCell>*/}\r\n\r\n                        {authUser.role.index ? <TableCell align={\"center\"}> 액션</TableCell> : null}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        viewJdbcList.length > 0 ?\r\n                            viewJdbcList\r\n                                .sort((a, b) => {\r\n                                    if (orderBy && order) {\r\n                                        let x = (a['sourceAsMap']||{})[orderBy]||''\r\n                                        let y = (b['sourceAsMap']||{})[orderBy]||''\r\n                                        if (order === 'asc') {\r\n                                            return x > y ? 1 : -1\r\n                                        } else {\r\n                                            return x > y ? -1 : 1\r\n                                        }\r\n                                    } else {\r\n                                        return 0\r\n                                    }})\r\n                                .map((item, index)=>{\r\n                                    let password = item.sourceAsMap.password;\r\n                                    let star = \"\";\r\n\r\n                                    for(let i = 0; i < password.length-3; i++){\r\n                                        star += \"*\";\r\n                                    }\r\n\r\n                                    password = password.substring(0, 2) + star + password.substring(password.length-1, password.length);\r\n                                    return <TableRow key={item.sourceAsMap.id}>\r\n                                        <TableCell style={{whiteSpace: \"nowrap\"}}>{item['no'] + 1}</TableCell>\r\n                                        {/* <TableCell style={{whiteSpace: \"nowrap\"}}>{item.sourceAsMap.id}</TableCell>\r\n                                        <TableCell style={{whiteSpace: \"nowrap\"}}>{item.sourceAsMap.name}</TableCell>\r\n                                        <TableCell style={{whiteSpace: \"nowrap\", wordBreak:\"break-all\"}}>{item.sourceAsMap.driver}</TableCell>\r\n                                        <TableCell style={{whiteSpace: \"nowrap\", wordBreak:\"break-all\"}}>{item.sourceAsMap.url}</TableCell> */}\r\n                                        <TableCell style={{wordBreak: \"break-word\"}}>{item.sourceAsMap.id}</TableCell>\r\n                                        <TableCell style={{wordBreak: \"break-word\"}}>{item.sourceAsMap.name}</TableCell>\r\n                                        <TableCell style={{wordBreak: \"break-all\"}}>{item.sourceAsMap.driver}</TableCell>\r\n                                        <TableCell style={{wordBreak: \"break-all\"}}>{item.sourceAsMap.url}</TableCell>\r\n\r\n                                        <TableCell style={{whiteSpace: \"nowrap\"}}>{item.sourceAsMap.user}</TableCell>\r\n                                        <TableCell style={{whiteSpace: \"nowrap\"}}>{password}</TableCell>\r\n                                        {/* <TableCell>{item._source.password}</TableCell> */}\r\n                                        <TableCell style={{whiteSpace: \"nowrap\"}}>\r\n                                            <Button variant={\"outlined\"} color={\"primary\"} disabled={processConnTest} onClick={()=>accessTestFromTable(item)}> 연결테스트 </Button>\r\n                                        </TableCell>\r\n                                        {authUser.role.index ?\r\n                                            <TableCell>\r\n                                                <Button variant={\"outlined\"} id={index} color={\"primary\"} style={{whiteSpace: \"nowrap\"}} onClick={() => handleEditDialogOpen(index)}>수정</Button>\r\n                                            </TableCell>\r\n                                            :\r\n                                            <TableCell></TableCell>\r\n                                        }\r\n                                    </TableRow>\r\n                                })\r\n                                :\r\n                                (\r\n                                    <TableRow><TableCell align=\"center\" colSpan={9}>{\"현재 등록된 JDBC가 없습니다.\"}</TableCell></TableRow>\r\n                                )\r\n                    }\r\n\r\n                </TableBody>\r\n            </Table>\r\n            <Dialog open={jdbcSourceEditDialogOpen} onClose={handleEditDialogClose} >\r\n                <DialogTitle id=\"dialog-title\">{\"JDBC 소스\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <label>설정</label>\r\n                    <Divider></Divider>\r\n                    <JdbcSourceEdit\r\n                        JdbcList={JdbcList}\r\n                        JdbcListIndex={jdbcListIndex}\r\n                        editId = {editId}\r\n                        editName = {editName}\r\n                        editDriver ={editDriver}\r\n                        editUser = {editUser}\r\n                        editPassword = {editPassword}\r\n                        editURL = {editURL}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions >\r\n                    <Button variant=\"contained\" style={{backgroundColor:\"red\", color:\"white\"}} onClick={handleDeleteJdbcSource}>삭제</Button>\r\n                    <div style={{flex: '1 0 0'}} />\r\n                    <Button variant=\"contained\" color=\"default\" onClick={handleEditDialogClose}>닫기</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleEditJdbcSource}>저장</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction JdbcSourceEdit({JdbcList, JdbcListIndex, editId, editName, editDriver, editURL, editUser, editPassword}){\r\n    let JdbcSource = JdbcList.hits.hits[JdbcListIndex];\r\n\r\n    return(\r\n        <Box p={2}>\r\n            <Box display=\"flex\" m={3}  alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>아이디</Typography>\r\n                <TextField placeholder=\"ID\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).id} inputRef={editId} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>이름</Typography>\r\n                <TextField placeholder=\"Name\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap|| {}).name} inputRef={editName}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{ width: \"150px\" }}>드라이버</Typography>\r\n                <TextField placeholder=\"Driver\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).driver} inputRef={editDriver}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>URL</Typography>\r\n                <TextField placeholder=\"jdbc:Altibase://localhost:3306/\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).url} inputRef={editURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>사용자</Typography>\r\n                <TextField placeholder=\"USER\" fullWidth variant=\"outlined\" defaultValue={((JdbcSource||{}).sourceAsMap||{}).user} inputRef={editUser}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>비밀번호</Typography>\r\n                <TextField placeholder=\"PASSWORD (LEAVE BLANK IF YOU DON'T WANT CHANGE)\" fullWidth variant=\"outlined\" type=\"password\" inputRef={editPassword}/>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction JdbcSource({errorHandleJdbcSource, jdbcId, jdbcName, jdbcDriver, jdbcAddr, jdbcPort, jdbcDB, jdbcUser, jdbcPassword, jdbcParams, jdbcURL, setProvider, handleJdbcURL}){\r\n    return (\r\n        <Box p={2}>\r\n            <Box display=\"flex\" m={3}  alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>아이디</Typography>\r\n                <TextField error={errorHandleJdbcSource.id} id=\"jdbcSourceId\" size=\"small\" placeholder=\"ID\" fullWidth variant=\"outlined\"  inputRef={jdbcId}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>이름</Typography>\r\n                <TextField error={errorHandleJdbcSource.name} id=\"jdbcSourceName\" size=\"small\" placeholder=\"Name\" fullWidth variant=\"outlined\" inputRef={jdbcName}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{ width: \"150px\" }}>DB제공자</Typography>\r\n                <Select id=\"jdbcSourceDriver\" fullWidth onChange={setProvider} defaultValue=\"\">\r\n                    {drivers.map((item, index) => {\r\n                        if(index === 0) return <MenuItem key={item} value={item}> {item} Driver</MenuItem>;\r\n                        return <MenuItem key={item} value={item}> {item} Driver</MenuItem>;\r\n                    })}\r\n                </Select>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>드라이버</Typography>\r\n                <TextField error={errorHandleJdbcSource.driver} id=\"jdbcSourceDbSupport\" size=\"small\" fullWidth variant=\"outlined\" inputRef={jdbcDriver} onChange={handleJdbcURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>호스트주소</Typography>\r\n                <TextField error={errorHandleJdbcSource.address} id=\"jdbcSourceHostAddress\" size=\"small\" placeholder=\"127.0.0.1\" fullWidth variant=\"outlined\" inputRef={jdbcAddr} onChange={handleJdbcURL} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>포트</Typography>\r\n                <TextField error={errorHandleJdbcSource.port} id=\"jdbcSourcePort\" size=\"small\" placeholder=\"3306\" fullWidth variant=\"outlined\" inputRef={jdbcPort} onChange={handleJdbcURL} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>DB명</Typography>\r\n                <TextField error={errorHandleJdbcSource.db_name} id=\"jdbcSourceDbName\" size=\"small\" fullWidth variant=\"outlined\" inputRef={jdbcDB} onChange={handleJdbcURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>사용자</Typography>\r\n                <TextField error={errorHandleJdbcSource.user} id=\"jdbcSourceUser\" size=\"small\" placeholder=\"USER\" fullWidth variant=\"outlined\" inputRef ={jdbcUser} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>비밀번호</Typography>\r\n                <TextField error={errorHandleJdbcSource.password} id=\"jdbcSourcePassword\" type=\"password\" size=\"small\" placeholder=\"PASSWORD\" fullWidth variant=\"outlined\" inputRef={jdbcPassword} />\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>JDBC파라미터</Typography>\r\n                <TextField error={errorHandleJdbcSource.params} id=\"jdbcSourceParams\" size=\"small\" fullWidth variant=\"outlined\" inputRef={jdbcParams} placeholder=\"characterEncoding=utf-8\" onChange={handleJdbcURL}/>\r\n            </Box>\r\n            <Box display=\"flex\" m={3} alignItems=\"center\" justifyContent=\"right\">\r\n                <Typography style={{width:\"150px\"}}>URL</Typography>\r\n                {/* <TextField error={errorHandleJdbcSource.url} disabled id=\"jdbcSourceURL\" size=\"small\" placeholder=\"jdbc:mysql://\" fullWidth variant=\"outlined\" inputRef={jdbcURL}/> */}\r\n                <TextField error={errorHandleJdbcSource.url} id=\"jdbcSourceURL\" size=\"small\" placeholder=\"jdbc:mysql://\" fullWidth variant=\"outlined\" value={jdbcURL}/>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nfunction JdbcCard({dispatch, authUser, JdbcList, JdbcAccessTest, changedJdbcList}) {\r\n    const [jdbcSourceDialogOpen, setjdbcSourceDialogOpenAction] = useState(false)\r\n    const [jdbcProvider, setJdbcProvider] = useState(\"\");\r\n    const [accessFlag, setAccessFlag] = useState(false);\r\n    const [errorHandleJdbcSource, setErrorHandleJdbcSource] = useState({\r\n        id: false,\r\n        name: false,\r\n        driver: false,\r\n        address: false,\r\n        port: false,\r\n        db_name: false,\r\n        user: false,\r\n        password: false,\r\n        params: false,\r\n        url: false\r\n    });\r\n\r\n    if(changedJdbcList) {\r\n        utils.sleep(1000).then(() => {dispatch(setJDBCList());})\r\n    }\r\n\r\n    let jdbcId = useRef(\"\");\r\n    let jdbcName = useRef(\"\");\r\n    let jdbcDriver = useRef(\"\");\r\n    let jdbcAddr = useRef(\"\");\r\n    let jdbcPort = useRef(\"\");\r\n    let jdbcDB = useRef(\"\");\r\n    let jdbcUser = useRef(\"\");\r\n    let jdbcPassword = useRef(\"\");\r\n    let jdbcParams = useRef(\"\");\r\n    // let jdbcURL = useRef(\"\");\r\n    let [jdbcURL, setJdbcURL] = useState(\"\");\r\n\r\n    function handleJdbcURL(){\r\n        let url = \"\";\r\n        if(jdbcParams.current.value !== null && jdbcParams.current.value.length > 0)\r\n            url = JdbcDriversURL[jdbcProvider] + jdbcAddr.current.value + \":\"+ jdbcPort.current.value + \"/\" + jdbcDB.current.value + \"?\" + jdbcParams.current.value;\r\n        else\r\n            url = JdbcDriversURL[jdbcProvider] + jdbcAddr.current.value + \":\"+ jdbcPort.current.value + \"/\" + jdbcDB.current.value;\r\n        setJdbcURL(url);\r\n    }\r\n\r\n    function handleAccessFlag(flag){\r\n        setAccessFlag(flag)\r\n    }\r\n\r\n    function setProvider(event, index){\r\n        jdbcDriver.current.value = JdbcDrivers[event.target.value]\r\n        setJdbcProvider(event.target.value);\r\n    }\r\n\r\n    const handleSourceDialogClose = (event) => {\r\n        setjdbcSourceDialogOpenAction(false)\r\n    };\r\n\r\n    const handleSourceDialogOpen = (event) => {\r\n        /* 에러 초기화 */\r\n        setErrorHandleJdbcSource({\r\n            id: false,\r\n            name: false,\r\n            driver: false,\r\n            address: false,\r\n            port: false,\r\n            db_name: false,\r\n            user: false,\r\n            password: false,\r\n            params: false,\r\n            url: false\r\n        })\r\n        setjdbcSourceDialogOpenAction(true)\r\n    };\r\n    \r\n    const accessTest = (event) => {\r\n        let flag = false;\r\n        let change = {\r\n            id: false,\r\n            name: false,\r\n            driver: false,\r\n            address: false,\r\n            port: false,\r\n            db_name: false,\r\n            user: false,\r\n            password: false,\r\n            params: false,\r\n            url: false\r\n        };\r\n        \r\n        if( jdbcId.current.value.length === 0) { flag = true; change.id = true; }\r\n        if(jdbcName.current.value.length === 0){ flag = true; change.name = true; }\r\n        if(jdbcDriver.current.value.length === 0){ flag = true; change.driver = true; }\r\n        if(jdbcAddr.current.value.length === 0){ flag = true; change.address = true; }\r\n        if(jdbcPort.current.value.length === 0){ flag = true; change.port = true; }\r\n        if(jdbcUser.current.value.length === 0){ flag = true; change.user = true; }\r\n        if(jdbcPassword.current.value.length === 0){ flag = true; change.password = true; }\r\n        // if(jdbcURL.current.value.length === 0) { flag = true; change.url = true; }\r\n        if(jdbcDB.current.value.length === 0) { flag = true; change.db_name = true; }\r\n        if(jdbcURL.length === 0) { flag = true; change.url = true; }\r\n\r\n        if(flag){\r\n            setErrorHandleJdbcSource(change);\r\n            return;\r\n        }\r\n\r\n        let jdbcdSourceObj = {};\r\n        jdbcdSourceObj.driver = jdbcDriver.current.value;\r\n        jdbcdSourceObj.user = jdbcUser.current.value;\r\n        jdbcdSourceObj.password = jdbcPassword.current.value;\r\n        jdbcdSourceObj.url = jdbcURL\r\n        dispatch(setJDBCAccessTest(jdbcdSourceObj)).then(() => {\r\n            setAccessFlag(true);\r\n        });\r\n    }\r\n\r\n    /* 연결테스트를 하지 않아도 추가할 수 있어야 함*/\r\n    const addJdbcSouce = (event) => {\r\n        let flag = false;\r\n        let change = {\r\n            id: false,\r\n            name: false,\r\n            driver: false,\r\n            address: false,\r\n            port: false,\r\n            db_name: false,\r\n            user: false,\r\n            password: false,\r\n            params: false,\r\n            url: false\r\n        };\r\n        \r\n        if( jdbcId.current.value.length === 0) { flag = true; change.id = true; }\r\n        if(jdbcName.current.value.length === 0){ flag = true; change.name = true; }\r\n        if(jdbcDriver.current.value.length === 0){ flag = true; change.driver = true; }\r\n        if(jdbcAddr.current.value.length === 0){ flag = true; change.address = true; }\r\n        if(jdbcPort.current.value.length === 0){ flag = true; change.port = true; }\r\n        if(jdbcUser.current.value.length === 0){ flag = true; change.user = true; }\r\n        if(jdbcPassword.current.value.length === 0){ flag = true; change.password = true; }\r\n        if(jdbcDB.current.value.length === 0) { flag = true; change.db_name = true; }\r\n        if(jdbcURL.length === 0) { flag = true; change.url = true; }\r\n        // if(jdbcURL.current.value.length === 0) { flag = true; change.url = true; }\r\n\r\n        if(flag){\r\n            setErrorHandleJdbcSource(change);\r\n            return;\r\n        }\r\n        \r\n        let addJdbcSource = {};\r\n        addJdbcSource.id = jdbcId.current.value\r\n        addJdbcSource.name =  jdbcName.current.value\r\n        addJdbcSource.provider = jdbcProvider;\r\n        addJdbcSource.driver = jdbcDriver.current.value;\r\n        addJdbcSource.address = jdbcAddr.current.value;\r\n        addJdbcSource.port = jdbcPort.current.value;\r\n        addJdbcSource.db_name = jdbcDB.current.value;\r\n        addJdbcSource.user = jdbcUser.current.value;\r\n        addJdbcSource.password = jdbcPassword.current.value;\r\n        addJdbcSource.params = jdbcParams.current.value;\r\n        addJdbcSource.url = jdbcURL;\r\n        setjdbcSourceDialogOpenAction(false);\r\n        dispatch(addJdbcIndex(addJdbcSource))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box align={'right'}>\r\n                {\r\n                    authUser.role.index ?\r\n                    <Link onClick={handleSourceDialogOpen}\r\n                          style={{cursor: \"pointer\"}}\r\n                          color={\"primary\"}>\r\n                        JDBC 추가\r\n                    </Link>\r\n                    :\r\n                    <></>\r\n                }\r\n            </Box>\r\n            <br/>\r\n\r\n            <Card mb={6}>\r\n                <CardContent>\r\n                    <JdbcTable dispatch={dispatch} authUser={authUser} JdbcList={JdbcList} handleAccessFlag={handleAccessFlag} changedJdbcList={changedJdbcList}></JdbcTable>\r\n                    <Dialog open={jdbcSourceDialogOpen} onClose={handleSourceDialogClose} >\r\n                        <DialogTitle id=\"dialog-title\">{\"JDBC 소스\"}</DialogTitle>\r\n                        <DialogContent style={{ width: \"100%\" }}>\r\n                            <label>설정</label>\r\n                            <Divider />\r\n                            <JdbcSource\r\n                                errorHandleJdbcSource={errorHandleJdbcSource}\r\n                                jdbcId={jdbcId}\r\n                                jdbcName={jdbcName}\r\n                                jdbcDriver ={jdbcDriver}\r\n                                handleJdbcURL = {handleJdbcURL}\r\n                                setProvider = {setProvider}\r\n                                jdbcAddr ={jdbcAddr}\r\n                                jdbcPort = {jdbcPort}\r\n                                jdbcDB = {jdbcDB}\r\n                                jdbcUser = {jdbcUser}\r\n                                jdbcPassword = {jdbcPassword}\r\n                                jdbcParams = {jdbcParams}\r\n                                jdbcURL = {jdbcURL}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button variant=\"contained\" color=\"default\" onClick={handleSourceDialogClose}>닫기</Button>\r\n                            <Button variant=\"outlined\" onClick={accessTest}>연결테스트</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={addJdbcSouce}>추가</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Snackbar open={accessFlag} autoHideDuration={3000} onClose={() => { handleAccessFlag(false); JdbcAccessTest.message = false; }}>\r\n                        {JdbcAccessTest.message ?\r\n                            <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">{\"연결테스트 성공\"} </MuiAlert> : <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">{\"연결테스트 실패\"}</MuiAlert>}\r\n                    </Snackbar>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction JDBC({dispatch, authUser, JdbcList, JdbcAccessTest, changedJdbcList}) {\r\n    useEffect(() => {\r\n        dispatch(setJDBCList())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"JDBC\"/>\r\n            <Typography variant=\"h3\" gutterBottom display=\"inline\">JDBC</Typography>\r\n            <Divider my={6}/>\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12}>\r\n                    <JdbcCard dispatch={dispatch} authUser={authUser} JdbcList={JdbcList} JdbcAccessTest={JdbcAccessTest} changedJdbcList={changedJdbcList} />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    JdbcList: store.jdbcReducers.JdbcList,\r\n    JdbcAccessTest: store.jdbcReducers.JdbcAccessTest,\r\n    changedJdbcList: store.jdbcReducers.changedJdbcList\r\n}))(JDBC);\r\n\r\n","const utils ={\r\n    sleep:(ms) => new Promise(resolve => setTimeout(resolve, ms)),\r\n\r\n\r\n\r\n}\r\n\r\nexport default utils","import {\r\n    SET_JDBC_ACCESS_TEST,\r\n    SET_JDBC_ADD_RESULT,\r\n    SET_JDBC_DELETE_RESULT,\r\n    SET_JDBC_LIST,\r\n    SET_JDBC_UPDATE_RESULT\r\n} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setJDBCList = () => dispatch => client.call({\r\n    uri: \"/jdbc/list\",\r\n    method: \"GET\"\r\n}).then(response => dispatch({type: SET_JDBC_LIST, payload: response.data}))\r\n\r\nexport const setJDBCAccessTest = (data) => dispatch => client.call({\r\n    uri: \"/jdbc/\",\r\n    method: \"POST\",\r\n    data: data\r\n}).then(response => {\r\n    dispatch({type:SET_JDBC_ACCESS_TEST , payload: response.data}); console.log(response);\r\n    return true\r\n})\r\n\r\nexport const addJdbcIndex = (data) => dispatch => client.call({\r\n    uri: \"/jdbc/add\",\r\n    method: 'PUT',\r\n    data: data\r\n}).then(response => dispatch({ type: SET_JDBC_ADD_RESULT, payload: response.data}))\r\n\r\nexport const deleteJdbcSource = (id) => dispatch => client.call({\r\n    uri: \"/jdbc/delete/\" + id,\r\n    method: 'DELETE'\r\n}).then(response => dispatch({type: SET_JDBC_DELETE_RESULT, payload: response.data}))\r\n\r\nexport const updateJdbcSource = (id, data) => dispatch => client.call({\r\n    uri: \"/jdbc/update/\" + id,\r\n    method: 'POST',\r\n    data: data\r\n}).then(response => dispatch({type: SET_JDBC_UPDATE_RESULT, payload: response.data}))"],"sourceRoot":""}