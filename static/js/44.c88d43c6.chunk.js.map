{"version":3,"sources":["pages/indices/index/Mapping.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/flat/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/Json2Html/index.js"],"names":["useStyles","makeStyles","theme","formControl","minWidth","root","flexGrow","width","edit","addIcon","verticalAlign","table","padding","Box","styled","MuiBox","spacing","positions","Card","MuiCard","FormCard","json","m","style","overflow","Json2html","JSON","stringify","type","JsonCard","classes","rowsMin","className","disabled","value","connect","store","indicesReducers","mappings","React","useState","chk","setChk","handleRadioChange","e","target","Fragment","component","row","aria-label","name","defaultValue","checked","onChange","control","color","label","mt","tablelvl2","variant","TableHead","props","ref","_props$component","Component","other","_objectWithoutProperties","Tablelvl2Context","Provider","_extends","clsx","withStyles","display","isBuffer","obj","constructor","keyIdentity","key","flatten","opts","delimiter","maxDepth","transformKey","output","step","object","prev","currentDepth","Object","keys","forEach","isarray","safe","Array","isArray","prototype","toString","call","isbuffer","isobject","newKey","length","module","exports","unflatten","overwrite","result","getkey","parsedKey","Number","isNaN","indexOf","reduce","val","isObject","isEmpty","keyPrefix","recipient","addKeys","split","map","key1","shift","key2","undefined","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","concat","capitalize","fontSize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","Typography","MuiTypography","Render","validJson","parse","error","topFields","title","cursor","flatJsonMap","flat","formatKeyFlatJsonMap","replaceKey","replace","sortKey","substring","lastIndexOf","suffix","border","cellSpacing","cellPadding","field","filter","endsWith","index","etc","k","find","o","align","replaceAll","join","MappingsJson2html","settings","flatSettingsMap","SettingsJson2html","minHeight"],"mappings":"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","file":"static/js/44.c88d43c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport styled from \"styled-components\";\r\nimport Json2html from \"~/components/Json2Html\"\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextareaAutosize\r\n} from \"@material-ui/core\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {positions, spacing} from \"@material-ui/system\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    edit: {\r\n        width: '100%'\r\n    },\r\n    addIcon: {\r\n        verticalAlign: \"top\"\r\n    },\r\n    table: {\r\n        padding: '10px'\r\n    },\r\n}));\r\n\r\nconst Box = styled(MuiBox)(spacing, positions);\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\n// const fieldsKeyword = \"fields.\"\r\n// const propertiesKeyword = \"properties.\"\r\n// function parsing(object) {\r\n//     let group1 = {}\r\n//     Object.keys(object).forEach(fullKey => {\r\n//         function getKey(fullKey) {\r\n//             const fieldKey = fullKey.substring(0, fullKey.indexOf(\".\"))\r\n//             const childFullKey = fullKey.substring(fieldKey.length + 1)\r\n//             let tmpGroupKey = \"\"\r\n//             let tmpKey = \"\"\r\n//             if (childFullKey.startsWith(fieldsKeyword)) {\r\n//                 // fields.\r\n//                 let childFieldKey1 = childFullKey.substring(fieldsKeyword.length)\r\n//                 childFieldKey1 = childFieldKey1.substring(0, childFieldKey1.indexOf(\".\"))\r\n//                 if (!group1[`${fieldKey}.${childFieldKey1}`]) {\r\n//                     group1[`${fieldKey}.${childFieldKey1}`] = {}\r\n//                 }\r\n//                 let childFieldKey2 = childFullKey.substring(fieldsKeyword.length + childFieldKey1.length + 1)\r\n//                 tmpGroupKey = `${fieldKey}.${childFieldKey1}`\r\n//                 tmpKey = childFieldKey2\r\n//             } else if (childFullKey.startsWith(propertiesKeyword)) {\r\n//                 // properties.\r\n//                 let childFieldKey1 = childFullKey.substring(propertiesKeyword.length)\r\n//                 childFieldKey1 = childFieldKey1.substring(0, childFieldKey1.indexOf(\".\"))\r\n//                 if (!group1[`${fieldKey}.${childFieldKey1}`]) {\r\n//                     group1[`${fieldKey}.${childFieldKey1}`] = {}\r\n//                 }\r\n//                 let childFieldKey2 = childFullKey.substring(propertiesKeyword.length + childFieldKey1.length + 1)\r\n//                 tmpGroupKey = `${fieldKey}.${childFieldKey1}`\r\n//                 tmpKey = childFieldKey2\r\n//             } else {\r\n//                 if (!group1[fieldKey]) {\r\n//                     group1[fieldKey] = {}\r\n//                 }\r\n//                 tmpGroupKey = fieldKey\r\n//                 tmpKey = childFullKey\r\n//             }\r\n//             return { tmpGroupKey, tmpKey }\r\n//         }\r\n//\r\n//         let result = getKey(fullKey)\r\n//         if (\r\n//             [\"type\", \"enabled\", \"analyzer\", \"copy_to.0\",\r\n//                 \"ignore_above\", \"null_value\", \"doc_value\",\r\n//                 \"similarity\", \"term_vector\", \"store\"\r\n//             ].includes(result['tmpKey'])) {\r\n//             group1[result['tmpGroupKey']][result['tmpKey']] = object[fullKey]\r\n//         } else {\r\n//             let tmpKey = \"\" + result['tmpKey']\r\n//             let tmpGroupKey = \"\" + result['tmpGroupKey']\r\n//             while (true) {\r\n//                 if (tmpKey.startsWith(\"fields\")) {\r\n//                     let tmpResult = getKey(tmpKey.substring(fieldsKeyword.length))\r\n//                     console.log(tmpGroupKey + \".\" + tmpResult['tmpGroupKey'])\r\n//                     if (group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] === undefined) {\r\n//                         group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] = {}\r\n//                     }\r\n//                     group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']][tmpResult['tmpKey']] = object[fullKey]\r\n//                     tmpKey = \"\" + tmpResult['tmpKey']\r\n//                     tmpGroupKey = \"\" + tmpResult['tmpGroupKey']\r\n//                 } else if (tmpKey.startsWith(\"properties\")) {\r\n//                     let tmpResult = getKey(tmpKey.substring(propertiesKeyword.length))\r\n//                     if (group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] === undefined) {\r\n//                         group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']] = {}\r\n//                     }\r\n//                     group1[result['tmpGroupKey'] + \".\" + tmpGroupKey + \".\" + tmpResult['tmpGroupKey']][tmpResult['tmpKey']] = object[fullKey]\r\n//                     tmpKey = \"\" + tmpResult['tmpKey']\r\n//                     tmpGroupKey = \"\" + tmpResult['tmpGroupKey']\r\n//                 } else {\r\n//                     break\r\n//                 }\r\n//             }\r\n//         }\r\n//     })\r\n//     return group1\r\n// }\r\n\r\n\r\nfunction FormCard({json}) {\r\n    // let dataMap = {}\r\n    // const flatMap = flatten(testJson['properties'] ? testJson['properties'] : testJson)\r\n    // if (json) {\r\n    //     dataMap = parsing(flatten(json['properties'] ? json['properties'] : json))\r\n    // }\r\n    // console.log(json, typeof json)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardContent m={0}>\r\n                    <Box style={{overflow: \"auto\", minWidth: \"700px\"}}>\r\n                        {Json2html({json: JSON.stringify(json), type: \"mappings\"})}\r\n                    </Box>\r\n\r\n\r\n                    {/*<Box style={{overflow: \"auto\"}}>*/}\r\n                    {/*    <table cellPadding=\"0\" cellSpacing=\"0\"*/}\r\n                    {/*           style={{width: \"100%\", textAlign: \"center\", whiteSpace: \"nowrap\"}}>*/}\r\n                    {/*        <thead>*/}\r\n                    {/*        <tr>*/}\r\n                    {/*            <th style={{height: \"50px\", width: \"50px\", border: \"1px solid silver\"}}>#</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>이름</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>타입</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>색인</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>분석기</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>copy_to</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>ignore_above</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>null_value</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>doc_values</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>similarity</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>term_vector</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>저장</th>*/}\r\n                    {/*            <th style={{border: \"1px solid silver\"}}>기타</th>*/}\r\n                    {/*        </tr>*/}\r\n                    {/*        </thead>*/}\r\n                    {/*        <tbody>*/}\r\n                    {/*        {*/}\r\n                    {/*            Object.keys(dataMap).map((key, index) => {*/}\r\n                    {/*                let tmpObject = dataMap[key]*/}\r\n                    {/*                const type = tmpObject['type'] || \"\"*/}\r\n                    {/*                const enabled = tmpObject['enabled'] === undefined ? true : tmpObject['enabled']*/}\r\n                    {/*                const analyzer = tmpObject['analyzer'] || type === \"text\" ? \"standard\" : \"\"*/}\r\n                    {/*                const copyTo = tmpObject['copy_to.0'] || \"\"*/}\r\n                    {/*                const ignoreAbove = tmpObject['ignore_above'] || \"\"*/}\r\n                    {/*                const nullValue = tmpObject['null_value'] || \"\"*/}\r\n                    {/*                const docValue = tmpObject['doc_value'] === undefined ? true : tmpObject['doc_value']*/}\r\n                    {/*                const similarity = tmpObject['similarity'] || \"BM25\"*/}\r\n                    {/*                const termVector = tmpObject['term_vector'] || \"\"*/}\r\n                    {/*                const store = tmpObject['store'] === undefined ? true : tmpObject['store']*/}\r\n                    {/*                const etc = tmpObject['etc'] || \"\"*/}\r\n\r\n                    {/*                return (*/}\r\n                    {/*                    <tr key={index}>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{index + 1}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{key}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{type}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}><Checkbox*/}\r\n                    {/*                            style={{cursor: \"default\"}} checked={enabled}/></td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{analyzer}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{copyTo}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{ignoreAbove}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{nullValue}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{docValue}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{similarity}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{termVector}</td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}><Checkbox*/}\r\n                    {/*                            style={{cursor: \"default\"}} checked={store}/></td>*/}\r\n                    {/*                        <td style={{border: \"1px solid silver\"}}>{etc}</td>*/}\r\n                    {/*                    </tr>*/}\r\n                    {/*                )*/}\r\n                    {/*            })*/}\r\n                    {/*        }*/}\r\n                    {/*        </tbody>*/}\r\n                    {/*    </table>*/}\r\n                    {/*</Box>*/}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction JsonCard({json}) {\r\n    const classes = useStyles();\r\n\r\n    return (<div>\r\n        <Card>\r\n            <CardContent>\r\n                <Box>\r\n                    <TextareaAutosize rowsMin={50}\r\n                                      className={classes.edit}\r\n                                      disabled\r\n                                      value={JSON.stringify(json, null, 4)}\r\n                    />\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    </div>)\r\n}\r\n\r\nfunction Mapping({mappings}) {\r\n    const [chk, setChk] = React.useState('form');\r\n\r\n    function handleRadioChange(e) {\r\n        setChk(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n                    <FormControlLabel value=\"form\" checked={chk === \"form\"} onChange={handleRadioChange}\r\n                                      control={<Radio color=\"primary\"/>} label=\"폼\"/>\r\n                    <FormControlLabel value=\"json\" checked={chk === \"json\"} onChange={handleRadioChange}\r\n                                      control={<Radio color=\"primary\"/>} label=\"json\"/>\r\n                </RadioGroup>\r\n            </FormControl>\r\n\r\n            <Box mt={2}>\r\n                {\r\n                    chk === \"form\" ?\r\n                        <FormCard json={mappings}/>\r\n                        :\r\n                        <JsonCard json={mappings}/>\r\n                }\r\n            </Box>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({...store.indicesReducers}))(Mapping);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'thead' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","module.exports = flatten\nflatten.flatten = flatten\nflatten.unflatten = unflatten\n\nfunction isBuffer (obj) {\n  return obj &&\n    obj.constructor &&\n    (typeof obj.constructor.isBuffer === 'function') &&\n    obj.constructor.isBuffer(obj)\n}\n\nfunction keyIdentity (key) {\n  return key\n}\n\nfunction flatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const maxDepth = opts.maxDepth\n  const transformKey = opts.transformKey || keyIdentity\n  const output = {}\n\n  function step (object, prev, currentDepth) {\n    currentDepth = currentDepth || 1\n    Object.keys(object).forEach(function (key) {\n      const value = object[key]\n      const isarray = opts.safe && Array.isArray(value)\n      const type = Object.prototype.toString.call(value)\n      const isbuffer = isBuffer(value)\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      const newKey = prev\n        ? prev + delimiter + transformKey(key)\n        : transformKey(key)\n\n      if (!isarray && !isbuffer && isobject && Object.keys(value).length &&\n        (!opts.maxDepth || currentDepth < maxDepth)) {\n        return step(value, newKey, currentDepth + 1)\n      }\n\n      output[newKey] = value\n    })\n  }\n\n  step(target)\n\n  return output\n}\n\nfunction unflatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const overwrite = opts.overwrite || false\n  const transformKey = opts.transformKey || keyIdentity\n  const result = {}\n\n  const isbuffer = isBuffer(target)\n  if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\n    return target\n  }\n\n  // safely ensure that the key is\n  // an integer.\n  function getkey (key) {\n    const parsedKey = Number(key)\n\n    return (\n      isNaN(parsedKey) ||\n      key.indexOf('.') !== -1 ||\n      opts.object\n    ) ? key\n      : parsedKey\n  }\n\n  function addKeys (keyPrefix, recipient, target) {\n    return Object.keys(target).reduce(function (result, key) {\n      result[keyPrefix + delimiter + key] = target[key]\n\n      return result\n    }, recipient)\n  }\n\n  function isEmpty (val) {\n    const type = Object.prototype.toString.call(val)\n    const isArray = type === '[object Array]'\n    const isObject = type === '[object Object]'\n\n    if (!val) {\n      return true\n    } else if (isArray) {\n      return !val.length\n    } else if (isObject) {\n      return !Object.keys(val).length\n    }\n  }\n\n  target = Object.keys(target).reduce(function (result, key) {\n    const type = Object.prototype.toString.call(target[key])\n    const isObject = (type === '[object Object]' || type === '[object Array]')\n    if (!isObject || isEmpty(target[key])) {\n      result[key] = target[key]\n      return result\n    } else {\n      return addKeys(\n        key,\n        result,\n        flatten(target[key], opts)\n      )\n    }\n  }, {})\n\n  Object.keys(target).forEach(function (key) {\n    const split = key.split(delimiter).map(transformKey)\n    let key1 = getkey(split.shift())\n    let key2 = getkey(split[0])\n    let recipient = result\n\n    while (key2 !== undefined) {\n      if (key1 === '__proto__') {\n        return\n      }\n\n      const type = Object.prototype.toString.call(recipient[key1])\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      // do not write over falsey, non-undefined values if overwrite is false\n      if (!overwrite && !isobject && typeof recipient[key1] !== 'undefined') {\n        return\n      }\n\n      if ((overwrite && !isobject) || (!overwrite && recipient[key1] == null)) {\n        recipient[key1] = (\n          typeof key2 === 'number' &&\n          !opts.object ? [] : {}\n        )\n      }\n\n      recipient = recipient[key1]\n      if (split.length > 0) {\n        key1 = getkey(split.shift())\n        key2 = getkey(split[0])\n      }\n    }\n\n    // unflatten again for 'messy objects'\n    recipient[key1] = unflatten(target[key], opts)\n  })\n\n  return result\n}\n","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from \"react\";\r\nimport {\r\n    Box,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Checkbox,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\nimport flat from \"flat\";\r\nimport styled from \"styled-components\";\r\nimport {positions, spacing} from \"@material-ui/system\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\n\r\nfunction SettingsJson2html(settings) {\r\n    if (!settings) {\r\n        return null\r\n    }\r\n\r\n    const flatSettingsMap = flat(settings['settings'] ? settings['settings'] : settings)\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant={\"h5\"} mt={5}>\r\n                        주요항목\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>샤드 갯수</TableCell>\r\n                                <TableCell>레플리카 갯수</TableCell>\r\n                                <TableCell>리프레쉬 간격</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>{(((settings['settings']||{})['index']||{})['number_of_shards']|| '-')}</TableCell>\r\n                                <TableCell>{(((settings['settings']||{})['index']||{})['number_of_replicas']|| '-')}</TableCell>\r\n                                <TableCell>{(((settings['defaults']||{})['index']||{})['refresh_interval']|| '-')}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <br/>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant={\"h5\"} mt={5}>\r\n                        기타항목\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>키</TableCell>\r\n                                <TableCell>값</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                Object.keys(flatSettingsMap||{}).map(key => {\r\n                                    return (\r\n                                        <TableRow key={key}>\r\n                                            <TableCell>{key}</TableCell>\r\n                                            <TableCell>{flatSettingsMap[key]||''}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction MappingsJson2html(json) {\r\n    const topFields = [\r\n        {title: \"타입\", key: \"type\", component: (val) => {return val}},\r\n        // {title: \"색인\", key: \"enabled\", component: (val) => {return <Checkbox style={{cursor: \"default\"}} checked={val||true}/>}},\r\n        {title: \"색인\", key: \"enabled\", component: (val) => {\r\n            if (val !== undefined && val !== null && val === false) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Checkbox style={{cursor: \"default\"}} checked={false} />\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Checkbox style={{cursor: \"default\"}} checked={true}/>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        }},\r\n        {title: \"분석기\", key: \"analyzer\", component: (val) => {return val}},\r\n        {title: \"copy_to\", key: \"copy_to\", component: (val) => {return val}},\r\n        {title: \"ignore_above\", key: \"ignore_above\", component: (val) => {return val}},\r\n        {title: \"null_value\", key: \"null_value\", component: (val) => {return val}},\r\n        {title: \"doc_values\", key: \"doc_values\", component: (val) => {return val}},\r\n        {title: \"similarity\", key: \"similarity\", component: (val) => {return val||\"\"}},\r\n        {title: \"term_vector\", key: \"term_vector\", component: (val) => {return val}},\r\n        {title: \"store\", key: \"store\", component: (val) => {\r\n                if (val !== undefined && val !== null && val === false) {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Checkbox style={{cursor: \"default\"}} checked={false} />\r\n                        </React.Fragment>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Checkbox style={{cursor: \"default\"}} checked={true}/>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            // return <Checkbox style={{cursor: \"default\"}} checked={val||true}/>\r\n        }}\r\n    ]\r\n\r\n    const flatJsonMap = flat(json['properties'] ? json['properties'] : json)\r\n\r\n    let formatKeyFlatJsonMap = {}\r\n    Object.keys(flatJsonMap).forEach(key => {\r\n        const replaceKey = key.replace(/\\.properties/gi, \"\")\r\n\r\n        const sortKey = replaceKey.substring(0, replaceKey.lastIndexOf(\".\"))\r\n        const suffix = replaceKey.substring(replaceKey.lastIndexOf(\".\") + 1)\r\n        if (!formatKeyFlatJsonMap[sortKey]) {\r\n            formatKeyFlatJsonMap[sortKey] = {}\r\n        }\r\n        formatKeyFlatJsonMap[sortKey][suffix] = flatJsonMap[key]\r\n    })\r\n\r\n    return (\r\n        <table border={1} width={\"100%\"} cellSpacing={0} cellPadding={8}>\r\n            <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>이름</th>\r\n                {\r\n                    topFields.map(field => <th key={field['title']}>{field['title']}</th>)\r\n                }\r\n                <th>기타설정</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                Object.keys(formatKeyFlatJsonMap)\r\n                    .filter(key => !key.endsWith(\".copy_to\")).map((key, index) => {\r\n                    const obj = formatKeyFlatJsonMap[key]\r\n\r\n                    const etc = Object.keys(obj).map(k => {\r\n                        const o = topFields.find(m => m['key'] === k)\r\n                        return o ? null : k + \": \" + obj[k]\r\n                    }).filter(o => o)\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td align={\"center\"}>{index + 1}</td>\r\n                            <td>{key.replaceAll(\".fields\", \"\")}</td>\r\n                            {\r\n                                topFields.map(field => <td key={field['title']} align={\"center\"}>{field['component'](obj[field['key']])}</td>)\r\n                            }\r\n                            <td>\r\n                                {etc.join(\", \")}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nfunction Render({json, type}) {\r\n    let validJson = json\r\n    try {\r\n        if (typeof json === 'string') {\r\n            validJson = JSON.parse(json)\r\n        }\r\n    } catch (error) {\r\n        // console.warn(\"parsing error\", typeof json)\r\n    }\r\n\r\n    if (validJson && type === \"mappings\") {\r\n        return MappingsJson2html(validJson)\r\n    } else if (validJson && type === \"settings\") {\r\n        return SettingsJson2html(validJson)\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Box style={{minHeight: \"150px\"}}>\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Render\r\n"],"sourceRoot":""}