{"version":3,"sources":["pages/indices/collection/Summary.js"],"names":["Typography","styled","MuiTypography","spacing","positions","Card","MuiCard","Button","MuiButton","Grid","MuiGrid","Box","MuiBox","connect","store","authUser","dsearchReducers","collectionReducers","dispatch","collection","history","useHistory","replicas","useRef","refresh_interval","ignoreRoleYn","useState","moreMenu","setMoreMenu","openRemoveModal","setOpenRemoveModal","openEditModal","setOpenEditModal","openDsearchModal","setOpenDsearchModal","editName","setEditName","selectedAlias","setSelectedAlias","openUpdateAliasModal","setOpenUpdateAliasModal","toggleMoreMenu","event","currentTarget","indexA","indexB","Fragment","container","item","xs","my","style","cursor","onClick","push","mx","display","component","undefined","align","role","index","variant","anchorEl","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","backgroundColor","red","mt","md","lg","px","py","colSpan","fontSize","Object","keys","find","o","marginLeft","color","icon","label","alias","add","remove","width","height","borderRadius","float","Number","toLocaleString","join","fullWidth","deleteCollectionAction","then","response","setCollectionList","setTimeout","catch","error","console","log","value","onChange","target","placeholder","editCollectionSourceAction","type","defaultValue","inputRef","blue","current","orange","addIndex","removeIndex","actions","editCollectionAliasAction","body","setCollection","handleUpdateAlias"],"mappings":"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","file":"static/js/71.9795e885.chunk.js","sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Button as MuiButton,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Chip, FormControl,\r\n    Grid as MuiGrid,\r\n    Link,\r\n    Menu,\r\n    MenuItem, Select,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    TextField,\r\n    Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\nimport {positions, spacing} from \"@material-ui/system\";\r\nimport {ArrowDropDown, Check} from \"@material-ui/icons\";\r\nimport {setCollection, deleteCollectionAction, setCollectionList, editCollectionSourceAction, editCollectionAliasAction} from \"../../../redux/actions/collectionActions\";\r\nimport {red, blue, orange} from \"@material-ui/core/colors\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\nconst Card = styled(MuiCard)(spacing, positions);\r\nconst Button = styled(MuiButton)(spacing, positions);\r\nconst Grid = styled(MuiGrid)(spacing, positions);\r\nconst Box =  styled(MuiBox)(spacing, positions);\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     formControl: {\r\n//         minWidth: 250,\r\n//     },\r\n//     root: {\r\n//         flexGrow: 1,\r\n//         width: '100%',\r\n//     },\r\n//     edit: {\r\n//         width: '100%'\r\n//     }\r\n// }));\r\n\r\n\r\nfunction Summary({dispatch, authUser, collection}) {\r\n    const history = useHistory();\r\n\r\n    const replicas = useRef(null);\r\n    const refresh_interval = useRef(null);\r\n    const ignoreRoleYn = useRef(null);\r\n\r\n    const [moreMenu, setMoreMenu] = useState(null)\r\n    const [openRemoveModal, setOpenRemoveModal] = useState(false)\r\n    const [openEditModal, setOpenEditModal] = useState(false)\r\n    const [openDsearchModal, setOpenDsearchModal] = useState(false)\r\n    const [editName, setEditName] = useState(collection['name'])\r\n    const [selectedAlias, setSelectedAlias] = useState({})\r\n    const [openUpdateAliasModal, setOpenUpdateAliasModal] = useState(false)\r\n\r\n    function toggleMoreMenu(event) {\r\n        setMoreMenu(moreMenu === null ? event.currentTarget : null)\r\n    }\r\n\r\n    function handleDeleteCollection(event) {\r\n        toggleMoreMenu(event)\r\n        dispatch(deleteCollectionAction(collection['id'])).then(response => {\r\n            dispatch(setCollectionList())\r\n            setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleEditNameCollection(event) {\r\n        toggleMoreMenu(event)\r\n        collection['name'] = editName;\r\n        dispatch(editCollectionSourceAction(collection['id'], collection)).then(response => {\r\n            dispatch(setCollectionList())\r\n            setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleEditDsearchSettings(event) {\r\n        toggleMoreMenu(event)\r\n        \r\n        collection['replicas'] = replicas.current.value;\r\n        collection['refresh_interval'] = refresh_interval.current.value;\r\n        collection['ignoreRoleYn'] = ignoreRoleYn.current.value;\r\n        dispatch(editCollectionSourceAction(collection['id'], collection)).then(response => {\r\n            dispatch(setCollectionList())\r\n            setOpenDsearchModal(false)\r\n            // setTimeout(() => history.push(\"../indices-collections\"), 500)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleUpdateAlias() {\r\n        const alias       = selectedAlias['alias']\r\n        const addIndex    = selectedAlias['add']\r\n        const removeIndex = selectedAlias['remove']\r\n\r\n        let actions = []\r\n        actions.push({\r\n            add: {\r\n                index: addIndex,\r\n                alias: alias\r\n            }\r\n        })\r\n\r\n        if (removeIndex) {\r\n            actions.push({\r\n                remove: {\r\n                    index: removeIndex,\r\n                    alias: alias\r\n                }\r\n            })\r\n        }\r\n\r\n        dispatch(editCollectionAliasAction(actions))\r\n            .then(body => {\r\n                dispatch(setCollection(collection['id']))\r\n                setOpenUpdateAliasModal(false)\r\n            })\r\n\r\n    }\r\n\r\n    const indexA = collection['indexA']\r\n    const indexB = collection['indexB']\r\n    // authUser.role.index =false;\r\n    return (\r\n        <React.Fragment>\r\n            <br/>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid container>\r\n                        <Grid item xs={10}>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>컬렉션 이름</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    {collection['name']}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>컬렉션 아이디</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    {collection['baseId']}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 템플릿</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Link style={{cursor: \"pointer\"}}\r\n                                          onClick={() => {history.push(`../indices-templates/${collection['baseId']}`)}}\r\n                                    >\r\n                                        {collection['baseId']}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 패턴</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Link mx={1} style={{cursor: \"pointer\",\r\n                                        display: collection['indexA']['uuid'] ? \"inline\" : \"none\"\r\n                                    }}\r\n                                          onClick={() => {history.push(`../indices/${collection['indexA']['uuid']}`)}}\r\n                                    >\r\n                                        {collection['indexA']['index']}\r\n                                    </Link>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: collection['indexA']['uuid'] ? \"none\" : \"inline\"}}>\r\n                                        {collection['indexA']['index']}\r\n                                    </Box>\r\n                                    ,\r\n                                    <Link mx={1} style={{cursor: \"pointer\",\r\n                                        display: collection['indexB']['uuid'] ? \"inline\" : \"none\"\r\n                                    }}\r\n                                          onClick={() => {history.push(`../indices/${collection['indexB']['uuid']}`)}}\r\n                                    >\r\n                                        {collection['indexB']['index']}\r\n                                    </Link>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: collection['indexB']['uuid'] ? \"none\" : \"inline\"}}>\r\n                                        {collection['indexB']['index']}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                    <b>인덱스 설정</b>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: \"inline\"}}>\r\n                                         레플리카 갯수: { collection['replicas'] !== null && collection['replicas'] !== undefined ? collection['replicas'] : \"1\"}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container my={3}>\r\n                                <Grid item xs={3}>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Box component={\"span\"}\r\n                                         style={{display: \"inline\"}}>\r\n                                        리프레시 주기: {collection['refresh_interval'] ? collection['refresh_interval'] + \"s\" : \"1s\"}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={2} align={\"right\"}>\r\n                            {\r\n                                authUser.role.index ?\r\n                                    <React.Fragment>\r\n                                        <Button variant={\"outlined\"}\r\n                                                onClick={toggleMoreMenu}\r\n                                        >\r\n                                            더보기\r\n                                            <ArrowDropDown/>\r\n                                        </Button>\r\n                                        <Menu\r\n                                            anchorEl={moreMenu}\r\n                                            open={Boolean(moreMenu)}\r\n                                            onClose={toggleMoreMenu}\r\n                                            getContentAnchorEl={null}\r\n                                            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                                            transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                                        >\r\n                                            <MenuItem onClick={() => setOpenEditModal(true)}>\r\n                                                컬렉션 이름 변경\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={() => setOpenDsearchModal(true)}>\r\n                                                컬렉션 설정 변경\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{backgroundColor: red[\"300\"]}} onClick={() => setOpenRemoveModal(true)}>\r\n                                                컬렉션 삭제\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </React.Fragment>\r\n                                    :\r\n                                    <React.Fragment>\r\n\r\n                                    </React.Fragment>\r\n                            }\r\n                            <Box>\r\n\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Box mt={5}>\r\n                        <Typography variant={\"h5\"}>\r\n                            스왑 인덱스\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={12} lg={6}>\r\n                            <Box px={5} py={2}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell  variant={\"head\"} component={\"th\"} colSpan={4} style={{fontSize: \"1.2em\"}} align={\"center\"}>\r\n                                                {indexA['index']}\r\n\r\n                                                {\r\n                                                    Object.keys(indexA['aliases']||{}).find(o => o === collection['baseId']) ?\r\n                                                        <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                            <Chip color=\"primary\" icon={<Check />} label={\"사용 중\"}/>\r\n                                                        </Box>\r\n                                                        :\r\n                                                        indexA['uuid'] ?\r\n                                                            <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                                <Chip icon={<Check />}\r\n                                                                      label={\"사용하기\"}\r\n                                                                      style={{cursor: \"pointer\"}}\r\n                                                                      onClick={() => {\r\n                                                                          setSelectedAlias({\r\n                                                                              alias: collection['baseId'],\r\n                                                                              add: indexA['index'],\r\n                                                                              remove: indexB['uuid'] ? indexB['index'] : null\r\n                                                                          })\r\n                                                                          setOpenUpdateAliasModal(true);\r\n                                                                      }}\r\n                                                                />\r\n                                                                {/*<Box component={\"span\"} style={{marginLeft: \"20px\"}}>*/}\r\n                                                                {/*    <Chip color=\"secondary\" icon={<Check />} label={\"사용하기\"}/>*/}\r\n                                                                {/*</Box>*/}\r\n                                                            </Box>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"none\" : \"table-row\"}}>\r\n                                            <TableCell colSpan={4} >\r\n                                                <Box align={\"center\"}>\r\n                                                    아직 인덱스가 생성되지 않았습니다.\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>상태</TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <Box style={{backgroundColor: indexA['health'], width: \"20px\", height: \"20px\", borderRadius: \"90px\", float: \"left\"}}> </Box>\r\n                                                <Box style={{marginLeft: \"30px\"}}>\r\n                                                    { indexA['health'] === \"green\" ? \"정상\" : indexA['health'] === \"yellow\" ? \"주의\" : \"에러\" }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리</TableCell>\r\n                                            <TableCell>{indexA['pri'] ? Number(indexA['pri']).toLocaleString() : \"-\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>레플리카</TableCell>\r\n                                            <TableCell>{indexA['rep'] ? Number(indexA['rep']).toLocaleString() : \"-\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>문서 수</TableCell>\r\n                                            <TableCell>{indexA['docsCount'] ? Number(indexA['docsCount']).toLocaleString() : \"0\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>삭제문서 수</TableCell>\r\n                                            <TableCell>{indexA['docsDeleted'] ? Number(indexA['docsDeleted']).toLocaleString() : \"0\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>스토리지 용량</TableCell>\r\n                                            <TableCell>{indexA['storeSize']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리 <br/> 스토리지용량</TableCell>\r\n                                            <TableCell>{indexA['priStoreSize']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexA['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>별칭</TableCell>\r\n                                            <TableCell>\r\n                                                {\r\n                                                    Object.keys(indexA['aliases']||{}).join(\",\")\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={12} lg={6}>\r\n                            <Box px={5} py={2}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell  variant={\"head\"} component={\"th\"} colSpan={4} style={{fontSize: \"1.2em\"}} align={\"center\"}>\r\n                                                {indexB['index']}\r\n\r\n                                                {\r\n                                                    Object.keys(indexB['aliases']||{}).find(o => o === collection['baseId']) ?\r\n                                                        <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                            <Chip color=\"primary\" icon={<Check />} label={\"사용 중\"}/>\r\n                                                        </Box>\r\n                                                        :\r\n                                                        indexB['uuid'] ?\r\n                                                            <Box component={\"span\"} style={{marginLeft: \"20px\"}}>\r\n                                                                <Chip icon={<Check />}\r\n                                                                      label={\"사용하기\"}\r\n                                                                      style={{cursor: \"pointer\"}}\r\n                                                                      onClick={() => {\r\n                                                                          setSelectedAlias({\r\n                                                                              alias: collection['baseId'],\r\n                                                                              add: indexB['index'],\r\n                                                                              remove: indexA['uuid'] ? indexA['index'] : null\r\n                                                                          })\r\n                                                                          setOpenUpdateAliasModal(true);\r\n                                                                      }}\r\n                                                                />\r\n                                                            </Box>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"none\" : \"table-row\"}}>\r\n                                            <TableCell colSpan={4} >\r\n                                                <Box align={\"center\"}>\r\n                                                    아직 인덱스가 생성되지 않았습니다.\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>상태</TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <Box style={{backgroundColor: indexB['health'], width: \"20px\", height: \"20px\", borderRadius: \"90px\", float: \"left\"}}> </Box>\r\n                                                <Box style={{marginLeft: \"30px\"}}>\r\n                                                    { indexB['health'] === \"green\" ? \"정상\" : indexB['health'] === \"yellow\" ? \"주의\" : \"에러\" }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리</TableCell>\r\n                                            <TableCell>{indexB['pri'] ? Number(indexA['pri']).toLocaleString() : \"-\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>레플리카</TableCell>\r\n                                            <TableCell>{indexB['rep'] ? Number(indexB['rep']).toLocaleString() : \"-\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>문서 수</TableCell>\r\n                                            <TableCell>{indexB['docsCount'] ? Number(indexB['docsCount']).toLocaleString() : \"0\"}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>삭제문서 수</TableCell>\r\n                                            <TableCell>{indexB['docsDeleted'] ? Number(indexB['docsDeleted']).toLocaleString() : \"0\"}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>스토리지 용량</TableCell>\r\n                                            <TableCell>{indexB['storeSize']}</TableCell>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>프라이머리 <br/> 스토리지용량</TableCell>\r\n                                            <TableCell>{indexB['priStoreSize']}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow style={{display: indexB['uuid'] ? \"table-row\" : \"none\"}}>\r\n                                            <TableCell variant={\"head\"} component={\"th\"}>별칭</TableCell>\r\n                                            <TableCell>\r\n                                                {\r\n                                                    Object.keys(indexB['aliases']||{}).join(\",\")\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog open={openRemoveModal} fullWidth={true}>\r\n                <DialogTitle>컬랙션 삭제</DialogTitle>\r\n                <DialogContent>\r\n                    <Box style={{color: red['500']}}> 선택하신 컬랙션을 삭제 하시겠습니까? </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button style={{backgroundColor: red['200']}}\r\n                            variant=\"contained\"\r\n                            onClick={handleDeleteCollection}\r\n                    >\r\n                        삭제\r\n                    </Button>\r\n                    <Button onClick={() => setOpenRemoveModal(false)}\r\n                            variant=\"contained\"\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openEditModal} fullWidth={true}>\r\n                <DialogTitle>컬랙션 이름 변경</DialogTitle>\r\n                <DialogContent>\r\n                <TextField \r\n                    value={editName}\r\n                    onChange={(event) => setEditName(event.target.value)}\r\n                    fullWidth\r\n                    placeholder={\"변경할 이름을 입력해 주세요\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={handleEditNameCollection}\r\n                    >\r\n                        수정\r\n                    </Button>\r\n                    <Button onClick={() => setOpenEditModal(false)}\r\n                            variant=\"contained\"\r\n                    >\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openDsearchModal} fullWidth={true}>\r\n                <DialogTitle>디서치 설정</DialogTitle>\r\n                <DialogContent>\r\n                    <Box>\r\n                        <b>레플리카 갯수 설정</b>\r\n                        <TextField \r\n                            fullWidth\r\n                            type={\"number\"}\r\n                            defaultValue={collection['replicas'] ? collection['replicas'] : 1}  \r\n                            inputRef={replicas}\r\n                            placeholder={\"레플리카 갯수를 설정해 주세요\"} \r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <b>세그먼트 생성 주기</b>\r\n                        <TextField \r\n                            fullWidth\r\n                            placeholder={\"세그먼트 생성 주기를 입력해주세요\"}\r\n                            defaultValue={collection['refresh_interval'] ? collection['refresh_interval'] : 1} \r\n                            inputRef={refresh_interval} />\r\n                        <br />\r\n                        <br />\r\n                        <b>역할 무시 (기본 값: allocation 사용)</b>\r\n                        {/*<TextField */}\r\n                        {/*    fullWidth*/}\r\n                        {/*    placeholder={\"역할을 무시할 것인지 입력해주세요\"} */}\r\n                        {/*    defaultValue={collection['ignoreRoleYn'] ? collection['ignoreRoleYn'] : 'N'} */}\r\n                        {/*    inputRef={ignoreRoleYn} />*/}\r\n                        <br />\r\n                        <Box>\r\n                            <FormControl fullWidth={true}>\r\n                                <Select fullWidth={true} defaultValue={collection['ignoreRoleYn'] ? collection['ignoreRoleYn'] : 'N'} inputRef={ignoreRoleYn}>\r\n                                    <MenuItem value={\"Y\"}>사용</MenuItem>\r\n                                    <MenuItem value={\"N\"}>사용안함</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{ backgroundColor: blue['200'] }}\r\n                        onClick={handleEditDsearchSettings}\r\n                        variant=\"contained\">\r\n                        수정\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setOpenDsearchModal(false)}\r\n                        variant=\"contained\">\r\n\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Dialog open={openUpdateAliasModal}\r\n                    fullWidth={true}\r\n                    onClose={() => setOpenUpdateAliasModal(false)}\r\n            >\r\n                <DialogTitle>별칭 교체</DialogTitle>\r\n                <DialogContent>\r\n                    별칭을 교체하시겠습니까?<br />\r\n                    <p style={{color: \"red\"}}>\r\n                        * 기존 스왑인덱스에 할당된 별칭은 제거 됩니다.\r\n                    </p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{ backgroundColor: orange['200'] }}\r\n                        onClick={() => handleUpdateAlias()}\r\n                        variant=\"contained\">\r\n                        교체\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setOpenUpdateAliasModal(false)}\r\n                        variant=\"contained\">\r\n\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    ...store.collectionReducers\r\n}))(Summary);\r\n"],"sourceRoot":""}