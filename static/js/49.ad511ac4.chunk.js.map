{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","redux/actions/serverSummaryActions.js","pages/management/serverManagement/index.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Link/Link.js"],"names":["createSvgIcon","React","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","client","Client","useStyles","makeStyles","formControl","minWidth","flexGrow","edit","styled","MuiBreadcrumbs","connect","store","server","serverSummaryReducers","dispatch","useState","indices","setIndices","useEffect","call","uri","then","response","type","SET_SERVER_SUMMARY","payload","data","catch","err","console","error","selectNode","nodes","ServerInfoCall","window","location","search","undefined","Object","entries","nodeName","split","i","Async","Fragment","title","aria-label","mt","mb","Link","href","Box","FormControl","Select","value","onChange","event","target","MenuItem","disabled","sort","a","b","node","nodeKey","stylesOrCreator","options","arguments","makeStylesWithoutDefault","defaultTheme","_props$color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","capitalize","button","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","outline","border","verticalAlign","borderStyle"],"mappings":"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","file":"static/js/49.ad511ac4.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import {SET_SERVER_SUMMARY} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setServerSummaryActions = key => dispatch => client.call({uri: `/elasticsearch/_nodes`})\r\n    .then(response => dispatch({type: SET_SERVER_SUMMARY, payload: response.data}))\r\n    .catch(err => console.error(err))\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {setServerSummaryActions} from '@actions/serverSummaryActions'\r\nimport Async from '~/components/Async';\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n    Box,\r\n    Breadcrumbs as MuiBreadcrumbs,\r\n    FormControl,\r\n    Link,\r\n    MenuItem,\r\n    Select,\r\n} from \"@material-ui/core\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    edit: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\n\r\n// const StyledTableCell = withStyles((theme) => ({\r\n//     body: {\r\n//         fontSize: 12\r\n//     },\r\n// }))(TableCell);\r\n\r\n\r\n// const NavLink = React.forwardRef((props, ref) => (\r\n//     <RouterNavLink innerRef={ref} {...props} />\r\n// ));\r\n\r\n// const Card = styled(MuiCard)(spacing);\r\n\r\n// const Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\n// callApi = () => {\r\n//     fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n//       .then(res => res.json())\r\n//       .then(json => {\r\n//         this.setState({\r\n//           data: json.title\r\n//         })\r\n//      })\r\n// }\r\nconst SUMMARY = 'NO_SELECTED';\r\n\r\nfunction Server({dispatch, server}) {\r\n    const classes = useStyles();\r\n\r\n    const [indices, setIndices] = React.useState(SUMMARY);\r\n\r\n    const handleChange = (event) => {\r\n        setIndices(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setServerSummaryActions());\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        selectNode();\r\n    }, [server.nodes]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const selectNode =()=>{\r\n        if(window.location.search !== \"\" || window.location.search !== undefined){\r\n            const nodes = (Object.entries(server.nodes));\r\n            const nodeName = window.location.search.split(\"=\")[1];\r\n            for(let i=0; i<nodes.length; i++){\r\n                if(nodeName === nodes[i][1].name){\r\n                    setIndices(nodes[i][0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let ServerInfoCall\r\n    if(indices !== '' && indices !== SUMMARY) {\r\n        ServerInfoCall = Async(() => import(\"./serverInfo\"));\r\n    }else{\r\n        ServerInfoCall = Async(() => import(\"./summary\"));\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <Helmet title=\"Server 정보\"/>\r\n            \r\n            <Breadcrumbs aria-label=\"Breadcrumb\" mt={2} mb={2}>\r\n                <Link href=\"./server\" color=\"inherit\">\r\n                       서버 개요\r\n                </Link>\r\n                <Box>\r\n                    <FormControl className={classes.formControl}>\r\n                    {/*<InputLabel>서버</InputLabel>*/}\r\n                    <Select\r\n                        value={indices}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <MenuItem value={SUMMARY} disabled>서버를 선택하세요.</MenuItem>\r\n                        {Object.entries(server.nodes).sort((a, b) => {\r\n                            if(a[1].name > b[1].name) return 1;\r\n                            else if(a[1].name < b[1].name) return -1;\r\n                            else return 0;\r\n                        }).map((node,index) => (\r\n                            <MenuItem key={node[0]} value={node[0]}>{node[1].name}</MenuItem>    \r\n                        ))};\r\n                    </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </Breadcrumbs>\r\n\r\n            <ServerInfoCall nodeKey={indices}/>\r\n\r\n            {/*<Card>*/}\r\n            {/*    <CardContent>*/}\r\n            {/*        */}\r\n            {/*        <Grid container spacing={6}>*/}\r\n            {/*            <Grid item xs={12}>*/}\r\n            {/*                */}\r\n            {/*            </Grid>*/}\r\n            {/*        </Grid>*/}\r\n\r\n            {/*    </CardContent>*/}\r\n            {/*</Card>*/}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({ server: store.serverSummaryReducers.server}))(Server);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"sourceRoot":""}