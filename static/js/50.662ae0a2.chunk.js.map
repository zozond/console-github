{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","pages/analysis/dictionary/Search.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","defaultTheme","useStyles","theme","formControl","minWidth","select","form","display","alignItems","width","input","marginLeft","spacing","flex","borderBottom","iconButton","divider","height","margin","right","textAlign","SearchResultList","settings","searchResult","map","setting","idx","flag","str","i","result","id","type","keyword","value","key","connect","store","dictionaryReducers","dispatch","useEffect","setSettings","useState","showSearchInput","setShowSearchInput","searchInput","useRef","Fragment","inputRef","placeholder","onKeyPress","event","current","posTag","prob","searchDictionaries","word","aria-label","onClick","variant","item"],"mappings":"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","file":"static/js/50.662ae0a2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import React, {useState, useEffect, useRef} from \"react\";\r\nimport {Box, Card, CardContent, IconButton, InputBase,  Typography} from \"@material-ui/core\";\r\nimport {Search} from \"@material-ui/icons\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport {setSettings, searchDictionaries} from \"../../../redux/actions/dictionaryActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: { minWidth: 150 },\r\n    select: { minWidth: 80 },\r\n    form: { padding: '2px 4px', display: 'flex', alignItems: 'center', width: 500 },\r\n    input: { marginLeft: theme.spacing(1), flex: 1, borderBottom: \"1px solid gray\", '&:hover': { borderBottom: \"2px solid black\" } },\r\n    iconButton: {padding: 5,},\r\n    divider: { height: 28, margin: 4,},\r\n    right: { textAlign: \"right\"}\r\n}));\r\n\r\n\r\nfunction SearchResultList({settings, searchResult}){\r\n\r\n    return (\r\n        <> \r\n            {/* 사용자 사전 */}\r\n            {settings.map((setting, idx) => {\r\n                let flag = true;\r\n                let str = \"\";\r\n                \r\n                for(let i in searchResult.result){\r\n                    if(setting.id === searchResult.result[i].type){\r\n                        if(flag) {\r\n                            if(searchResult.result[i].keyword){\r\n                                if(searchResult.result[i].value){\r\n                                    str = searchResult.result[i].keyword + \", \" + searchResult.result[i].value; \r\n                                }else{\r\n                                    str = searchResult.result[i].keyword; \r\n                                }\r\n                            }else{\r\n                                str = searchResult.result[i].value; \r\n                            }\r\n                            flag = false; \r\n                        } else {\r\n                            str += \", \" + searchResult.result[i].value\r\n                        }\r\n                    }\r\n                }\r\n                return flag ? <></> : <li id={idx} key={idx}> {setting.name} {\" : \"} {str}</li>;\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction DictionarySearch ({dispatch, settings, searchResult}) {\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        dispatch(setSettings())\r\n        searchResult.result = []\r\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    const [showSearchInput, setShowSearchInput] = useState(\"\")\r\n    const searchInput = useRef(\"\");\r\n\r\n    // console.log(\"result\", searchResult);\r\n    const handleEnterPress = (event) => {\r\n        if (event.key === 'Enter'){\r\n            if(searchInput.current.value.length === 0) return;\r\n            searchResult.result = [ {type: \"SYSTEM\", posTag: \"N\", prob: \"0\"} ];\r\n            dispatch(searchDictionaries({word:searchInput.current.value}))\r\n            setShowSearchInput(searchInput.current.value);\r\n        }\r\n    }\r\n\r\n    const handleSearchIcon = (event) => {\r\n        if(searchInput.current.value.length === 0) return;\r\n        searchResult.result = [ {type: \"SYSTEM\", posTag: \"N\", prob: \"0\"} ];\r\n        dispatch(searchDictionaries({word: searchInput.current.value}))\r\n        setShowSearchInput(searchInput.current.value);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <br/>\r\n            <Card>\r\n                <CardContent>\r\n                    <Box>\r\n                        <InputBase\r\n                            inputRef={searchInput}\r\n                            className={classes.input}\r\n                            placeholder=\"검색\"\r\n                            onKeyPress={handleEnterPress}\r\n                        />\r\n                        <IconButton type=\"submit\"\r\n                                    className={classes.iconButton}\r\n                                    aria-label=\"search\"\r\n                                    onClick={handleSearchIcon}\r\n                        >\r\n                            <Search />\r\n                        </IconButton>\r\n                    </Box>\r\n                    <br/>\r\n                    <Box>\r\n                        <Typography variant=\"h4\">\r\n                            {showSearchInput === \"\" ? \"현재 입력된 내용이 없습니다.\" : showSearchInput}\r\n                        </Typography>\r\n                        \r\n                        <ul>\r\n                            {/* 기초 사전 */}\r\n                            {searchResult.result.length === 0 ? <li> 현재 입력된 내용이 없습니다. </li> : searchResult.result.map((item) => {\r\n                                if(\"SYSTEM\" === item.type) return <li key={item.type}> {item.posTag} {\" : \"} {item.prob} </li>;\r\n                                return <></>;\r\n                            })}\r\n\r\n                            {searchResult.result.length === 0? <></> : <SearchResultList settings={settings} searchResult={searchResult} />}\r\n                        </ul>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(store => ({ \r\n    settings: store.dictionaryReducers.settings,\r\n    searchResult: store.dictionaryReducers.searchResult\r\n}))(DictionarySearch)"],"sourceRoot":""}