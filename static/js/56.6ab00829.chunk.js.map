{"version":3,"sources":["pages/indices/index/Setting.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/flat/index.js"],"names":["useStyles","makeStyles","theme","formControl","minWidth","root","flexGrow","width","edit","addIcon","verticalAlign","table","padding","Box","styled","MuiBox","spacing","positions","Card","MuiCard","Typography","MuiTypography","Button","MuiButton","palette","FormCard","settings","undefined","defaultsFlatMap","flatten","settingsFlatMap","Fragment","variant","mt","Number","toLocaleString","style","display","Object","keys","length","map","key","JsonCard","json","classes","rowsMin","className","disabled","value","JSON","stringify","connect","store","authUser","dsearchReducers","indicesReducers","dispatch","index","React","useState","chk","setChk","modal","setModal","query","setQuery","message","setMessage","handleRadioChange","e","target","toggleModal","container","item","xs","component","row","aria-label","name","defaultValue","checked","onChange","control","color","label","align","role","size","onClick","open","fullWidth","onClose","event","height","overflow","placeholder","parseQueryJson","parse","editDynamicQueryAction","then","response","setIndexSettingsAction","catch","error","err","tablelvl2","TableHead","props","ref","_props$component","Component","other","_objectWithoutProperties","Tablelvl2Context","Provider","_extends","clsx","withStyles","isBuffer","obj","constructor","keyIdentity","opts","delimiter","maxDepth","transformKey","output","step","object","prev","currentDepth","forEach","isarray","safe","Array","isArray","type","prototype","toString","call","isbuffer","isobject","newKey","module","exports","unflatten","overwrite","result","getkey","parsedKey","isNaN","indexOf","reduce","val","isObject","isEmpty","keyPrefix","recipient","addKeys","split","key1","shift","key2"],"mappings":"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","file":"static/js/56.6ab00829.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    Box as MuiBox,\r\n    Button as MuiButton,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextareaAutosize,\r\n    Typography as MuiTypography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {palette, positions, spacing} from \"@material-ui/system\";\r\nimport {flatten} from \"flat\";\r\nimport {editDynamicQueryAction, setIndexSettingsAction} from \"../../../redux/actions/indicesActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    edit: {\r\n        width: '100%'\r\n    },\r\n    addIcon: {\r\n        verticalAlign: \"top\"\r\n    },\r\n    table: {\r\n        padding: '10px'\r\n    },\r\n}));\r\n\r\nconst Box = styled(MuiBox)(spacing, positions);\r\nconst Card = styled(MuiCard)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing, positions);\r\nconst Button = styled(MuiButton)(spacing, positions, palette);\r\n\r\nfunction FormCard({settings}) {\r\n    if (settings['settings'] === undefined) {\r\n        return null\r\n    }\r\n\r\n    const defaultsFlatMap = flatten(settings['defaults']||{})\r\n    const settingsFlatMap = flatten(settings['settings']||{})\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant={\"h5\"} mt={5}>\r\n                        주요항목\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>샤드 갯수</TableCell>\r\n                                <TableCell>레플리카 갯수</TableCell>\r\n                                <TableCell>리프레쉬 간격</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>{settings['settings']['index']['number_of_shards'] ? Number(settings['settings']['index']['number_of_shards']).toLocaleString() : \"0\"}</TableCell>\r\n                                <TableCell>{settings['settings']['index']['number_of_replicas'] ? Number(settings['settings']['index']['number_of_replicas']).toLocaleString() : \"0\"}</TableCell>\r\n                                <TableCell>{settings['defaults']['index']['refresh_interval'] || settings['settings']['index']['refresh_interval']}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Box style={{display: Object.keys(settingsFlatMap).length > 0 ? \"block\" : \"none\"}}>\r\n                <br/>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant={\"h5\"} mt={5}>\r\n                            설정값\r\n                        </Typography>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>키</TableCell>\r\n                                    <TableCell>값</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    Object.keys(settingsFlatMap).map(key => {\r\n                                        return (\r\n                                            <TableRow key={key}>\r\n                                                <TableCell>{key}</TableCell>\r\n                                                <TableCell>{settingsFlatMap[key]}</TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n\r\n            <Box style={{display: Object.keys(defaultsFlatMap).length > 0 ? \"block\" : \"none\"}}>\r\n                <br/>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant={\"h5\"} mt={5}>\r\n                            기본값\r\n                        </Typography>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>키</TableCell>\r\n                                    <TableCell>값</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    Object.keys(defaultsFlatMap).map(key => {\r\n                                        return (\r\n                                            <TableRow key={key}>\r\n                                                <TableCell>{key}</TableCell>\r\n                                                <TableCell>{defaultsFlatMap[key]}</TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\nfunction JsonCard({json}) {\r\n    const classes = useStyles();\r\n\r\n    return (<div>\r\n        <Card>\r\n            <CardContent>\r\n                <Box>\r\n                    <TextareaAutosize rowsMin={50}\r\n                                      className={classes.edit}\r\n                                      disabled\r\n                                      value={JSON.stringify(json, null, 4)}\r\n                    />\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    </div>)\r\n}\r\n\r\nfunction Setting({ dispatch, index, authUser, settings }) {\r\n    const [chk, setChk] = React.useState('form');\r\n    const [modal, setModal] = React.useState(false)\r\n    const [query, setQuery] = React.useState(\"\")\r\n    const [message, setMessage] = React.useState(null)\r\n    function handleRadioChange(e) {\r\n        setChk(e.target.value)\r\n    }\r\n    function toggleModal() {\r\n        setQuery(\"\")\r\n        setMessage(null)\r\n        setModal(!modal)\r\n    }\r\n    function processQuery() {\r\n        try {\r\n            const parseQueryJson = JSON.parse(query)\r\n            dispatch(editDynamicQueryAction(index, parseQueryJson))\r\n                .then(response => {\r\n                    setMessage(\"업데이트 성공\")\r\n                    dispatch(setIndexSettingsAction(index))\r\n                    toggleModal()\r\n                })\r\n                .catch(error => {\r\n                    setMessage(\"업데이트 실패\"+ error)\r\n                })\r\n        } catch (err) {\r\n            setMessage(\"업데이트 실패 JSON 형식이 잘못 되었습니다.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Grid container>\r\n                <Grid item xs={10}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n                            <FormControlLabel value=\"form\" checked={chk === \"form\"} onChange={handleRadioChange} control={<Radio color=\"primary\" />} label=\"폼\" />\r\n                            <FormControlLabel value=\"json\" checked={chk === \"json\"} onChange={handleRadioChange} control={<Radio color=\"primary\" />} label=\"json\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Box align={\"right\"} mt={2}>\r\n                        {authUser.role.index ? <Button size={\"small\"}\r\n                                                       variant={\"contained\"}\r\n                                                       color={\"primary\"}\r\n                                                       onClick={toggleModal}\r\n                        >동적변경</Button> : <></>}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Box mt={2}>\r\n                {\r\n                    chk === \"form\" ? <FormCard settings={settings} /> : <JsonCard json={settings} />\r\n                }\r\n            </Box>\r\n\r\n\r\n            <Dialog open={modal}\r\n                    fullWidth\r\n                    onClose={toggleModal}\r\n            >\r\n                <DialogTitle>\r\n                    동적변경\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextareaAutosize value={query}\r\n                                      onChange={(event) => setQuery(event.target.value)}\r\n                                      style={{width: \"100%\", height: \"300px\", overflow: \"auto\"}}\r\n                                      placeholder={`{\r\n   \"settings\" : {\r\n      \"index\" : {\r\n        \"number_of_replicas\" : \"5\"\r\n      }\r\n    }\r\n}`}\r\n                    />\r\n                    <Box style={{display: message ? \"block\": \"none\"}}>\r\n                        {message}\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={processQuery}>적용</Button>\r\n                    <Button onClick={toggleModal}>취소</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    ...store.indicesReducers\r\n\r\n}))(Setting);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'thead' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","module.exports = flatten\nflatten.flatten = flatten\nflatten.unflatten = unflatten\n\nfunction isBuffer (obj) {\n  return obj &&\n    obj.constructor &&\n    (typeof obj.constructor.isBuffer === 'function') &&\n    obj.constructor.isBuffer(obj)\n}\n\nfunction keyIdentity (key) {\n  return key\n}\n\nfunction flatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const maxDepth = opts.maxDepth\n  const transformKey = opts.transformKey || keyIdentity\n  const output = {}\n\n  function step (object, prev, currentDepth) {\n    currentDepth = currentDepth || 1\n    Object.keys(object).forEach(function (key) {\n      const value = object[key]\n      const isarray = opts.safe && Array.isArray(value)\n      const type = Object.prototype.toString.call(value)\n      const isbuffer = isBuffer(value)\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      const newKey = prev\n        ? prev + delimiter + transformKey(key)\n        : transformKey(key)\n\n      if (!isarray && !isbuffer && isobject && Object.keys(value).length &&\n        (!opts.maxDepth || currentDepth < maxDepth)) {\n        return step(value, newKey, currentDepth + 1)\n      }\n\n      output[newKey] = value\n    })\n  }\n\n  step(target)\n\n  return output\n}\n\nfunction unflatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const overwrite = opts.overwrite || false\n  const transformKey = opts.transformKey || keyIdentity\n  const result = {}\n\n  const isbuffer = isBuffer(target)\n  if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\n    return target\n  }\n\n  // safely ensure that the key is\n  // an integer.\n  function getkey (key) {\n    const parsedKey = Number(key)\n\n    return (\n      isNaN(parsedKey) ||\n      key.indexOf('.') !== -1 ||\n      opts.object\n    ) ? key\n      : parsedKey\n  }\n\n  function addKeys (keyPrefix, recipient, target) {\n    return Object.keys(target).reduce(function (result, key) {\n      result[keyPrefix + delimiter + key] = target[key]\n\n      return result\n    }, recipient)\n  }\n\n  function isEmpty (val) {\n    const type = Object.prototype.toString.call(val)\n    const isArray = type === '[object Array]'\n    const isObject = type === '[object Object]'\n\n    if (!val) {\n      return true\n    } else if (isArray) {\n      return !val.length\n    } else if (isObject) {\n      return !Object.keys(val).length\n    }\n  }\n\n  target = Object.keys(target).reduce(function (result, key) {\n    const type = Object.prototype.toString.call(target[key])\n    const isObject = (type === '[object Object]' || type === '[object Array]')\n    if (!isObject || isEmpty(target[key])) {\n      result[key] = target[key]\n      return result\n    } else {\n      return addKeys(\n        key,\n        result,\n        flatten(target[key], opts)\n      )\n    }\n  }, {})\n\n  Object.keys(target).forEach(function (key) {\n    const split = key.split(delimiter).map(transformKey)\n    let key1 = getkey(split.shift())\n    let key2 = getkey(split[0])\n    let recipient = result\n\n    while (key2 !== undefined) {\n      if (key1 === '__proto__') {\n        return\n      }\n\n      const type = Object.prototype.toString.call(recipient[key1])\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      // do not write over falsey, non-undefined values if overwrite is false\n      if (!overwrite && !isobject && typeof recipient[key1] !== 'undefined') {\n        return\n      }\n\n      if ((overwrite && !isobject) || (!overwrite && recipient[key1] == null)) {\n        recipient[key1] = (\n          typeof key2 === 'number' &&\n          !opts.object ? [] : {}\n        )\n      }\n\n      recipient = recipient[key1]\n      if (split.length > 0) {\n        key1 = getkey(split.shift())\n        key2 = getkey(split[0])\n      }\n    }\n\n    // unflatten again for 'messy objects'\n    recipient[key1] = unflatten(target[key], opts)\n  })\n\n  return result\n}\n"],"sourceRoot":""}