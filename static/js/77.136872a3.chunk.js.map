{"version":3,"sources":["redux/actions/migrationActions.js","pages/management/migration/index.js"],"names":["client","Client","Divider","styled","MuiDivider","spacing","connect","store","authUser","dsearchReducers","dispatch","useDispatch","React","useState","pipeline","setPipeline","templates","setTemplates","collection","setCollection","jdbc","setJdbc","downloadResults","setDownloadResults","uploadError","setUploadError","uploadResults","setUploadResults","downloadModal","setDownloadModal","uploadModal","setUploadModal","file","setFile","uploadProgress","setUploadProgress","alertFlag","setAlertFlag","alertMessage","setAlertMessage","alertColor","setAlertColor","handleDownload","fd","json","FormData","append","call","uri","method","headers","data","then","response","console","log","result","JSON","parse","sessionStorage","getItem","link","document","createElement","href","window","URL","createObjectURL","Blob","stringify","type","setAttribute","cluster","name","body","appendChild","click","catch","err","handleUpload","sendFile","res","a","message","Fragment","title","Grid","container","item","xs","Typography","variant","gutterBottom","display","my","Box","style","backgroundColor","padding","marginBottom","margin","ml","mt","mb","Button","color","onClick","role","manage","disabled","width","length","Table","key","TableHead","TableRow","TableCell","TableBody","hover","count","list","map","dangerouslySetInnerHTML","__html","m","border","p","Snackbar","open","autoHideDuration","onClose","elevation","severity","Dialog","fullWidth","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","checked","onChange","e","target","label","labelPlacement","DialogActions","whiteSpace","files","LinearProgress"],"mappings":"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","file":"static/js/77.136872a3.chunk.js","sourcesContent":["import Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const download = (fd) =>\r\n    client.call({\r\n        uri: `/migration/download`,\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        data: fd,\r\n        // responseType: 'blob'\r\n    })\r\n\r\n\r\nexport const sendFile = (fd) => dispatch => client.call({\r\n    uri: `/migration/upload`,\r\n    method: \"POST\",\r\n    data: fd,\r\n    headers: {\r\n        \"Content-type\": \"multipart/form-data\",\r\n    }\r\n})\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n    Card,\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider as MuiDivider,\r\n    Grid,\r\n    Snackbar,\r\n    Table,\r\n    TableBody,\r\n    LinearProgress,\r\n    Typography,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    CardContent,\r\n    TableRow,\r\n    TableCell,\r\n    TableHead,\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { download, sendFile  } from \"../../../redux/actions/migrationActions\"\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nfunction Migration({authUser}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const [pipeline, setPipeline] = React.useState(true);\r\n    const [templates, setTemplates] = React.useState(true);\r\n    const [collection, setCollection] = React.useState(true);\r\n    const [jdbc, setJdbc] = React.useState(true);\r\n\r\n    const [downloadResults, setDownloadResults] = React.useState(\"\")\r\n    const [uploadError, setUploadError] = React.useState(\"\");\r\n    const [uploadResults, setUploadResults] = React.useState(null)\r\n    const [downloadModal, setDownloadModal] = React.useState(false);\r\n    const [uploadModal, setUploadModal] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [uploadProgress, setUploadProgress] = React.useState(false);\r\n    const [alertFlag, setAlertFlag] = React.useState(false);\r\n    const [alertMessage, setAlertMessage] = React.useState(\"\");\r\n    const [alertColor, setAlertColor] = React.useState(\"info\");\r\n\r\n    function handleDownload() {\r\n        let json = new FormData();\r\n        json.append(\"pipeline\", pipeline)\r\n        json.append(\"templates\", templates)\r\n        json.append(\"collection\", collection)\r\n        json.append(\"jdbc\", jdbc)\r\n        \r\n        download(json).then(response => {\r\n            console.log(response)\r\n\r\n            let data = response.data\r\n            setDownloadResults(data.result)\r\n            setUploadResults(null)\r\n            let json = JSON.parse(sessionStorage.getItem('SET_DSEARCH_AUTH_USER'));\r\n            const link = document.createElement('a');\r\n            link.href = window.URL.createObjectURL(new Blob([JSON.stringify(response.data)], {\r\n                // type: response.headers['content-type']\r\n                type: 'text/plain'\r\n            }));\r\n            link.setAttribute('download', `dsearch-${json.cluster.name}-backup.json`);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n        setDownloadModal(false);\r\n    }\r\n\r\n    function handleUpload() {\r\n        let fd = new FormData();\r\n        fd.append('filename', file);\r\n\r\n        setUploadError(\"\");\r\n        setUploadProgress(true);\r\n        dispatch(sendFile(fd))\r\n            .then(async (res) => {\r\n                \r\n                setAlertFlag(true);\r\n                setDownloadResults(\"\")\r\n                if (res.data.result) {\r\n                    setUploadResults(res.data);\r\n                    setAlertColor(\"info\");\r\n                    setAlertMessage(res.data.message)\r\n                    setUploadModal(false);\r\n                } else {\r\n                    setAlertColor(\"error\");\r\n                    setUploadResults(null);\r\n                    setAlertMessage(\"실패\")\r\n                    setUploadError(res.data.message);\r\n                    setUploadModal(false);\r\n                }\r\n                setFile(null);\r\n                setUploadProgress(false);\r\n            }).catch(async (err) => {\r\n                console.log(err)\r\n                setUploadError(\"에러 발생\");\r\n                setAlertFlag(true);\r\n                setAlertColor(\"error\");\r\n                setAlertMessage(\"실패\");\r\n                setUploadProgress(false);\r\n                setFile(null);\r\n                // await utils.sleep(1000);\r\n            });\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"마이그레이션\" />\r\n            <Grid container={true}>\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n                        마이그레이션\r\n                    </Typography>\r\n                </Grid>\r\n                <Divider my={6} />\r\n            </Grid>\r\n            <Box style={{ backgroundColor: \"white\", padding: \"15px\", marginBottom: \"20px\" }}>\r\n                <Typography variant=\"h5\" style={{ margin: \"8px\" }}>다운로드</Typography>\r\n                <Box ml={2} mt={4} mb={2}>\r\n                    이 클러스터의 백업 데이터를 다운로드 합니다\r\n                </Box>\r\n                <Button style={{margin: \"8px\"}} variant=\"outlined\" color=\"primary\" onClick={() => { setDownloadModal(true) }}>\r\n                    다운로드\r\n                </Button>\r\n            </Box>\r\n            <Box style={{ backgroundColor: \"white\", padding: \"15px\", marginBottom: \"20px\" }}>\r\n                <Typography variant=\"h5\" style={{ margin: \"8px\" }}>업로드</Typography>\r\n                <Box ml={2} mt={4} mb={2}>\r\n                    백업 데이터로 클러스터를 셋팅 합니다.\r\n                </Box>\r\n                {authUser.role.manage ? \r\n                    <Button style={{margin: \"8px\"}} variant=\"outlined\" color=\"primary\" onClick={() => { setUploadModal(true) }}>\r\n                        업로드\r\n                    </Button> : \r\n                    <Button style={{margin: \"8px\"}} variant=\"outlined\" color=\"primary\" disabled>\r\n                        업로드\r\n                    </Button>\r\n                }\r\n                \r\n            </Box>\r\n            {/* <Card mb={6} >\r\n                <CardContent> */}\r\n                    <Box width=\"100%\">\r\n                        {\r\n                            downloadResults.length === 0 ? <></> : \r\n                            <Table key=\"detailResult\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h4\">다운로드 결과</Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\">파이프라인 다운로드 갯수: { downloadResults.pipeline.result === true ? downloadResults.pipeline.count : 0}</Typography>\r\n                                                <br />\r\n                                                {downloadResults.pipeline.list.length > 0 ?\r\n                                                    downloadResults.pipeline.list.map((item) => {\r\n                                                        return <div key={item + \"_pipeline_download\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\">컬렉션 다운로드 갯수: { downloadResults.collection.result === true ? downloadResults.collection.count : 0}</Typography>\r\n                                                <br />\r\n                                                {downloadResults.collection.list.length > 0 ?\r\n                                                    downloadResults.collection.list.map((item) => {\r\n                                                        return <div key={item + \"_collection_download\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\">JDBC 다운로드 갯수: { downloadResults.jdbc.result === true ? downloadResults.jdbc.count : 0}</Typography>\r\n                                                <br />\r\n                                                {downloadResults.jdbc.list.length > 0 ?\r\n                                                    downloadResults.jdbc.list.map((item) => {\r\n                                                        return <div key={item + \"_jdbc_download\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\">템플릿 다운로드 갯수: { downloadResults.templates.result === true ? downloadResults.templates.count : 0}</Typography>\r\n                                                <br />\r\n                                                {downloadResults.templates.list.length > 0 ?\r\n                                                    downloadResults.templates.list.map((item) => {\r\n                                                        return <div key={item + \"_templates_download\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                        }\r\n                        {\r\n                            uploadError.length === 0 ? <></> : \r\n                            <Box>\r\n                                <Typography variant=\"h4\" color=\"red\" style={{margin:\"20px 0 8px 4px\"}}>업로드 에러</Typography>\r\n                                <Box m={2} border=\"1px solid red\" p={3}>\r\n                                    {uploadError}\r\n                                </Box>\r\n                            </Box>\r\n                        }\r\n\r\n                        {\r\n                            uploadResults == null ? <></> :\r\n                                <Table key=\"detailResult\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h4\">업로드 결과</Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\">[파이프라인] 총 갯수: {uploadResults.pipeline.length}</Typography>\r\n                                                <br />\r\n                                                {uploadResults.pipeline.length > 0 ?\r\n                                                    uploadResults.pipeline.map((item) => {\r\n                                                        return <div key={item + \"_pipeline\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\" >[컬렉션] 총 갯수: {uploadResults.collection.length}</Typography>\r\n                                                <br />\r\n                                                {uploadResults.collection.length > 0 ?\r\n                                                    uploadResults.collection.map((item) => {\r\n                                                        return <div key={item + \"_collection\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\">[JDBC] 총 갯수: {uploadResults.jdbc.length}</Typography>\r\n                                                <br />\r\n                                                {uploadResults.jdbc.length > 0 ?\r\n                                                    uploadResults.jdbc.map((item) => {\r\n                                                        return <div key={item + \"_jdbc\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow hover>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h5\">[템플릿] 총 갯수: {uploadResults.templates.length}</Typography>\r\n                                                <br />\r\n                                                {uploadResults.templates.length > 0 ?\r\n                                                    uploadResults.templates.map((item) => {\r\n                                                        return <div key={item + \"_templates\"} dangerouslySetInnerHTML={{ __html: \" - \" + item }} />\r\n                                                    })\r\n                                                    : <></>}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                        }\r\n\r\n                    </Box>\r\n                {/* </CardContent>\r\n            </Card> */}\r\n            {/* File Upload Modal */}\r\n            <Snackbar open={alertFlag} autoHideDuration={3000} onClose={() => { setAlertFlag(false); setAlertMessage(\"\") }}>\r\n                <MuiAlert elevation={6} variant=\"filled\" severity={alertColor}> {alertMessage} </MuiAlert>\r\n            </Snackbar>\r\n\r\n            <Dialog open={downloadModal}\r\n                fullWidth\r\n                onClose={() => setDownloadModal(false)}\r\n            >\r\n                <DialogTitle>\r\n                    데이터 백업\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Box>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox color=\"primary\"\r\n                                    checked={pipeline}\r\n                                    onChange={(e) => {\r\n                                        setPipeline(e.target.checked)\r\n                                    }} />}\r\n                            label=\"파이프라인\"\r\n                            labelPlacement=\"end\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox color=\"primary\"\r\n                                    checked={templates}\r\n                                    onChange={(e) => {\r\n                                        setTemplates(e.target.checked)\r\n                                    }} />}\r\n                            label=\"템플릿\"\r\n                            labelPlacement=\"end\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox color=\"primary\"\r\n                                    checked={collection}\r\n                                    onChange={(e) => {\r\n                                        setCollection(e.target.checked)\r\n                                    }} />}\r\n                            label=\"컬렉션\"\r\n                            labelPlacement=\"end\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox color=\"primary\"\r\n                                    checked={jdbc}\r\n                                    onChange={(e) => {\r\n                                        setJdbc(e.target.checked)\r\n                                    }} />}\r\n                            label=\"JDBC\"\r\n                            labelPlacement=\"end\"\r\n                        />\r\n                    </Box>\r\n                    이 클러스터의 데이터를 백업 하시겠습니까? (json 파일로 저장됩니다.)\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" style={{ whiteSpace: \"nowrap\" }} onClick={() => handleDownload()}>백업</Button>\r\n                    <Button onClick={() => setDownloadModal(false)}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={uploadModal}\r\n                fullWidth\r\n                onClose={() => setUploadModal(false)}\r\n            >\r\n                <DialogTitle>\r\n                    데이터 업로드\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <input\r\n                        type='file'\r\n                        onChange={(e) => {\r\n                            setFile(e.target.files[0])\r\n                        }}\r\n                    />\r\n                    <Box m={2}>\r\n                    {\r\n                        uploadProgress ? <LinearProgress /> : <></>\r\n                    }\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" style={{ whiteSpace: \"nowrap\" }} onClick={() => handleUpload()}>업로드</Button>\r\n                    <Button onClick={() => setUploadModal(false)}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n}))(Migration);"],"sourceRoot":""}