{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/flat/index.js","pages/indices/index/Statistics.js"],"names":["Tablelvl2Context","React","TableContext","Card","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","size","sortDirection","variantProp","variant","table","tablelvl2","ariaSort","concat","capitalize","stickyHeader","theme","typography","body2","display","verticalAlign","borderBottom","palette","type","lighten","fade","divider","darken","textAlign","head","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","footer","secondary","fontSize","sizeSmall","paddingRight","width","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","backgroundColor","background","default","TableRow","_props$hover","hover","_props$selected","selected","outline","action","main","selectedOpacity","Table","_props$padding","_props$size","_props$stickyHeader","Provider","value","borderCollapse","borderSpacing","spacing","captionSide","TableBody","isBuffer","obj","constructor","keyIdentity","key","flatten","target","opts","delimiter","maxDepth","transformKey","output","step","object","prev","currentDepth","Object","keys","forEach","isarray","safe","Array","isArray","prototype","toString","call","isbuffer","isobject","newKey","length","module","exports","unflatten","overwrite","result","getkey","parsedKey","Number","isNaN","indexOf","reduce","val","isObject","isEmpty","keyPrefix","recipient","addKeys","split","map","key1","shift","key2","undefined","connect","store","indicesReducers","index","indexState","flatMap","group","fullKey","fieldKey","substring","push","String","console","log","Fragment","mt","toUpperCase","my","style"],"mappings":"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","file":"static/js/31.083cc84f.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var Component;\n\n  if (component) {\n    Component = component;\n  } else {\n    Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && tablelvl2 && tablelvl2.variant === 'head') {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['head', 'body', 'footer'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected,&$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'table' : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return React.createElement(TableContext.Provider, {\n    value: table\n  }, React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tbody' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","module.exports = flatten\nflatten.flatten = flatten\nflatten.unflatten = unflatten\n\nfunction isBuffer (obj) {\n  return obj &&\n    obj.constructor &&\n    (typeof obj.constructor.isBuffer === 'function') &&\n    obj.constructor.isBuffer(obj)\n}\n\nfunction keyIdentity (key) {\n  return key\n}\n\nfunction flatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const maxDepth = opts.maxDepth\n  const transformKey = opts.transformKey || keyIdentity\n  const output = {}\n\n  function step (object, prev, currentDepth) {\n    currentDepth = currentDepth || 1\n    Object.keys(object).forEach(function (key) {\n      const value = object[key]\n      const isarray = opts.safe && Array.isArray(value)\n      const type = Object.prototype.toString.call(value)\n      const isbuffer = isBuffer(value)\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      const newKey = prev\n        ? prev + delimiter + transformKey(key)\n        : transformKey(key)\n\n      if (!isarray && !isbuffer && isobject && Object.keys(value).length &&\n        (!opts.maxDepth || currentDepth < maxDepth)) {\n        return step(value, newKey, currentDepth + 1)\n      }\n\n      output[newKey] = value\n    })\n  }\n\n  step(target)\n\n  return output\n}\n\nfunction unflatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const overwrite = opts.overwrite || false\n  const transformKey = opts.transformKey || keyIdentity\n  const result = {}\n\n  const isbuffer = isBuffer(target)\n  if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\n    return target\n  }\n\n  // safely ensure that the key is\n  // an integer.\n  function getkey (key) {\n    const parsedKey = Number(key)\n\n    return (\n      isNaN(parsedKey) ||\n      key.indexOf('.') !== -1 ||\n      opts.object\n    ) ? key\n      : parsedKey\n  }\n\n  function addKeys (keyPrefix, recipient, target) {\n    return Object.keys(target).reduce(function (result, key) {\n      result[keyPrefix + delimiter + key] = target[key]\n\n      return result\n    }, recipient)\n  }\n\n  function isEmpty (val) {\n    const type = Object.prototype.toString.call(val)\n    const isArray = type === '[object Array]'\n    const isObject = type === '[object Object]'\n\n    if (!val) {\n      return true\n    } else if (isArray) {\n      return !val.length\n    } else if (isObject) {\n      return !Object.keys(val).length\n    }\n  }\n\n  target = Object.keys(target).reduce(function (result, key) {\n    const type = Object.prototype.toString.call(target[key])\n    const isObject = (type === '[object Object]' || type === '[object Array]')\n    if (!isObject || isEmpty(target[key])) {\n      result[key] = target[key]\n      return result\n    } else {\n      return addKeys(\n        key,\n        result,\n        flatten(target[key], opts)\n      )\n    }\n  }, {})\n\n  Object.keys(target).forEach(function (key) {\n    const split = key.split(delimiter).map(transformKey)\n    let key1 = getkey(split.shift())\n    let key2 = getkey(split[0])\n    let recipient = result\n\n    while (key2 !== undefined) {\n      if (key1 === '__proto__') {\n        return\n      }\n\n      const type = Object.prototype.toString.call(recipient[key1])\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      // do not write over falsey, non-undefined values if overwrite is false\n      if (!overwrite && !isobject && typeof recipient[key1] !== 'undefined') {\n        return\n      }\n\n      if ((overwrite && !isobject) || (!overwrite && recipient[key1] == null)) {\n        recipient[key1] = (\n          typeof key2 === 'number' &&\n          !opts.object ? [] : {}\n        )\n      }\n\n      recipient = recipient[key1]\n      if (split.length > 0) {\n        key1 = getkey(split.shift())\n        key2 = getkey(split[0])\n      }\n    }\n\n    // unflatten again for 'messy objects'\n    recipient[key1] = unflatten(target[key], opts)\n  })\n\n  return result\n}\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\n\r\n// import {spacing} from \"@material-ui/system\";\r\nimport {flatten} from \"flat\";\r\n\r\n// const useStyles = makeStyles((theme) => ({}));\r\n\r\n\r\nfunction Statistics({index, indexState}) {\r\n    if (!index || indexState['indices'] === undefined) {\r\n        return null\r\n    }\r\n\r\n    const flatMap = flatten(((indexState['indices']||{})[index]||{})['total']||{})\r\n    let group = {}\r\n    Object.keys(flatMap).forEach(fullKey => {\r\n        const fieldKey = fullKey.substring(0, fullKey.indexOf(\".\"))\r\n        if (group[fieldKey] === undefined) {\r\n            group[fieldKey] = []\r\n        }\r\n        group[fieldKey].push({key: fullKey, value: String(flatMap[fullKey])})\r\n    })\r\n    console.log(group)\r\n    return (\r\n        <React.Fragment>\r\n            <Box>\r\n                {\r\n                    Object.keys(group).map(key => {\r\n                        return (\r\n                            <React.Fragment key={key}>\r\n                                <br/>\r\n                                <Typography variant={\"h5\"} mt={5}>\r\n                                    {key.toUpperCase()}\r\n                                </Typography>\r\n                                <br />\r\n                                <Card my={5}>\r\n                                    <CardContent>\r\n                                        <Table>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    group[key].map(obj => {\r\n                                                        return (\r\n                                                            <TableRow key={obj['key']}>\r\n                                                                <TableCell style={{width: \"50%\"}}>{obj['key']}</TableCell>\r\n                                                                <TableCell style={{width: \"50%\"}}>{obj['value']}</TableCell>\r\n                                                            </TableRow>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </React.Fragment>\r\n                        )\r\n                    })\r\n                }\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({...store.indicesReducers}))(Statistics);\r\n"],"sourceRoot":""}