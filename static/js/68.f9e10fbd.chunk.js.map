{"version":3,"sources":["redux/actions/toolsActions.js","pages/analysis/tools/index.js"],"names":["client","Client","setAnalyzerList","dispatch","call","uri","then","response","type","SET_TOOLS_ANALYZER_LIST","payload","data","setPluginList","SET_TOOLS_PLUGIN_LIST","useStyles","makeStyles","theme","formControl","minWidth","select","marginLeft","spacing","flex","borderBottom","Card","styled","MuiCard","Divider","MuiDivider","TextField","MuiTextField","BriefResult","resultBrief","total","tokens","i","length","push","token","Table","width","TableBody","map","listItem","listItemIndex","TableRow","hover","key","item","TableCell","DetailResult","resultDetail","result","Typography","variant","dangerouslySetInnerHTML","__html","value","ToolsCard","analyzerList","pluginList","keyword","React","useRef","useState","selectedItem","setSelectedItem","toolsTypeAction","setToolsTypeAction","classes","state","setState","detailPluginList","setDetailPluginList","useEffect","index2AnalyzerList","undefined","Object","keys","filter","analyzerKey","startsWith","analysis","settings","index","analyzer","handleToolsClick","analyzer_contents","current","analyzer_select","document","getElementById","split","innerHTML","replace","text","method","SET_TOOLS_ANALYZE_BRIEF_RESULT","actionAnalyzer","catch","error","console","log","plugin","useForQuery","SET_TOOLS_ANALYZE_DETAIL_RESULT","actionPlugin","mb","CardContent","label","inputRef","fullWidth","onKeyPress","e","Box","display","alignItems","justifyContent","p","FormControl","RadioGroup","row","onChange","event","target","FormControlLabel","control","Radio","size","Checkbox","checked","onClick","className","Select","id","defaultValue","displayEmpty","MenuItem","selected","disabled","Button","color","m","connect","store","toolsReducers","Fragment","title","my","Grid","container","xs"],"mappings":"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","file":"static/js/68.f9e10fbd.chunk.js","sourcesContent":["import {\r\n    SET_TOOLS_ANALYZE_BRIEF_RESULT,\r\n    SET_TOOLS_ANALYZE_DETAIL_RESULT,\r\n    SET_TOOLS_ANALYZER_LIST,\r\n    SET_TOOLS_PLUGIN_LIST\r\n} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setAnalyzerList = () => dispatch => client.call({\r\n    uri: \"/elasticsearch/_all/_settings\",\r\n}).then(response => dispatch({type: SET_TOOLS_ANALYZER_LIST, payload: response.data}))\r\n\r\nexport const setPluginList = () => dispatch => client.call({\r\n    // uri: \"/elasticsearch/_cat/plugins\",\r\n    uri: \"/tools/plugins\"\r\n}).then(response => dispatch({type: SET_TOOLS_PLUGIN_LIST, payload: response.data}))\r\n\r\nexport const actionAnalyzer = (index, data) => dispatch => client.call({\r\n    uri: \"/elasticsearch/\" + index + \"/_analyze\",\r\n    method: 'POST',\r\n    data: data\r\n}).then(response => dispatch({type: SET_TOOLS_ANALYZE_BRIEF_RESULT, payload: response.data}))\r\n\r\nexport const actionPlugin = (data) => dispatch => client.call({\r\n    uri: \"/tools/detail/analysis\",\r\n    method: 'POST',\r\n    data: data\r\n}).then(response => { dispatch({type: SET_TOOLS_ANALYZE_DETAIL_RESULT, payload: response.data}) } )","import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport Helmet from 'react-helmet';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {actionAnalyzer, actionPlugin, setAnalyzerList, setPluginList} from '@actions/toolsActions'\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Checkbox,\r\n    Divider as MuiDivider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    MenuItem,\r\n    Radio,\r\n    RadioGroup,\r\n    Select,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    TextField as MuiTextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250\r\n    },\r\n    select: { minWidth: 120, marginLeft: theme.spacing(1), flex: 1, borderBottom: \"1px solid gray\", '&:hover': { borderBottom: \"1px solid black\" } },\r\n}));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\n\r\nfunction BriefResult({resultBrief}){\r\n    let total = [];\r\n    if(resultBrief.tokens){\r\n        for(let i = 0; i < resultBrief.tokens.length; i++){\r\n            if(i % 5 === 0){\r\n                total.push([]);\r\n            }\r\n            total[total.length-1].push(resultBrief.tokens[i].token)\r\n        }\r\n    }\r\n    \r\n    return <Table>\r\n                <colgroup>\r\n                    <col width=\"20%\" />\r\n                    <col width=\"20%\" />\r\n                    <col width=\"20%\" />\r\n                    <col width=\"20%\" />\r\n                    <col width=\"20%\" />\r\n                </colgroup>\r\n                <TableBody>\r\n                {total.length > 0 ?\r\n                    total.map((listItem, listItemIndex) => {\r\n                        return (<TableRow hover key={listItemIndex}>\r\n                            {listItem.map((item) => { return <TableCell> {item}</TableCell> })}\r\n                        </TableRow>)\r\n                    })\r\n                    : <TableRow hover key={\"nothing\"}><TableCell>{\"검색된 결과가 없습니다\"}</TableCell></TableRow>}\r\n                    </TableBody>\r\n        </Table>\r\n}\r\n\r\nfunction DetailResult({resultDetail}){\r\n    \r\n    if(!resultDetail.result){\r\n        return <Table key=\"empltyDetail\">\r\n            <TableBody>\r\n            <TableRow>\r\n                <TableCell>{\"검색된 결과가 없습니다.\"}</TableCell>\r\n            </TableRow>\r\n            </TableBody>\r\n        </Table>\r\n    }\r\n\r\n    return (<Table key=\"detailResult\">\r\n        <TableBody>\r\n        <TableRow hover>\r\n            <TableCell>\r\n                <Typography variant=\"h4\">1. {resultDetail.result[2].key}</Typography>\r\n                    <br />\r\n                    <div dangerouslySetInnerHTML={ {__html: resultDetail.result[2].value} }></div>\r\n                </TableCell>\r\n        </TableRow>\r\n        <TableRow hover>\r\n            <TableCell>\r\n                <Typography variant=\"h4\" >2. {resultDetail.result[3].key}</Typography>\r\n                <br />\r\n                <div dangerouslySetInnerHTML={ {__html: resultDetail.result[3].value} }></div>\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow hover>\r\n            <TableCell>\r\n                <Typography variant=\"h4\">3. {resultDetail.result[4].key}</Typography>\r\n                <br />\r\n                <div dangerouslySetInnerHTML={ {__html: resultDetail.result[4].value} }></div>\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow hover>\r\n            <TableCell>\r\n            <Typography variant=\"h4\">4. {resultDetail.result[5].key}</Typography>\r\n            <br />\r\n                <div dangerouslySetInnerHTML={ {__html: resultDetail.result[5].value} }></div>\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow hover>\r\n            <TableCell>\r\n                <Typography variant=\"h4\">5. {resultDetail.result[6].key}</Typography>\r\n                <br />\r\n                <div dangerouslySetInnerHTML={ {__html: resultDetail.result[6].value} }></div>\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow hover>\r\n            <TableCell>\r\n                <Typography variant=\"h4\">6. {resultDetail.result[7].key}</Typography>\r\n                <br />\r\n                <div dangerouslySetInnerHTML={ {__html: resultDetail.result[7].value} }></div>\r\n            </TableCell>\r\n        </TableRow>\r\n        </TableBody>\r\n    </Table>\r\n    );\r\n}\r\n\r\nfunction ToolsCard({dispatch, analyzerList, pluginList, resultBrief, resultDetail}) {\r\n    const keyword = React.useRef({value: \"\"})\r\n    const [selectedItem, setSelectedItem] = useState(\"EMPTY\");\r\n    const [toolsTypeAction, setToolsTypeAction] = useState(\"detail\")\r\n    const classes = useStyles()\r\n    const [state, setState] = useState(true);\r\n    const [detailPluginList, setDetailPluginList] = useState(((pluginList||{})['plugins']||[]));\r\n\r\n    useEffect(() => {\r\n        if(toolsTypeAction === 'detail') {\r\n            setDetailPluginList(((pluginList||{})['plugins']||[]))\r\n            if(detailPluginList.length > 0 )setSelectedItem(detailPluginList[0])\r\n        }\r\n    }, [toolsTypeAction, pluginList, detailPluginList])\r\n\r\n    let index2AnalyzerList = []\r\n    if (analyzerList !== undefined && analyzerList !== null) {\r\n        Object.keys(analyzerList).filter(analyzerKey => !analyzerKey.startsWith(\".\")).map(analyzerKey => {\r\n            const analysis = analyzerList[analyzerKey].settings.index.analysis;\r\n            if (analysis !== undefined && analysis.analyzer !== undefined) {\r\n                Object.keys(analysis.analyzer).map(analyzer => index2AnalyzerList.push(analyzerKey + \"/\" + analyzer))\r\n            }\r\n            return <></>;\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if(toolsTypeAction === 'brief'){\r\n            if (((pluginList||{})['plugins']||[]).length !== 0) {\r\n                setSelectedItem(((pluginList||{})['plugins']||[])[0])\r\n            } else {\r\n                setSelectedItem(\"EMPTY\")\r\n            }\r\n            dispatch(setAnalyzerList())\r\n        }else{\r\n            if (index2AnalyzerList.length !== 0) {\r\n                setSelectedItem(index2AnalyzerList[0])\r\n            } else {\r\n                setSelectedItem(\"EMPTY\")\r\n            }\r\n            dispatch(setPluginList())\r\n        }\r\n        setToolsTypeAction(event.target.value)\r\n    };\r\n\r\n\r\n    const handleSelectedItemChange = (event) =>{\r\n        setSelectedItem(event.target.value)\r\n    }\r\n\r\n    const handleToolsClick = () =>{\r\n        let analyzer_contents = keyword.current.value;\r\n\r\n        let analyzer_select = document.getElementById(\"analyzer_select\");\r\n        let data = {};\r\n        if(toolsTypeAction === 'brief') {\r\n            let split = analyzer_select.innerHTML.split('/');\r\n            if (split && split.length === 2) {\r\n                let index = split[0].replace(' ', '');\r\n                let analyzer = split[1].replace(' ', '');\r\n                data.text = analyzer_contents;\r\n                data.analyzer = analyzer\r\n                dispatch(actionAnalyzer(index, data)).catch((error) =>{console.log(error)});\r\n            } else {\r\n                console.error('err', split)\r\n            }\r\n        }else {\r\n            let plugin = analyzer_select.innerHTML\r\n            plugin = plugin.replace(/ /gi, \"\");\r\n\r\n            data.useForQuery = state;\r\n            data.plugin = plugin;\r\n            data.text = analyzer_contents;\r\n            dispatch(actionPlugin(data));\r\n        }\r\n    }\r\n    return (\r\n        <Card mb={6}>\r\n            <CardContent>\r\n                <TextField \r\n                    label=\"분석할 내용을 입력해 주세요.\" \r\n                    inputRef={keyword}\r\n                    variant=\"outlined\" \r\n                    fullWidth \r\n                    onKeyPress={ \r\n                        (e) => { if (e.key === 'Enter') handleToolsClick();}\r\n                    } />\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"left\" >\r\n                    <Box p={3}>\r\n                        <FormControl>\r\n                            <RadioGroup value={toolsTypeAction} row onChange={handleChange} >\r\n                                <FormControlLabel value=\"brief\" control={<Radio size=\"small\" />} label=\"간략\" />\r\n                                <FormControlLabel value=\"detail\" control={<Radio size=\"small\" />} label=\"상세\" />\r\n                                {toolsTypeAction === 'brief' ? <></> :  \r\n                                    <FormControlLabel control={ <Checkbox checked={state} onClick={() => {setState(!state)}}/> } label=\"쿼리용도\" />\r\n                                }\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box p={3}>\r\n                        <FormControl className={classes.formControl}>\r\n                            {/* <InputLabel>분석 도구 선택</InputLabel> */}\r\n                            <Select id=\"analyzer_select\" \r\n                                value={selectedItem} \r\n                                onChange={handleSelectedItemChange}\r\n                                defaultValue=\"\"\r\n                                displayEmpty\r\n                                >\r\n                                    {\r\n                                        toolsTypeAction === \"brief\" ?\r\n                                        index2AnalyzerList.length === 0 ?\r\n                                            <MenuItem key={\"no\"} selected={true} disabled={true} value=\"EMPTY\"> 분석기가 없습니다. </MenuItem>\r\n                                            :\r\n                                            index2AnalyzerList.map((item, index) => {\r\n                                                if(index === 0) {\r\n                                                    return <MenuItem key={item} selected={true} value={item}> {item} </MenuItem>;\r\n                                                }else{\r\n                                                    return <MenuItem key={item} value={item}> {item} </MenuItem>;\r\n                                                }\r\n                                            })\r\n                                        :\r\n                                        detailPluginList.length === 0 ?\r\n                                        <MenuItem key={\"no\"} selected={true} disabled={true} value=\"EMPTY\"> 분석기가 없습니다. </MenuItem>\r\n                                        :\r\n                                        detailPluginList.map((item, index) => {\r\n                                            if(index === 0) {\r\n                                                return <MenuItem key={item} selected={true} value={item}> {item} </MenuItem>;\r\n                                            }else{\r\n                                                return <MenuItem key={item} value={item}> {item} </MenuItem>;\r\n                                            }\r\n                                        }) \r\n                                        // ((pluginList||{})['plugins']||[]).length === 0 ?\r\n                                        //     <MenuItem key={\"no\"} selected={true} disabled={true} value=\"EMPTY\"> 분석기가 없습니다. </MenuItem>\r\n                                        //     :\r\n                                        //     ((pluginList||{})['plugins']||[]).map((item, index) => {\r\n                                        //         if(index === 0) {\r\n                                        //             return <MenuItem key={item} selected={true} value={item}> {item} </MenuItem>;\r\n                                        //         }else{\r\n                                        //             return <MenuItem key={item} value={item}> {item} </MenuItem>;\r\n                                        //         }\r\n                                        //     })\r\n                                    }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={handleToolsClick}>\r\n                        분석\r\n                    </Button>\r\n                </Box>\r\n\r\n                <Box m={2}>\r\n                    <Typography variant=\"h4\" display=\"inline\" >분석 결과</Typography>\r\n                </Box>\r\n                <Box p={2}>\r\n                    {toolsTypeAction === 'brief' ? <BriefResult resultBrief={resultBrief} /> :  <DetailResult resultDetail={resultDetail}/>}\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction Tools({ dispatch, analyzerList, pluginList, resultBrief, resultDetail }) {\r\n    useEffect(() => {\r\n        dispatch(setAnalyzerList())\r\n        dispatch(setPluginList())\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet title=\"분석도구\"/>\r\n            <Typography variant=\"h3\" display=\"inline\">\r\n                분석도구\r\n            </Typography>\r\n\r\n            <Divider my={6} />\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12}>\r\n                    <ToolsCard \r\n                        dispatch={dispatch} \r\n                        analyzerList={analyzerList} \r\n                        pluginList={pluginList}  \r\n                        resultBrief={resultBrief} \r\n                        resultDetail={resultDetail} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(store => ({\r\n    pluginList: store.toolsReducers.pluginList,\r\n    analyzerList: store.toolsReducers.analyzerList,\r\n    resultBrief : store.toolsReducers.resultBrief,\r\n    resultDetail : store.toolsReducers.resultDetail\r\n}))(Tools);\r\n"],"sourceRoot":""}