{"version":3,"sources":["pages/analysis/dictionary/Summary.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","utils.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["systemInfo","SummaryTable","summary","makeCheckedIdList","makeCheckedList","undefined","dictionaryInfo","dictionarySettings","infoDict","JSON","parse","dictionary","settings","tableInfo","i","type","info","name","push","j","id","count","words","indexCount","handleCheckBox","event","target","value","checked","map","key","documentId","onChange","Number","toLocaleString","updatedTime","Date","appliedTime","tokenType","ignoreCase","connect","store","authUser","dsearchReducers","dictionaryReducers","update","dispatch","useState","applyDict","setApplyDict","progress","setProgress","disabled","setDisabled","checkedList","setCheckedList","checkedIdList","setCheckedIdList","useEffect","setSummary","Fragment","role","analysis","variant","color","onClick","data","str","ids","Object","keys","length","applyDictionary","then","utils","sleep","open","autoHideDuration","onClose","elevation","severity","cList","list","keyList","flag","disabledApplyButton","SwitchBase","React","props","ref","autoFocus","checkedProp","checkedIcon","classes","className","defaultChecked","disabledProp","icon","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","input","newChecked","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","Card","_props$raised","raised","Paper","overflow","CardContent","_props$component","Component","paddingBottom","ms","Promise","resolve","setTimeout","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary"],"mappings":"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","file":"static/js/40.3c30ee01.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Box, CircularProgress,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Checkbox, Snackbar\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {setSummary, applyDictionary} from \"../../../redux/actions/dictionaryActions\";\r\nimport utils from \"../../../utils\";\r\n\r\n\r\nconst systemInfo = {\r\n    type: \"SYSTEM\",\r\n    name: \"시스템 사전\"\r\n}\r\n\r\nfunction SummaryTable({summary, makeCheckedIdList, makeCheckedList}){\r\n    if(summary.dictionaryInfo === undefined || summary.dictionarySettings === undefined) return <></>;\r\n\r\n    let infoDict = JSON.parse(summary.dictionaryInfo).dictionary;\r\n    let settings = summary.dictionarySettings;\r\n    let tableInfo = [];\r\n\r\n    for(let i in infoDict){\r\n        if(infoDict[i].type === systemInfo.type){\r\n            var info = infoDict[i];\r\n            info.name = systemInfo.name;\r\n            tableInfo.push(info);\r\n            break;\r\n        }\r\n    }\r\n\r\n    for(let i in settings){\r\n        let info = settings[i];\r\n        for(var j in infoDict){\r\n            if(settings[i].id === infoDict[j].type){\r\n                info.count = infoDict[j].count;\r\n                info.words = infoDict[j].words;\r\n                info.indexCount = infoDict[j].indexCount;\r\n                break;\r\n            }\r\n        }\r\n\r\n        tableInfo.push(info);\r\n    }\r\n    \r\n    const handleCheckBox = (event) =>{\r\n        makeCheckedIdList(event.target.value, event.target.id);\r\n        makeCheckedList(event.target.value, event.target.checked);\r\n    }\r\n    \r\n    return tableInfo.map((info) => { \r\n        return  <TableRow key={info.id}>\r\n            <TableCell> {info.type === systemInfo.type ? <></> : <Checkbox id={info.documentId} name={\"checkbox\"} value={info.id} onChange={handleCheckBox}/>} </TableCell>\r\n            <TableCell>{info.name}</TableCell>\r\n            <TableCell>{info.type}</TableCell>\r\n            <TableCell>{info.indexCount ? Number(info.indexCount).toLocaleString() : \"0\"}</TableCell>\r\n            <TableCell> {info.updatedTime ? new Date(info.updatedTime).toLocaleString() : \"-\"} </TableCell>\r\n            <TableCell>{Number(info.count).toLocaleString()}</TableCell>\r\n            <TableCell> {info.appliedTime ? new Date(info.appliedTime).toLocaleString() : \"-\"} </TableCell>\r\n            <TableCell> {info.tokenType ? info.tokenType : \"-\"} </TableCell>\r\n            <TableCell> {info.ignoreCase ? info.ignoreCase ? \"Y\": \"N\" : \"-\"} </TableCell>\r\n        </TableRow> });\r\n}\r\n\r\n\r\n function Summary({dispatch, authUser, summary, update}) {\r\n    const [applyDict, setApplyDict] = useState(false);\r\n    const [progress, setProgress] = useState(false);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [checkedList, setCheckedList] = useState({});\r\n    const [checkedIdList, setCheckedIdList] = useState({});\r\n\r\n    useEffect(() => {\r\n        dispatch(setSummary())\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function makeCheckedIdList(key, value){\r\n        let cList = {};\r\n        let list = Object.keys(checkedIdList);\r\n        for(let key of list){\r\n            cList[key] = checkedIdList[key];\r\n        }\r\n\r\n        cList[key] = value;\r\n        setCheckedIdList(cList);\r\n    }\r\n\r\n    function makeCheckedList(key, value){\r\n        let cList = {};\r\n        let list = Object.keys(checkedList);\r\n        for(let key of list){\r\n            cList[key] = checkedList[key];\r\n        }\r\n\r\n        cList[key] = value;\r\n        setCheckedList(cList);\r\n        disabledApplyButton(cList)\r\n    }\r\n\r\n    const clickApplyDictionary = (event) => {\r\n        let data = {};\r\n        let str = \"\";\r\n        let ids = \"\";\r\n        \r\n        setProgress(true);\r\n        let keyList = Object.keys(checkedList);\r\n        for(let key of keyList){\r\n            if(checkedList[key]){\r\n                if(str.length === 0){\r\n                    str = key;\r\n                    ids = checkedIdList[key]\r\n                }else{\r\n                    str += \",\" + key;\r\n                    ids += \",\" + checkedIdList[key]\r\n                }\r\n            }\r\n        }\r\n        data.ids = ids;\r\n        data.type = str;\r\n        dispatch(applyDictionary(data)).then(() => {setApplyDict(true); setProgress(false); utils.sleep(1000).then(() => { dispatch(setSummary()) }); });\r\n    }\r\n\r\n    function disabledApplyButton(list){\r\n        let keyList = Object.keys(list);\r\n        let flag = true;\r\n        for(let key of keyList){\r\n            if(list[key]){\r\n                flag = false; \r\n                break;\r\n            }\r\n        }\r\n        setDisabled(flag);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <br/>\r\n            <Card>\r\n                <CardContent>\r\n                    <Box>\r\n                        {authUser.role.analysis ? \r\n                             progress ? <CircularProgress /> : <Button disabled={disabled} variant={\"contained\"} color={\"primary\"} onClick={clickApplyDictionary}>사전적용</Button> \r\n                            : <></> }\r\n                    </Box>\r\n                    <Box>\r\n                        <Snackbar open={applyDict} autoHideDuration={5000} onClose={() => { setApplyDict(false) }}>\r\n                            <MuiAlert elevation={6} variant=\"filled\" severity=\"info\"> 사전 적용 성공 </MuiAlert>\r\n                        </Snackbar>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>#</TableCell>\r\n                                    <TableCell>이름</TableCell>\r\n                                    <TableCell>타업</TableCell>\r\n                                    <TableCell>작업단어갯수</TableCell>\r\n                                    <TableCell>수정시간</TableCell>\r\n                                    <TableCell>적용단어갯수</TableCell>\r\n                                    <TableCell>적용시간</TableCell>\r\n                                    <TableCell>토큰타입</TableCell>\r\n                                    <TableCell>대소문자무시</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <SummaryTable authUser={authUser} summary={summary} makeCheckedIdList={makeCheckedIdList} makeCheckedList={makeCheckedList} />\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(store => ({ \r\n    authUser: store.dsearchReducers.authUser,\r\n    summary: store.dictionaryReducers.summary,\r\n    update: store.dictionaryReducers.update\r\n}))(Summary)","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","const utils ={\r\n    sleep:(ms) => new Promise(resolve => setTimeout(resolve, ms)),\r\n\r\n\r\n\r\n}\r\n\r\nexport default utils","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}