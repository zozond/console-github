{"version":3,"sources":["pages/indices/pipeline/TestPipeline.js","redux/actions/pipelineActions.js"],"names":["useStyles","makeStyles","theme","formControl","minWidth","aceEditorTemplate","connect","store","authUser","dsearchReducers","pipelineList","pipelineReducers","pipeline","result","dispatch","classes","aceEditor","useRef","useState","checked","setChecked","progress","setProgress","setResult","snackbarFlag","setSnackbarFlag","handleTest","length","JSON","stringify","current","editor","getValue","str","parse","e","isJson","getPipelineDetail","then","payload","catch","error","getPipeline","useEffect","setPipelineList","Fragment","container","item","xs","md","lg","display","alignItems","justifyContent","mx","mb","className","id","labelId","value","onChange","event","setPipelineAction","target","undefined","Object","keys","sort","map","p","i","key","control","name","label","style","border","ref","mode","fontSize","height","tabSize","defaultValue","width","setOptions","useWorker","align","mt","fullWidth","variant","color","onClick","overflow","fontFamily","open","autoHideDuration","onClose","elevation","severity","client","Client","type","SET_PIPELINE","jsonData","call","uri","method","headers","data","response","SET_PIPELINE_RESULT","SET_PIPELINE_LIST","deletePipeline","DELETE_PIPELINE","addPipeline","ADD_PIPELINE","editPipeline"],"mappings":"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","file":"static/js/62.037a05f5.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Box, CircularProgress,\r\n    Card,\r\n    CardContent,\r\n    Button, Grid,\r\n    Checkbox, Snackbar,FormControlLabel,\r\n    FormControl, InputLabel, MenuItem, Select, Typography\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport { setPipelineAction, setPipelineList, getPipeline, getPipelineDetail } from '@actions/pipelineActions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 250\r\n    }\r\n}));\r\n\r\nconst aceEditorTemplate = {\r\n    \"docs\": [\r\n      {\r\n        \"_source\": {\r\n          \"field1\": \"<h1>hello world</h1>\",\r\n          \"field2\": \"<h2>hello world</h2>\",\r\n          \"field3\": \"<h3>hello world</h3>\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\nfunction TestPipeline({ dispatch, pipeline, pipelineList}) {\r\n    const classes = useStyles()\r\n    const aceEditor = useRef(aceEditorTemplate);\r\n    const [checked, setChecked] = useState(false);\r\n    const [progress, setProgress] = useState(false);\r\n    const [result, setResult] = useState({});\r\n    const [snackbarFlag, setSnackbarFlag] = useState(false)\r\n\r\n    const handleChange = (event) => {\r\n        dispatch(setPipelineAction(event.target.value))\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setPipelineList())\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function isJson(str) {\r\n        try {\r\n            let json = JSON.parse(str);\r\n            return (typeof json === 'object');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function handleTest(){\r\n        if( pipeline.length === 0 ){\r\n            setSnackbarFlag(true)\r\n            return;\r\n        }\r\n\r\n        if( JSON.stringify(aceEditor.current.editor.getValue()).length > 0 && isJson(aceEditor.current.editor.getValue())){\r\n            setProgress(true)\r\n            if( checked ){\r\n                dispatch(getPipelineDetail(pipeline, aceEditor.current.editor.getValue()))\r\n                .then((result) => {\r\n                    setProgress(false)\r\n                    setResult(result.payload);\r\n                })\r\n                .catch((error) => {\r\n                    setProgress(false)\r\n                })\r\n            }else{\r\n                dispatch(getPipeline(pipeline, aceEditor.current.editor.getValue())) \r\n                .then((result) => {\r\n                    setProgress(false)\r\n                    setResult(result.payload);\r\n                })\r\n                .catch((error) => {\r\n                    setProgress(false)\r\n                })\r\n            }\r\n        } else {\r\n            setSnackbarFlag(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <Card>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={12} lg={5}>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mx={3} mb={2}>\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel id=\"pipeline-select\">파이프라인</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"pipeline-select\"\r\n                                            id=\"pipeline-select\"\r\n                                            value={pipeline}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            {\r\n                                                pipelineList === null || pipelineList === undefined || Object.keys(pipelineList).length === 0 ?\r\n                                                    <></>\r\n                                                    : Object.keys(pipelineList).sort().map((p, i) => (<MenuItem key={i} value={p}>{p}</MenuItem>))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox checked={checked} onChange={() => {setChecked(!checked)}} name=\"자세히\" />}\r\n                                        label=\"자세히\"\r\n                                    />\r\n                                </Box>\r\n                                <Box mx={3} style={{ border: \"1px solid silver\" }}>\r\n                                    <AceEditor\r\n                                        ref={aceEditor}\r\n                                        id=\"aceEditor\"\r\n                                        mode=\"json\"\r\n                                        theme=\"kuroir\"\r\n                                        fontSize=\"15px\"\r\n                                        height={\"400px\"}\r\n                                        tabSize={2}\r\n                                        defaultValue={JSON.stringify(aceEditorTemplate, null, 2) }\r\n                                        // placeholder={JSON.stringify(aceEditorPlaceHolder, null, 2) }\r\n                                        width=\"100%\"\r\n                                        setOptions={{ useWorker: false }}\r\n                                    />\r\n                                </Box>\r\n                                <Box align=\"right\" mx={3} mt={3}>\r\n                                    {progress? <CircularProgress /> : <Button fullWidth variant=\"outlined\" color=\"primary\" onClick={() => handleTest()}> 테스트 </Button>}\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12} lg={7}>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mx={3} mb={8}>\r\n                                    <Typography color={\"textPrimary\"} variant=\"h6\" >파이프라인 테스트 결과</Typography>\r\n                                </Box>\r\n                                <Box style={{ overflow: \"scroll\", border: \"1px solid silver\" }} mx={3} id=\"move\">\r\n                                    <pre style={{height:\"400px\", width:\"100%\", fontFamily: \"godic\", fontSize:\"15px\"}}>\r\n                                        {JSON.stringify(result).length === 2 ? \"입력한 내용이 없습니다.\" : JSON.stringify(result,null,2)}\r\n                                    </pre>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Snackbar open={snackbarFlag} autoHideDuration={3000} onClose={() => { setSnackbarFlag(false); }}>\r\n                        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\"> {\"인덱스를 선택하였는지 혹은 json 을 제대로 입력하였는지 확인해주세요\"} </MuiAlert> \r\n                    </Snackbar>\r\n                </CardContent>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(store => ({\r\n    authUser: store.dsearchReducers.authUser,\r\n    pipelineList: store.pipelineReducers.pipelineList,\r\n    pipeline: store.pipelineReducers.pipeline,\r\n    result: store.pipelineReducers.result\r\n}))(TestPipeline)","import {SET_PIPELINE_LIST,SET_PIPELINE_RESULT, SET_PIPELINE, DELETE_PIPELINE, ADD_PIPELINE} from \"../constants\";\r\nimport Client from '~/Client'\r\n\r\nconst client = new Client()\r\n\r\nexport const setPipelineAction = (pipeline) => dispatch => dispatch({type: SET_PIPELINE, payload: pipeline})\r\n\r\nexport const getPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const getPipelineDetail = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item + \"/detail\",\r\n    method: \"POST\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: SET_PIPELINE_RESULT, payload: response.data}))\r\n\r\nexport const setPipelineList = () => dispatch => client.call({\r\n    uri: \"/pipeline/list\",\r\n    method: \"GET\"\r\n}).then(response => dispatch({type: SET_PIPELINE_LIST, payload: response.data}))\r\n\r\nexport const deletePipeline = (item) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"DELETE\"\r\n}).then(response => dispatch({type: DELETE_PIPELINE, payload: response.data}))\r\n\r\nexport const addPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\nexport const editPipeline = (item, jsonData) => dispatch => client.call({\r\n    uri: \"/pipeline/\" + item,\r\n    method: \"PUT\",\r\n    headers: {'Content-type': 'application/json'},\r\n    data: jsonData\r\n}).then(response => dispatch({type: ADD_PIPELINE, payload: response.data}))\r\n\r\n"],"sourceRoot":""}